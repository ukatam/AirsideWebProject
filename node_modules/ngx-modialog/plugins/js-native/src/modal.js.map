{"version":3,"sources":["../../../../../src/ngx-modialog/plugins/js-native/src/modal.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAA8C,MAAA,eAAA,CAAA;AAEvD,OAAO,EAGL,OAAO,EACP,YAAY,EACZ,KAAK,IAAI,MAAA,EACV,MAAM,cAAA,CAAe;AAEtB,OAAO,EAAE,qBAAA,EAAsB,MAAA,4BAAA,CAAA;AAC/B;IAEC,yBAAA;IADD;;OAEG;IACH,eADG,OAAoB;eAEnB,kBAAM,OAAO,CAAC;IAChB,CAAC;IACH;;OAEG;IACH,qBAHG,GAGH;QACI,MAAM,CAHC,IAAI,qBAAA,CAAsB,IAAC,EAAK,YAAA,CAAa,KAAC,CAAK,CAAC;IAI7D,CAAC;IACH;;OAEG;IACH,sBALG,GAKH;QACI,MAAM,CALC,IAAI,qBAAA,CAAsB,IAAC,EAAK,YAAA,CAAa,MAAC,CAAM,CAAC;IAM9D,CAAC;IACH;;OAEG;IACH,uBAPG,GAOH;QACI,MAAM,CAPC,IAAI,qBAAA,CAAsB,IAAC,EAAK,YAAA,CAAa,OAAC,CAAO,CAAC;IAQ/D,CAAC;IACH;;;;;OAKG;IAXA,sBAAA,GAYH,UAZG,SAAA,EAMD,IAAA,EAQiB,QAAgB;QAC/B,MAAM,CAZC,SAAA,CAAU;IAanB,CAAC;IAVI,gBAAA,GAAoC;QAa3C,EAZE,IAAA,EAAM,UAAA,EAAW;KAalB,CAZC;IAaF;;OAEG;IAbF,oBAAA,GAAA,cAAA,OAAA;QAeD,EAAC,IAAI,EAAE,OAAO,GAAG;KAChB,EAhBA,CAgBA,CAAC;IACF,YAAC;CA9CD,AA8CC,CA5CA,MAAA,GA4CA;SA5CA,KAAA;AA8CD;IACA,gBAAgB;IAChB,KAAK,CAAC,UAAU,CAAC;IACjB;;;OAGG;IACH,KAAK,CAAC,cAAc,CAAC;AACrB,CAAC","file":"modal.js","sourceRoot":"","sourcesContent":["import { Injectable, ResolvedReflectiveProvider as RRP } from '@angular/core';\n\nimport {\n  DialogRef,\n  Maybe,\n  Overlay,\n  DROP_IN_TYPE,\n  Modal as Modal_\n} from 'ngx-modialog';\n\nimport { JSNativePresetBuilder } from './presets/js-native-preset';\nexport class Modal extends Modal_ {\n/**\n * @param {?} overlay\n */\nconstructor(overlay: Overlay) {\n    super(overlay);\n  }\n/**\n * @return {?}\n */\nalert(): JSNativePresetBuilder {\n    return new JSNativePresetBuilder(this, DROP_IN_TYPE.alert);\n  }\n/**\n * @return {?}\n */\nprompt(): JSNativePresetBuilder {\n    return new JSNativePresetBuilder(this, DROP_IN_TYPE.prompt);\n  }\n/**\n * @return {?}\n */\nconfirm(): JSNativePresetBuilder {\n    return new JSNativePresetBuilder(this, DROP_IN_TYPE.confirm);\n  }\n/**\n * @param {?} dialogRef\n * @param {?} type\n * @param {?=} bindings\n * @return {?}\n */\nprotected create(dialogRef: DialogRef<any>,\n                   type: any,\n                   bindings?: RRP[]): Maybe<DialogRef<any>> {\n    return dialogRef;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n];\n}\n\nfunction Modal_tsickle_Closure_declarations() {\n/** @type {?} */\nModal.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nModal.ctorParameters;\n}\n\n\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}