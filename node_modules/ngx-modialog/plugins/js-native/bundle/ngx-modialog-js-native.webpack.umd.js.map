{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a276d9b9584414fcabe7","webpack:///external \"ngx-modialog\"","webpack:///./.tmp/ngx-modialog/plugins/js-native/src/modal.js","webpack:///external \"@angular/core\"","webpack:///./.tmp/ngx-modialog/plugins/js-native/src/js-native-modal-renderer.js","webpack:///./.tmp/ngx-modialog/plugins/js-native/src/modal-context.js","webpack:///./.tmp/ngx-modialog/plugins/js-native/src/presets/js-native-preset.js","webpack:///./.tmp/ngx-modialog/plugins/js-native/src/js-native.js","webpack:///./.tmp/ngx-modialog/plugins/js-native/src/js-native.module.js","webpack:///./.tmp/ngx-modialog/plugins/js-native/src/ngx-modialog-js-native.ng-flat.js"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA,+C;;;;;;;;;;;;ACAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACoB;AAC4B;AACjB;AAChC;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA;AACA;AACA,wCAAwC;AACxC,SAAS,+DAAiB;AAC1B,MAAM;AACN;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,iC;;;;;;ACrEA,+C;;;;;;;;;;;;ACAqB;AACE;AACvB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,oD;;;;;;;;;ACvDA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC6E;AAC9E,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA,uCAAuC,2BAA2B;AAClE,wCAAwC,4BAA4B;AACpE,kCAAkC,sBAAsB;AACxD,oDAAoD;AACpD;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,yC;;;;;;;;;;AC9DA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACe;AACsB;AACN;AAChC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA,kCAAkC,uCAAuC;AACzE;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,4C;;;;;;;;;;;;;;;;;;;ACnDgB;AAC4C;AAC5B;AACA;AACS;AACzC,qC;;;;;;;;;;;;;;ACLmB;AACU;AACb;AAChB,eAAsB,EAAE;AACxB,KAAK,gIAAsC;AAC3C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,4C;;;;;;;;;;;;;;;ACrCA;AAAA;AACA;AACA;AACiJ;AACjJ,0D","file":"dist_package/ngx-modialog/plugins/js-native/bundle/ngx-modialog-js-native.webpack.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ngx-modialog\"), require(\"@angular/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"ngx-modialog\", \"@angular/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngxModialog.jsNative\"] = factory(require(\"ngx-modialog\"), require(\"@angular/core\"));\n\telse\n\t\troot[\"ngxModialog.jsNative\"] = factory(root[\"ngx-modialog\"], root[\"@angular/core\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a276d9b9584414fcabe7","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ngx-modialog\"\n// module id = 0\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Injectable } from '@angular/core';\nimport { Overlay, DROP_IN_TYPE, Modal as Modal_ } from 'ngx-modialog';\nimport { JSNativePresetBuilder } from './presets/js-native-preset';\nvar Modal = (function (_super) {\n    __extends(Modal, _super);\n    /**\n     * @param {?} overlay\n     */\n    function Modal(overlay) {\n        return _super.call(this, overlay) || this;\n    }\n    /**\n     * @return {?}\n     */\n    Modal.prototype.alert = function () {\n        return new JSNativePresetBuilder(this, DROP_IN_TYPE.alert);\n    };\n    /**\n     * @return {?}\n     */\n    Modal.prototype.prompt = function () {\n        return new JSNativePresetBuilder(this, DROP_IN_TYPE.prompt);\n    };\n    /**\n     * @return {?}\n     */\n    Modal.prototype.confirm = function () {\n        return new JSNativePresetBuilder(this, DROP_IN_TYPE.confirm);\n    };\n    /**\n     * @param {?} dialogRef\n     * @param {?} type\n     * @param {?=} bindings\n     * @return {?}\n     */\n    Modal.prototype.create = function (dialogRef, type, bindings) {\n        return dialogRef;\n    };\n    Modal.decorators = [\n        { type: Injectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    Modal.ctorParameters = function () { return [\n        { type: Overlay, },\n    ]; };\n    return Modal;\n}(Modal_));\nexport { Modal };\nfunction Modal_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Modal.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    Modal.ctorParameters;\n}\n//# sourceMappingURL=modal.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/plugins/js-native/src/modal.js\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 2\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { DROP_IN_TYPE } from 'ngx-modialog';\nvar JSNativeModalRenderer = (function () {\n    function JSNativeModalRenderer() {\n    }\n    /**\n     * @param {?} dialog\n     * @param {?} vcRef\n     * @return {?}\n     */\n    JSNativeModalRenderer.prototype.render = function (dialog, vcRef) {\n        var /** @type {?} */ result;\n        switch (dialog.context.dialogType) {\n            case DROP_IN_TYPE.alert:\n                window.alert(dialog.context.message);\n                result = true;\n                break;\n            case DROP_IN_TYPE.prompt:\n                result = window.prompt(dialog.context.message, dialog.context.promptDefault);\n                break;\n            case DROP_IN_TYPE.confirm:\n                result = window.confirm(dialog.context.message);\n                break;\n        }\n        dialog.destroy = function () {\n        };\n        if (result === false) {\n            dialog.dismiss();\n        }\n        else {\n            dialog.close(result);\n        }\n        // we need to return ComponentRef<ModalOverlay> but a native dialog does'nt have that\n        // so we resolve an empty promise, the user of this renderer should expect that.\n        return ({});\n    };\n    JSNativeModalRenderer.decorators = [\n        { type: Injectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    JSNativeModalRenderer.ctorParameters = function () { return []; };\n    return JSNativeModalRenderer;\n}());\nexport { JSNativeModalRenderer };\nfunction JSNativeModalRenderer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    JSNativeModalRenderer.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    JSNativeModalRenderer.ctorParameters;\n}\n//# sourceMappingURL=js-native-modal-renderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/plugins/js-native/src/js-native-modal-renderer.js\n// module id = 3\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DROP_IN_TYPE, ModalOpenContextBuilder, ModalOpenContext, arrayUnion } from 'ngx-modialog';\nvar /** @type {?} */ DEFAULT_SETTERS = [\n    'promptDefault'\n];\nvar JSNativeModalContext = (function (_super) {\n    __extends(JSNativeModalContext, _super);\n    function JSNativeModalContext() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    JSNativeModalContext.prototype.normalize = function () {\n        if (!this.message)\n            this.message = '';\n        if (this.dialogType === undefined)\n            this.dialogType = DROP_IN_TYPE.alert;\n    };\n    return JSNativeModalContext;\n}(ModalOpenContext));\nexport { JSNativeModalContext };\nfunction JSNativeModalContext_tsickle_Closure_declarations() {\n    /** @type {?} */\n    JSNativeModalContext.prototype.promptDefault;\n    /** @type {?} */\n    JSNativeModalContext.prototype.dialogType;\n}\nvar JSNativeModalContextBuilder = (function (_super) {\n    __extends(JSNativeModalContextBuilder, _super);\n    /**\n     * @param {?=} defaultValues\n     * @param {?=} initialSetters\n     * @param {?=} baseType\n     */\n    function JSNativeModalContextBuilder(defaultValues, initialSetters, baseType) {\n        if (defaultValues === void 0) { defaultValues = undefined; }\n        if (initialSetters === void 0) { initialSetters = undefined; }\n        if (baseType === void 0) { baseType = undefined; }\n        return _super.call(this, defaultValues || {}, arrayUnion(DEFAULT_SETTERS, initialSetters || []), baseType || JSNativeModalContext\n        // https://github.com/Microsoft/TypeScript/issues/7234\n        ) || this;\n    }\n    return JSNativeModalContextBuilder;\n}(ModalOpenContextBuilder));\nexport { JSNativeModalContextBuilder };\nfunction JSNativeModalContextBuilder_tsickle_Closure_declarations() {\n    /**\n     * The default value for the prompt input\n     * @type {?}\n     */\n    JSNativeModalContextBuilder.prototype.promptDefault;\n}\n//# sourceMappingURL=modal-context.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/plugins/js-native/src/modal-context.js\n// module id = 4\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Modal } from '../modal';\nimport { JSNativeModalContextBuilder } from '../modal-context';\nimport { JSNativeModalRenderer } from '../js-native-modal-renderer';\nvar JSNativePresetBuilder = (function (_super) {\n    __extends(JSNativePresetBuilder, _super);\n    /**\n     * @param {?} modal\n     * @param {?} dialogType\n     */\n    function JSNativePresetBuilder(modal, dialogType) {\n        return _super.call(this, { modal: modal, dialogType: dialogType }) || this;\n    }\n    /**\n     * Hook to alter config and return bindings.\n     * @param {?} config\n     * @return {?}\n     */\n    JSNativePresetBuilder.prototype.$$beforeOpen = function (config) {\n        return [];\n    };\n    /**\n     * Open a modal window based on the configuration of this config instance.\n     * @param {?=} viewContainer If set opens the modal inside the supplied viewContainer\n     * @return {?} Promise<DialogRef>\n     */\n    JSNativePresetBuilder.prototype.open = function (viewContainer) {\n        var /** @type {?} */ context = this.toJSON();\n        if (!(context.modal instanceof Modal)) {\n            return (Promise.reject(new Error('Configuration Error: modal service not set.')));\n        }\n        var /** @type {?} */ overlayConfig = {\n            context: context,\n            renderer: new JSNativeModalRenderer(),\n            viewContainer: viewContainer,\n            bindings: typeof this.$$beforeOpen === 'function' && this.$$beforeOpen(context)\n        };\n        return context.modal.open(context.component, overlayConfig);\n    };\n    return JSNativePresetBuilder;\n}(JSNativeModalContextBuilder));\nexport { JSNativePresetBuilder };\n//# sourceMappingURL=js-native-preset.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/plugins/js-native/src/presets/js-native-preset.js\n// module id = 5\n// module chunks = 0","export { Modal } from './modal';\nexport { JSNativeModalContext, JSNativeModalContextBuilder } from './modal-context';\nexport { JSNativeModalRenderer } from './js-native-modal-renderer';\nexport { JSNativePresetBuilder } from './presets/js-native-preset';\nexport { JSNativeModalModule, providers } from './js-native.module';\n//# sourceMappingURL=js-native.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/plugins/js-native/src/js-native.js\n// module id = 6\n// module chunks = 0","import { NgModule } from '@angular/core';\nimport { Modal as BaseModal } from 'ngx-modialog';\nimport { Modal } from './modal';\nexport var /** @type {?} */ providers = [\n    { provide: BaseModal, useClass: Modal },\n    { provide: Modal, useClass: Modal }\n];\nvar JSNativeModalModule = (function () {\n    function JSNativeModalModule() {\n    }\n    /**\n     * @return {?}\n     */\n    JSNativeModalModule.getProviders = function () {\n        return providers;\n    };\n    JSNativeModalModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: providers\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    JSNativeModalModule.ctorParameters = function () { return []; };\n    return JSNativeModalModule;\n}());\nexport { JSNativeModalModule };\nfunction JSNativeModalModule_tsickle_Closure_declarations() {\n    /** @type {?} */\n    JSNativeModalModule.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    JSNativeModalModule.ctorParameters;\n}\n//# sourceMappingURL=js-native.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/plugins/js-native/src/js-native.module.js\n// module id = 7\n// module chunks = 0","/**\n * Generated bundle index. Do not edit.\n */\nexport { Modal, JSNativeModalContext, JSNativeModalContextBuilder, JSNativeModalRenderer, JSNativePresetBuilder, JSNativeModalModule, providers } from './js-native';\n//# sourceMappingURL=ngx-modialog-js-native.ng-flat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/plugins/js-native/src/ngx-modialog-js-native.ng-flat.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}