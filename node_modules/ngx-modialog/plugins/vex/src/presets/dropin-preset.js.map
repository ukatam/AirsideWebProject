{"version":3,"sources":["../../../../../../src/ngx-modialog/plugins/vex/src/presets/dropin-preset.ts"],"names":[],"mappings":";;;;;;;;;;AACA,OAAO,EACL,YAAY,EAEZ,MAAM,EACP,MAAM,cAAc,CAAC;AAEtB,OAAO,EAAE,eAAA,IAAmB,SAAA,EAAW,UAAA,IAAc,OAAA,EAAQ,MAAA,sBAAA,CAAA;AAC7D,OAAO,EAAE,YAAA,EAAc,mBAAA,EAAoB,MAAA,iBAAA,CAAA;AAE3C,IAAM,gBAAgB,CAAhB,cAAA,GAAiB;IACrB,SAAS,WAAA;IACT,OAAO,SAAA;IACP,KAAK,EAAE,IAAA;IACP,SAAS,EAAE,QAAA;CACZ,CAAC;AAEF,IAAM,gBAAgB,CAAhB,eAAA,GAAkB;IACtB,OAAO;IACP,WAAW;IACX,aAAa;CACd,CAAC;AACF;;GAEG;AACH;IACC,gCAAA;IADD;;IA8BA,CAAC;IAHD,sBAGG,mCAAA;QANH;;WAEG;aACH;YACI,MAAM,CAGC,IAAA,CAAK,UAAC,KAAc,YAAA,CAAa,MAAC,CAAM;QAFjD,CAAC;;;OAAA;IACH,mBAAC;AAAD,CA9BA,AA8BC,CA7BA,YAAA,GA6BA;;AAED;IACA;;;OAGG;IACH,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC;IAC/B;;;;;OAKG;IACH,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC;IAC7B;;;;;OAKG;IACH,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC;IACjC;;;;OAIG;IACH,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC;IACnC,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC;AAClC,CAAC;AAED;;GAEG;AACH;IA3BC,uCAAA;IA6CD;;;;OAIG;IACH,6BA3BG,KAAkB,EAAO,UAAY,EAAc,aAA8B;QAA9B,8BAAA,EAAA,yBAA8B;eA4BhF,kBACE,KAAK,EACL,MAAM,CAAM,MAAM,CAAC,EAAC,KAAK,OAAA,EAAE,UAAU,YAAA,EAAC,EAAE,cAAc,CAAC,EAAE,aAAa,IAAI,EAAE,CAAC,EAC7E,eAAe,EACf,YAAY,CACb;IACH,CAAC;IACH;;;OAGG;IACH,0CA9BG,GA8BH,UA9BG,MAAA;QA+BC,EAAE,CAAC,CAAC,MA9BC,CAAM,KAAC,CAAK,CAAC,CAAA;YA+BhB,IAAI,CA9BC,WAAC,CAAW,MAAC,CAAM,KAAC,CAAK,CAAC;QA+BjC,CAAC;QAED,MAAM,CAAC,CAAC,MA9BC,CAAM,UAAC,CAAU,CAAC,CAAA;YA+BzB,KA9BK,YAAA,CAAa,MAAC;gBA+BjB,MAAM,CA9BC,aAAC,GAAe,SAAA,CAAU;YA+BnC,KA9BK,YAAA,CAAa,OAAC;gBA+BjB,EAAE,CAAC,CAAC,MA9BC,CAAM,SAAC,CAAS,CAAC,CAAA;oBA+BpB,IAAI,CA9BC,eAAC,CAAe,MAAC,CAAM,SAAC,CAAS,CAAC;gBA+BzC,CAAC;gBACD,KAAK,CAAC;QACV,CAAC;QACD,MAAM,CA9BC,iBAAM,YAAC,YAAY,MAAC,CAAM,CAAC;IA+BpC,CAAC;IACH,0BAAC;AAAD,CAnDA,AAmDC,CA9EA,mBAAA,GA8EA;;AAED;IACA;;;OAGG;IACH,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC;IACtC;;;OAGG;IACH,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC;IACpC;;;OAGG;IACH,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC;IACxC;;;;OAIG;IACH,mBAAmB,CAAC,SAAS,CAAC,WAAW,CAAC;AAC1C,CAAC","file":"dropin-preset.js","sourceRoot":"","sourcesContent":["import { ResolvedReflectiveProvider } from '@angular/core';\nimport {\n  DROP_IN_TYPE,\n  FluentAssignMethod,\n  extend\n} from 'ngx-modialog';\nimport { Modal } from '../modal';\nimport { DialogFormModal as component, FormDropIn as content } from '../dialog-form-modal';\nimport { DialogPreset, DialogPresetBuilder } from './dialog-preset';\n\nconst /** @type {?} */ DEFAULT_VALUES = {\n  component,\n  content,\n  okBtn: 'OK',\n  cancelBtn: 'Cancel'\n};\n\nconst /** @type {?} */ DEFAULT_SETTERS = [\n  'okBtn',\n  'cancelBtn',\n  'placeholder'\n];\n/**\n * Data definition\n */\nexport class DropInPreset extends DialogPreset {\n/**\n * the message to display on the modal.\n */\nmessage: string;\n/**\n * OK button caption.\n * Default: OK\n * Set to false ('', undefined, null, false) to remove button.\n */\nokBtn: string;\n/**\n * Cancel button caption.\n * Default: Cancel\n * Set to false ('', undefined, null, false) to remove button.\n */\ncancelBtn: string;\n/**\n * A placeholder for the input element.\n * Valid only for prompt modal.\n */\nplaceholder: string;\n\n  dropInType: DROP_IN_TYPE;\n/**\n * @return {?}\n */\nget showInput(): boolean {\n    return this.dropInType === DROP_IN_TYPE.prompt;\n  }\n}\n\nfunction DropInPreset_tsickle_Closure_declarations() {\n/**\n * the message to display on the modal.\n * @type {?}\n */\nDropInPreset.prototype.message;\n/**\n * OK button caption.\n * Default: OK\n * Set to false ('', undefined, null, false) to remove button.\n * @type {?}\n */\nDropInPreset.prototype.okBtn;\n/**\n * Cancel button caption.\n * Default: Cancel\n * Set to false ('', undefined, null, false) to remove button.\n * @type {?}\n */\nDropInPreset.prototype.cancelBtn;\n/**\n * A placeholder for the input element.\n * Valid only for prompt modal.\n * @type {?}\n */\nDropInPreset.prototype.placeholder;\n/** @type {?} */\nDropInPreset.prototype.dropInType;\n}\n\n/**\n * A Preset representing all 3 drop ins (alert, prompt, confirm)\n */\nexport class DropInPresetBuilder extends DialogPresetBuilder<DropInPreset> {\n/**\n * the message to display on the modal.\n */\nmessage: FluentAssignMethod<string, this>;\n/**\n * The default Ok button caption.\n */\nokBtn: FluentAssignMethod<string, this>;\n/**\n * The default Cancel button caption.\n */\ncancelBtn: FluentAssignMethod<string, this>;\n/**\n * A placeholder for the input element.\n * Valid only for prompt modal.\n */\nplaceholder: FluentAssignMethod<string, this>;\n/**\n * @param {?} modal\n * @param {?} dropInType\n * @param {?=} defaultValues\n */\nconstructor(modal: Modal, dropInType: DROP_IN_TYPE, defaultValues: DropInPreset = undefined) {\n    super(\n      modal,\n      extend<any>(extend({modal, dropInType}, DEFAULT_VALUES), defaultValues || {}),\n      DEFAULT_SETTERS,\n      DropInPreset\n    );\n  }\n/**\n * @param {?} config\n * @return {?}\n */\n$$beforeOpen(config: DropInPreset): ResolvedReflectiveProvider[] {\n    if (config.okBtn) {\n      this.addOkButton(config.okBtn);\n    }\n\n    switch (config.dropInType) {\n      case DROP_IN_TYPE.prompt:\n        config.defaultResult = undefined;\n      case DROP_IN_TYPE.confirm:\n        if (config.cancelBtn) {\n          this.addCancelButton(config.cancelBtn);\n        }\n        break;\n    }\n    return super.$$beforeOpen(config);\n  }\n}\n\nfunction DropInPresetBuilder_tsickle_Closure_declarations() {\n/**\n * the message to display on the modal.\n * @type {?}\n */\nDropInPresetBuilder.prototype.message;\n/**\n * The default Ok button caption.\n * @type {?}\n */\nDropInPresetBuilder.prototype.okBtn;\n/**\n * The default Cancel button caption.\n * @type {?}\n */\nDropInPresetBuilder.prototype.cancelBtn;\n/**\n * A placeholder for the input element.\n * Valid only for prompt modal.\n * @type {?}\n */\nDropInPresetBuilder.prototype.placeholder;\n}\n\n"]}