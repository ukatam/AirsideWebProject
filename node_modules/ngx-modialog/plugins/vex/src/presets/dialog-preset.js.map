{"version":3,"sources":["../../../../../../src/ngx-modialog/plugins/vex/src/presets/dialog-preset.ts"],"names":[],"mappings":";;;;;;;;;;AACA,OAAO,EAEL,UAAU,EACV,MAAM,EACN,UAAU,EACX,MAAM,cAAc,CAAC;AACtB,OAAO,EAAE,eAAA,EAAiB,sBAAA,EAAuB,MAAA,kBAAA,CAAA;AAEjD,OAAO,EACL,eAAe,IAAI,SAAA,EAGpB,MAAM,sBAAsB,CAAC;AAG9B,IAAM,gBAAgB,CAAhB,eAAA,GAAkB;IACtB,SAAS;CACV,CAAC;AACF;;GAEG;AACH;IACC,gCAAA;IADD;;IAKA,CAAC;IAAD,mBAAC;AAAD,CALA,AAKC,CAJA,eAAA,GAIA;;AAED;IACA,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC;IACrC,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC;IAC/B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC;IAC/B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC;AACjC,CAAC;AAED;;;;GAIG;AACH;IACQ,uCAAyB;IAKjC;;;;;OAKG;IACH,6BAfG,KAAkB,EAgBP,aAfmB,EAgBnB,cAf2B,EAgB3B,QAfwB;QAaxB,8BAAA,EAAA,yBAfmB;QAgBnB,+BAAA,EAAA,0BAf2B;QAgB3B,yBAAA,EAAA,oBAfwB;eAgBlC,kBACE,MAAM,CAAM,EAAC,KAAK,OAAA,EAAE,SAAS,WAAA,EAAE,OAAO,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,EAAC,EAAE,aAAa,IAAI,EAAE,CAAC,EACtF,UAAU,CAAS,eAAe,EAAE,cAAc,IAAI,EAAE,CAAC,EACzD,QAAQ,IAAS,YAAY,CAAC,sDAAsD;SACrF;IACH,CAAC;IACH;;;;;OAKG;IACH,uCApBG,GAoBH,UApBG,GAAA,EAAA,OAAA,EAAA,OAAA;QAqBC,IAAI,gBAAgB,CApBhB,GAAA,GAAM;YAqBR,QAAQ,EApBE,GAAA;YAqBV,OAAO,EApBE,OAAA;YAqBT,OAAO,EApBE,OAAA;SAqBV,CApBC;QAsBF,IAAI,gBAAgB,CApBhB,GAAA,GAAM,UAAA,CAAW,SAAC,CAAS,CAAC;QAqBhC,CAAkB,CAAE,IApBlB,CAAI,GAAC,CAAuB,CAAA,CAAE,CAAC,IAAC,CAAI,GAAC,CAAG,CAAC;QAsB3C,MAAM,CApBC,IAAA,CAAK;IAqBd,CAAC;IACH;;;OAGG;IACH,yCAvBG,GAuBH,UAvBG,IAAA;QAAA,qBAAA,EAAA,WAAA;QAwBC,IAAI,CAvBC,SAAC,CAwBJ,uDAAuD,EACvD,IAAI,EACJ,UAAC,GAvBK,EAAW,MAAQ,IAAe,OAAA,GAAA,CAAI,MAAC,CAAM,KAAC,CAAK,GAAC,CAAG,MAAC,CAAM,OAAC,CAAO,aAAC,CAAa,EAAlD,CAAkD,CAwB3F,CAvBC;QAwBF,MAAM,CAvBC,IAAA,CAAK;IAwBd,CAAC;IACH;;;OAGG;IACH,6CA1BG,GA0BH,UA1BG,IAAA;QAAA,qBAAA,EAAA,eAAA;QA2BC,IAAI,CA1BC,SAAC,CA2BJ,wDAAwD,EACxD,IAAI,EACJ,UAAC,GA1BK,EAAW,MAAQ,IAAe,OAAA,GAAA,CAAI,MAAC,CAAM,OAAC,EAAO,EAAnB,CAAmB,CA2B5D,CA1BC;QA2BF,MAAM,CA1BC,IAAA,CAAK;IA2Bd,CAAC;IACH,0BAAC;AAAD,CAhEA,AAgEC,CA/DO,sBAAsB,GA+D7B;;AAED;IACA;;;OAGG;IACH,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC;AACtC,CAAC","file":"dialog-preset.js","sourceRoot":"","sourcesContent":["import { Type } from '@angular/core';\nimport {\n  FluentAssignMethod,\n  privateKey,\n  extend,\n  arrayUnion\n} from 'ngx-modialog';\nimport { VEXModalContext, VEXModalContextBuilder } from '../modal-context';\nimport { Modal } from '../modal';\nimport {\n  DialogFormModal as component,\n  VEXButtonHandler,\n  VEXButtonConfig\n} from '../dialog-form-modal';\n\n\nconst /** @type {?} */ DEFAULT_SETTERS = [\n  'content'\n];\n/**\n * Data definition\n */\nexport class DialogPreset extends VEXModalContext {\n  defaultResult: any;\n  content: Type<any>;\n  buttons: VEXButtonConfig[];\n  showInput: any;\n}\n\nfunction DialogPreset_tsickle_Closure_declarations() {\n/** @type {?} */\nDialogPreset.prototype.defaultResult;\n/** @type {?} */\nDialogPreset.prototype.content;\n/** @type {?} */\nDialogPreset.prototype.buttons;\n/** @type {?} */\nDialogPreset.prototype.showInput;\n}\n\n/**\n * A Preset representing the configuration needed to open MessageModal.\n * This is an abstract implementation with no concrete behaviour.\n * Use derived implementation.\n */\nexport class DialogPresetBuilder<T extends DialogPreset>\nextends VEXModalContextBuilder<T> {\n/**\n * the message to display on the modal.\n */\ncontent: FluentAssignMethod<Type<any>, this>;\n/**\n * @param {?} modal\n * @param {?=} defaultValues\n * @param {?=} initialSetters\n * @param {?=} baseType\n */\nconstructor(modal: Modal,\n              defaultValues: T = undefined,\n              initialSetters: string[] = undefined,\n              baseType: new () => T = undefined) {\n    super(\n      extend<any>({modal, component, buttons: [], defaultResult: true}, defaultValues || {}),\n      arrayUnion<string>(DEFAULT_SETTERS, initialSetters || []),\n      baseType || <any>DialogPreset // https://github.com/Microsoft/TypeScript/issues/7234\n    );\n  }\n/**\n * @param {?} css\n * @param {?} caption\n * @param {?} onClick\n * @return {?}\n */\naddButton(css: string, caption: string, onClick: VEXButtonHandler): this {\n    let /** @type {?} */ btn = {\n      cssClass: css,\n      caption: caption,\n      onClick: onClick\n    };\n\n    let /** @type {?} */ key = privateKey('buttons');\n    ( /** @type {?} */((this[key] as VEXButtonConfig[]))).push(btn);\n\n    return this;\n  }\n/**\n * @param {?=} text\n * @return {?}\n */\naddOkButton(text: string = 'OK'): this {\n    this.addButton(\n      'vex-dialog-button-primary vex-dialog-button vex-first',\n      text,\n      (cmp: component, $event: MouseEvent) => cmp.dialog.close(cmp.dialog.context.defaultResult)\n    );\n    return this;\n  }\n/**\n * @param {?=} text\n * @return {?}\n */\naddCancelButton(text: string = 'CANCEL'): this {\n    this.addButton(\n      'vex-dialog-button-secondary vex-dialog-button vex-last',\n      text,\n      (cmp: component, $event: MouseEvent) => cmp.dialog.dismiss()\n    );\n    return this;\n  }\n}\n\nfunction DialogPresetBuilder_tsickle_Closure_declarations() {\n/**\n * the message to display on the modal.\n * @type {?}\n */\nDialogPresetBuilder.prototype.content;\n}\n\n"]}