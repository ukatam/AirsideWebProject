{"version":3,"sources":["../../../../../src/ngx-modialog/plugins/bootstrap/src/message-modal.component.ts"],"names":[],"mappings":"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","file":"message-modal.component.js","sourceRoot":"","sourcesContent":["import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { DialogRef, ModalComponent } from 'ngx-modialog';\n\nimport { MessageModalPreset } from './presets/message-modal-preset';\n\nexport interface BSMessageModalButtonHandler {\n  (cmp: ModalComponent<MessageModalPreset>, $event: MouseEvent): void;\n}\n\n/**\n * Interface for button definition\n */\nexport interface BSMessageModalButtonConfig {\n  cssClass: string;\n  caption: string;\n  onClick: BSMessageModalButtonHandler;\n}\nexport class BSMessageModalTitle {\npublic context: MessageModalPreset;\n/**\n * @param {?} dialog\n */\nconstructor(public dialog: DialogRef<MessageModalPreset>) {\n    this.context = dialog.context;\n  }\n/**\n * @return {?}\n */\nget titleHtml(): number {\n    return this.context.titleHtml ? 1 : 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'modal-title',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div [ngClass]=\"context.headerClass\" [ngSwitch]=\"titleHtml\">\n      <button *ngIf=\"context.showClose\" type=\"button\" class=\"close\" \n              aria-label=\"Close\" (click)=\"dialog.dismiss()\">\n          <span aria-hidden=\"true\">Ã—</span>\n      </button>\n      <div *ngSwitchCase=\"1\" [innerHtml]=\"context.titleHtml\"></div>\n      <h3 *ngSwitchDefault class=\"modal-title\">{{context.title}}</h3>\n </div>`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DialogRef, },\n];\n}\n\nfunction BSMessageModalTitle_tsickle_Closure_declarations() {\n/** @type {?} */\nBSMessageModalTitle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBSMessageModalTitle.ctorParameters;\n/** @type {?} */\nBSMessageModalTitle.prototype.context;\n/** @type {?} */\nBSMessageModalTitle.prototype.dialog;\n}\n\nexport class BSMessageModalBody {\npublic context: MessageModalPreset;\n/**\n * @param {?} dialog\n */\nconstructor(public dialog: DialogRef<MessageModalPreset>) {\n    this.context = dialog.context;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'modal-body',\n  encapsulation: ViewEncapsulation.None,\n  styles: [`.form-group {\n    margin-top: 10px;\n  }`],\n  template: `<div [ngClass]=\"context.bodyClass\"> \n    <div [innerHtml]=\"context.message\"></div>\n      <div *ngIf=\"context.showInput\" class=\"form-group\">\n        <input autofocus #input\n            name=\"bootstrap\" \n            type=\"text\" \n            class=\"form-control\"\n            [value]=\"context.defaultValue\"\n            (change)=\"context.defaultValue = input.value\"  \n            placeholder=\"{{context.placeholder}}\">\n      </div>\n    </div>\n`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DialogRef, },\n];\n}\n\nfunction BSMessageModalBody_tsickle_Closure_declarations() {\n/** @type {?} */\nBSMessageModalBody.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBSMessageModalBody.ctorParameters;\n/** @type {?} */\nBSMessageModalBody.prototype.context;\n/** @type {?} */\nBSMessageModalBody.prototype.dialog;\n}\n\n/**\n * Represents the modal footer for storing buttons.\n */\nexport class BSModalFooter {\n/**\n * @param {?} dialog\n */\nconstructor(public dialog: DialogRef<MessageModalPreset>) {\n  }\n/**\n * @param {?} btn\n * @param {?} $event\n * @return {?}\n */\nonClick(btn: BSMessageModalButtonConfig, $event: MouseEvent) {\n    $event.stopPropagation();\n    btn.onClick(this, $event);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'modal-footer',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div [ngClass]=\"dialog.context.footerClass\">\n    <button *ngFor=\"let btn of dialog.context.buttons;\"\n            [ngClass]=\"btn.cssClass\"\n            (click)=\"onClick(btn, $event)\">{{btn.caption}}</button>\n</div>`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DialogRef, },\n];\n}\n\nfunction BSModalFooter_tsickle_Closure_declarations() {\n/** @type {?} */\nBSModalFooter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBSModalFooter.ctorParameters;\n/** @type {?} */\nBSModalFooter.prototype.dialog;\n}\n\n/**\n * A Component representing a generic bootstrap modal content element.\n * \n * By configuring a MessageModalContext instance you can:\n * \n *  Header:\n *      - Set header container class (default: modal-header)\n *      - Set title text (enclosed in H3 element)\n *      - Set title html (overrides text)\n * \n *  Body:\n *      - Set body container class.  (default: modal-body)\n *      - Set body container HTML.\n * \n *  Footer:\n *      - Set footer class.  (default: modal-footer)\n *      - Set button configuration (from 0 to n)\n */\nexport class BSMessageModal implements ModalComponent<MessageModalPreset> {\n/**\n * @param {?} dialog\n */\nconstructor(public dialog: DialogRef<MessageModalPreset>) {\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'modal-content',\n  encapsulation: ViewEncapsulation.None,\n  template: `<modal-title></modal-title><modal-body></modal-body><modal-footer></modal-footer>`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DialogRef, },\n];\n}\n\nfunction BSMessageModal_tsickle_Closure_declarations() {\n/** @type {?} */\nBSMessageModal.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBSMessageModal.ctorParameters;\n/** @type {?} */\nBSMessageModal.prototype.dialog;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}