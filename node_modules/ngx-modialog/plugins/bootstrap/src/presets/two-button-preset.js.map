{"version":3,"sources":["../../../../../../src/ngx-modialog/plugins/bootstrap/src/presets/two-button-preset.ts"],"names":[],"mappings":"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","file":"two-button-preset.js","sourceRoot":"","sourcesContent":["import { ResolvedReflectiveProvider } from '@angular/core';\nimport {\n  Modal,\n  FluentAssignMethod,\n  extend,\n  arrayUnion\n} from 'ngx-modialog';\nimport { BSMessageModal } from '../message-modal.component';\nimport { MessageModalPresetBuilder } from './message-modal-preset';\nimport { OneButtonPreset } from './one-button-preset';\n\n\nexport interface TwoButtonPreset extends OneButtonPreset {\n  /**\n   * Caption for the Cancel button.\n   * Default: Cancel\n   */\n  cancelBtn: string;\n\n  /**\n   * A Class for the Cancel button.\n   * Default: btn btn-default\n   */\n  cancelBtnClass: string;\n}\n/**\n * Common two button preset\n * @abstract\n */\nexport abstract class AbstractTwoButtonPresetBuilder extends MessageModalPresetBuilder<TwoButtonPreset> {\n  okBtn: FluentAssignMethod<string, this>;\n  okBtnClass: FluentAssignMethod<string, this>;\n  cancelBtn: FluentAssignMethod<string, this>;\n  cancelBtnClass: FluentAssignMethod<string, this>;\n/**\n * @param {?} modal\n * @param {?=} defaultValues\n * @param {?=} initialSetters\n */\nconstructor(modal: Modal, defaultValues: TwoButtonPreset = undefined,\n              initialSetters: string[] = []) {\n    super(extend<any>({\n      modal: modal,\n      okBtn: 'OK',\n      okBtnClass: 'btn btn-primary',\n      cancelBtn: 'Cancel',\n      cancelBtnClass: 'btn btn-default'\n    }, defaultValues || {}), arrayUnion<string>([\n      'okBtn',\n      'okBtnClass',\n      'cancelBtn',\n      'cancelBtnClass',\n    ], initialSetters));\n  }\n/**\n * @param {?} config\n * @return {?}\n */\n$$beforeOpen(config: TwoButtonPreset): ResolvedReflectiveProvider[] {\n    this.addButton(\n      config.cancelBtnClass,\n      config.cancelBtn,\n      (cmp: BSMessageModal, $event: MouseEvent) => cmp.dialog.dismiss()\n    );\n\n    return super.$$beforeOpen(config);\n  }\n}\n\nfunction AbstractTwoButtonPresetBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nAbstractTwoButtonPresetBuilder.prototype.okBtn;\n/** @type {?} */\nAbstractTwoButtonPresetBuilder.prototype.okBtnClass;\n/** @type {?} */\nAbstractTwoButtonPresetBuilder.prototype.cancelBtn;\n/** @type {?} */\nAbstractTwoButtonPresetBuilder.prototype.cancelBtnClass;\n}\n\n/**\n * A Preset for a classic 2 button modal window.\n */\nexport class TwoButtonPresetBuilder extends AbstractTwoButtonPresetBuilder {\n/**\n * @param {?} modal\n * @param {?=} defaultValues\n */\nconstructor(modal: Modal, defaultValues: TwoButtonPreset = undefined) {\n    super(modal, defaultValues);\n  }\n/**\n * @param {?} config\n * @return {?}\n */\n$$beforeOpen(config: TwoButtonPreset): ResolvedReflectiveProvider[] {\n    this.addButton(\n      config.okBtnClass,\n      config.okBtn,\n      (cmp: BSMessageModal, $event: MouseEvent) => cmp.dialog.close(true)\n    );\n\n    return super.$$beforeOpen(config);\n  }\n}\n\nexport interface PromptPreset extends TwoButtonPreset {\n  showInput: boolean;\n  /** Default value shown in the prompt. */\n  defaultValue: string;\n  /** A placeholder for the input element. */\n  placeholder: string;\n\n}\nexport class PromptPresetBuilder extends AbstractTwoButtonPresetBuilder {\n  placeholder: FluentAssignMethod<string, this>;\n  defaultValue: FluentAssignMethod<string, this>;\n/**\n * @param {?} modal\n * @param {?=} defaultValues\n */\nconstructor(modal: Modal, defaultValues: PromptPreset = undefined) {\n    super(modal, extend<any>({showInput: true, defaultValue: ''}, defaultValues || {}),\n      ['placeholder', 'defaultValue']);\n  }\n/**\n * @param {?} config\n * @return {?}\n */\n$$beforeOpen(config: PromptPreset): ResolvedReflectiveProvider[] {\n    this.addButton(\n      config.okBtnClass,\n      config.okBtn,\n      (cmp: BSMessageModal, $event: MouseEvent) =>\n        cmp.dialog.close(( /** @type {?} */((cmp.dialog.context as PromptPreset))).defaultValue)\n    );\n\n    return super.$$beforeOpen(config);\n  }\n}\n\nfunction PromptPresetBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nPromptPresetBuilder.prototype.placeholder;\n/** @type {?} */\nPromptPresetBuilder.prototype.defaultValue;\n}\n\n\n"]}