{"version":3,"sources":["../../../../../src/ngx-modialog/plugins/bootstrap/src/modal.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,aAAA,EAAc,MAAA,6BAAA,CAAA;AAEvB,OAAO,EACL,UAAU,EAEX,MAAM,eAAA,CAAgB;AAEvB,OAAO,EAGL,OAAO,EAEP,KAAK,IAAI,MAAA,EACT,WAAW,EACX,gBAAgB,EACjB,MAAM,cAAA,CAAe;AAEtB,OAAO,EAAE,gBAAA,EAAiB,MAAA,6BAAA,CAAA;AAE1B,OAAO,EAAE,sBAAA,EAAuB,MAAA,6BAAA,CAAA;AAChC,OAAO,EAAE,sBAAA,EAAwB,mBAAA,EAAoB,MAAA,6BAAA,CAAA;AAErD,iCAAiC;AACjC,6BAA6B;AAC7B,IAAM,gBAAe,CAAf,KAAA,GAAiB,CAAA,CAAE,OAAO,QAAA,KAAa,WAAA,IAAe,CAAA,QAAE,CAAQ,CAAC;AAEvE,IAAI,gBAAgB,CAAhB,cAAA,GAAyB,IAAA,CAAK;AAClC;;;GAGG;AACH,MAAC;IACC,cAAc,GAAG,MAAA,CAAO;AAC1B,CAAC;AACD;IAEC,yBAAA;IADD;;OAEG;IACH,eADG,OAAoB;eAEnB,kBAAM,OAAO,CAAC;IAChB,CAAC;IACH;;OAEG;IACH,qBAHG,GAGH;QACI,MAAM,CAHC,IAAI,sBAAA,CAAuB,IAAC,EAAI,gBAAA,CAAA,CAAM,EAAC,UAAC,EAAW,KAAA,EAAM,CAAA,CAAC,CAAC;IAIpE,CAAC;IACH;;OAEG;IACH,sBALG,GAKH;QACI,MAAM,CALC,IAAI,mBAAA,CAAoB,IAAC,EAAI,gBAAA,CAAA,CAAM,EAAC,UAAC,EAAW,IAAA,EAAM,QAAA,EAAU,IAAA,EAAK,CAAA,CAAC,CAAC;IAMhF,CAAC;IACH;;OAEG;IACH,uBAPG,GAOH;QACI,MAAM,CAPC,IAAI,sBAAA,CAAuB,IAAC,EAAI,gBAAA,CAAA,CAAM,EAAC,UAAC,EAAW,IAAA,EAAM,QAAA,EAAU,IAAA,EAAK,CAAA,CAAC,CAAC;IAQnF,CAAC;IACH;;;;;OAKG;IAXA,sBAAA,GAYH,UAZG,SAAA,EAagB,OAAyB,EACzB,QAAgB;QAFnC,iBA8CG;QA1CC,IAAM,gBAAgB,CAZhB,WAAA,GAAc,IAAA,CAAK,cAAC,CAAc,SAAC,EAAU,WAAA,CAAY,CAAC;QAahE,IAAM,gBAAgB,CAZhB,YAAA,GAAe,IAAA,CAAK,eAAC,CAAe,SAAC,EAAU,gBAAA,EAAkB,OAAA,EAAS,QAAA,CAAS,CAAC;QAc1F,IAAI,gBAAgB,CAZhB,OAAA,GAAU,SAAA,CAAU,UAAC,CAAU,QAAC,CAAQ;QAa5C,IAAI,gBAAgB,CAZhB,QAAA,GAAW,WAAA,CAAY,QAAC,CAAQ;QAapC,IAAI,gBAAgB,CAZhB,SAAA,GAAY,YAAA,CAAa,QAAC,CAAQ;QActC,SAAS,CAZC,SAAC,GAAW,OAAA,CAAQ,aAAC,EAAa,GAAI,OAAA,CAAQ,UAAC,EAAU,CAAE;QAcrE,yDAAyD;QACzD,EAAE,CAAC,CAAC,KAZC,IAAQ,CAAA,QAAE,CAAQ,IAAC,CAAI,SAAC,CAAS,QAAC,CAAQ,YAAC,CAAY,CAAC,CAAC,CAAA;YAa5D,QAAQ,CAZC,IAAC,CAAI,SAAC,CAAS,GAAC,CAAG,YAAC,CAAY,CAAC;QAa5C,CAAC;QAGD,EAAE,CAAC,CAAC,SAZC,CAAS,SAAC,CAAS,CAAC,CAAA;YAavB,QAAQ,CAZC,QAAC,CAAQ,UAAC,EAAW,UAAA,CAAW,CAAC;QAa5C,CAAC;QACD,QAAQ,CAZC,QAAC,CAAQ,qBAAC,EAAsB,IAAA,CAAK,CAAC;QAc/C,QAAQ,CAZC,QAAC,CAAQ,cAAC,CAAc,CAAC;QAalC,SAAS,CAZC,QAAC,CAAQ,cAAC,CAAc,CAAC;QAcnC,EAAE,CAAC,CAAC,YAZC,CAAY,QAAC,CAAQ,aAAC,CAAa,CAAC,CAAA;YAavC,YAAY,CAZC,QAAC,CAAQ,aAAC,CAAa,KAAC,EAAK,CAAE;QAa9C,CAAC;QAED,OAAO,CAZC,aAAC,CAAa;YAapB,IAAM,gBAAgB,CAZhB,SAAA,GAAY,IAAI,gBAAA,EAAsB,CAAG;YAa/C,QAAQ,CAZC,WAAC,CAAW,cAAC,CAAc,CAAC;YAarC,SAAS,CAZC,WAAC,CAAW,cAAC,CAAc,CAAC;YActC,aAAa,CAZC,IAAC,CAAI,QAAC,CAAQ,eAAC,EAAe,EAAG,SAAA,CAAU,eAAC,EAAe,EAAG,UAAA,EAAE,EAAG,EAAA,IAAO,OAAA,CAAA,EAAE,EAAE,EAAC,CAAE,EAAP,CAAO,CAAC;iBAa7F,SAZC,CAAU,UAAA,OAAA;gBAaV,KAAK,IAZI,KAAA,CAAK,OAAC,CAAO,gBAAC,CAAgB,SAAC,CAAS,KAAK,CAAA,IAAK,QAAA,CAAS,IAAC,CAAI,SAAC,CAAS,MAAC,CAAM,YAAC,CAAY,CAAC;gBAaxG,SAAS,CAZC,OAAC,EAAO,CAAE;YAatB,CAAC,CAZC,CAAC;YAOT,MAAA,CALW,SAAA,CAAU,OAAC,CAAO;QAa3B,CAAC,CAZC,CAAC;QAcH,MAAM,CAZC,SAAA,CAAU;IAanB,CAAC;IAXI,gBAAA,GAAoC;QAa3C,EAZE,IAAA,EAAM,UAAA,EAAW;KAalB,CAZC;IAaF;;OAEG;IAbF,oBAAA,GAAA,cAAA,OAAA;QAeD,EAAC,IAAI,EAAE,OAAO,GAAG;KAChB,EAhBA,CAgBA,CAAC;IACF,YAAC;CAvFD,AAuFC,CArFA,MAAA,GAqFA;SArFA,KAAA;AAuFD;IACA,gBAAgB;IAChB,KAAK,CAAC,UAAU,CAAC;IACjB;;;OAGG;IACH,KAAK,CAAC,cAAc,CAAC;AACrB,CAAC","file":"modal.js","sourceRoot":"","sourcesContent":["import { combineLatest } from 'rxjs/operator/combineLatest';\n\nimport {\n  Injectable,\n  ResolvedReflectiveProvider as RRP\n} from '@angular/core';\n\nimport {\n  Maybe,\n  ContainerContent,\n  Overlay,\n  DialogRef,\n  Modal as Modal_,\n  CSSBackdrop,\n  PromiseCompleter\n} from 'ngx-modialog';\n\nimport { BSModalContainer } from './modal-container.component';\n\nimport { OneButtonPresetBuilder } from './presets/one-button-preset';\nimport { TwoButtonPresetBuilder, PromptPresetBuilder } from './presets/two-button-preset';\n\n// TODO: use DI factory for this.\n// TODO: consolidate dup code\nconst /** @type {?} */ isDoc: boolean = !(typeof document === 'undefined' || !document);\n\nlet /** @type {?} */ animationClass: string = 'in';\n/**\n * Execute this method to flag that you are working with Bootstrap version 4.\n * @return {?}\n */\nexport function bootstrap4Mode(): void {\n  animationClass = 'show';\n}\nexport class Modal extends Modal_ {\n/**\n * @param {?} overlay\n */\nconstructor(overlay: Overlay) {\n    super(overlay);\n  }\n/**\n * @return {?}\n */\nalert(): OneButtonPresetBuilder {\n    return new OneButtonPresetBuilder(this, /** @type {?} */(( <any>{isBlocking: false})));\n  }\n/**\n * @return {?}\n */\nprompt(): PromptPresetBuilder {\n    return new PromptPresetBuilder(this, /** @type {?} */(( <any>{isBlocking: true, keyboard: null})));\n  }\n/**\n * @return {?}\n */\nconfirm(): TwoButtonPresetBuilder {\n    return new TwoButtonPresetBuilder(this, /** @type {?} */(( <any>{isBlocking: true, keyboard: null})));\n  }\n/**\n * @param {?} dialogRef\n * @param {?} content\n * @param {?=} bindings\n * @return {?}\n */\nprotected create(dialogRef: DialogRef<any>,\n                   content: ContainerContent,\n                   bindings?: RRP[]): Maybe<DialogRef<any>> {\n\n    const /** @type {?} */ backdropRef = this.createBackdrop(dialogRef, CSSBackdrop);\n    const /** @type {?} */ containerRef = this.createContainer(dialogRef, BSModalContainer, content, bindings);\n\n    let /** @type {?} */ overlay = dialogRef.overlayRef.instance;\n    let /** @type {?} */ backdrop = backdropRef.instance;\n    let /** @type {?} */ container = containerRef.instance;\n\n    dialogRef.inElement ? overlay.insideElement() : overlay.fullscreen();\n\n    // add body class if this is the only dialog in the stack\n    if (isDoc && !document.body.classList.contains('modal-open')) {\n      document.body.classList.add('modal-open');\n    }\n\n\n    if (dialogRef.inElement) {\n      backdrop.setStyle('position', 'absolute');\n    }\n    backdrop.addClass('modal-backdrop fade', true);\n\n    backdrop.addClass(animationClass);\n    container.addClass(animationClass);\n\n    if (containerRef.location.nativeElement) {\n      containerRef.location.nativeElement.focus();\n    }\n\n    overlay.beforeDestroy(() => {\n      const /** @type {?} */ completer = new PromiseCompleter<void>();\n      backdrop.removeClass(animationClass);\n      container.removeClass(animationClass);\n\n      combineLatest.call(backdrop.myAnimationEnd$(), container.myAnimationEnd$(), (s1, s2) => [s1,s2])\n        .subscribe( sources => {\n          isDoc && this.overlay.groupStackLength(dialogRef) === 1 && document.body.classList.remove('modal-open');\n          completer.resolve();\n        });\n\n      return completer.promise;\n    });\n\n    return dialogRef;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n];\n}\n\nfunction Modal_tsickle_Closure_declarations() {\n/** @type {?} */\nModal.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nModal.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}