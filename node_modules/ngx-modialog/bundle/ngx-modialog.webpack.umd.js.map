{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 07f0b854dea4b6f977f7","webpack:///external \"@angular/core\"","webpack:///./.tmp/ngx-modialog/src/framework/utils.js","webpack:///./.tmp/ngx-modialog/src/models/dialog-ref.js","webpack:///./.tmp/ngx-modialog/src/components/base-dynamic-component.js","webpack:///./.tmp/ngx-modialog/src/components/index.js","webpack:///./.tmp/ngx-modialog/src/framework/createComponent.js","webpack:///./.tmp/ngx-modialog/src/models/tokens.js","webpack:///./.tmp/ngx-modialog/src/overlay/index.js","webpack:///./.tmp/ngx-modialog/src/providers/index.js","webpack:///./~/rxjs/Subscriber.js","webpack:///./~/rxjs/Subscription.js","webpack:///./~/rxjs/symbol/rxSubscriber.js","webpack:///./~/rxjs/util/root.js","webpack:///./.tmp/ngx-modialog/src/providers/outside-event-plugin.js","webpack:///./.tmp/ngx-modialog/src/framework/fluent-assign.js","webpack:///./.tmp/ngx-modialog/src/models/errors.js","webpack:///./.tmp/ngx-modialog/src/models/modal-context.js","webpack:///./.tmp/ngx-modialog/src/models/overlay-context.js","webpack:///./.tmp/ngx-modialog/src/models/vc-ref-store.js","webpack:///./~/rxjs/Observer.js","webpack:///./~/rxjs/Subject.js","webpack:///./~/rxjs/util/errorObject.js","webpack:///./~/rxjs/util/isFunction.js","webpack:///./.tmp/ngx-modialog/src/ngx-modialog.js","webpack:///./.tmp/ngx-modialog/src/components/css-backdrop.js","webpack:///./.tmp/ngx-modialog/src/components/css-dialog-container.js","webpack:///./.tmp/ngx-modialog/src/models/dialog-ref-stack.js","webpack:///./.tmp/ngx-modialog/src/models/modal-open-context.js","webpack:///./.tmp/ngx-modialog/src/ngx-modialog.module.js","webpack:///./.tmp/ngx-modialog/src/ngx-modialog.ng-flat.js","webpack:///./.tmp/ngx-modialog/src/overlay/overlay.component.js","webpack:///./.tmp/ngx-modialog/src/overlay/overlay.directives.js","webpack:///./.tmp/ngx-modialog/src/overlay/overlay.service.js","webpack:///./.tmp/ngx-modialog/src/providers/dom-modal-renderer.js","webpack:///./.tmp/ngx-modialog/src/providers/modal.js","webpack:///./~/rxjs/Observable.js","webpack:///./~/rxjs/SubjectSubscription.js","webpack:///./~/rxjs/operator/filter.js","webpack:///./~/rxjs/symbol/observable.js","webpack:///./~/rxjs/util/ObjectUnsubscribedError.js","webpack:///./~/rxjs/util/UnsubscriptionError.js","webpack:///./~/rxjs/util/isArray.js","webpack:///./~/rxjs/util/isObject.js","webpack:///./~/rxjs/util/toSubscriber.js","webpack:///./~/rxjs/util/tryCatch.js","webpack:///(webpack)/buildin/global.js","webpack:///external \"@angular/common\"","webpack:///external \"@angular/platform-browser\""],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA,+C;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE,WAAW;AAChC,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,0CAA0C,+BAA+B,EAAE;AAC3E;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,wBAAwB,WAAW,YAAY,MAAM,OAAO,QAAQ;AACpE,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,2BAA2B,yBAAyB,EAAE;AACtD,gBAAgB;AAChB;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,YAAY;AACZ;AACA,iBAAwB;AACxB,iC;;;;;;;;;;;;AC5FkB;AACS;AACE;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,oCAAoC,mCAAmC,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,6DAA6D,EAAE;AAC/D;AACA;AACA;AACA,oCAAoC,qCAAqC,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C,uCAAuC,yBAAyB,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,wCAAwC,EAAE;AACnE;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,sC;;;;;;;;;;;;;AC1JkB;AACD;AACS;AAC1B,eAAe,EAAE;AACjB;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,uBAAuB,EAAE;AAChG,sEAAsE,uBAAuB,EAAE;AAC/F;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA,mCAAmC,wEAAwE,EAAE;AAC7G;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA,mCAAmC,yEAAyE,EAAE;AAC9G;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mHAA6D,4CAA4C,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,kD;;;;;;;;;;;;;AChJ+B;AACT;AACO;AAC7B,WAAW,iBAAiB;AAC5B,WAAW,sBAAsB;AACjC,iC;;;;;;;;;;ACLuD;AACvD;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2C;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,8EAA8E;AAC9E;AACA,CAAC;AACO;AACR,kC;;;;;;;;;;;;;;ACxB+C;AACxB;AACL;AAClB,iC;;;;;;;;;;;;;ACH6B;AACb;AACgB;AAChC,iC;;;;;;;ACHA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,IAAI,mBAAmB,mBAAmB,eAAe;AACzD,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAkC;AACjD;AACA,eAAe,wBAAwB;AACvC;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,aAAa;AAClF;AACA;AACA;AACA,eAAe,sBAAsB;AACrC,eAAe,wBAAwB;AACvC;AACA,eAAe,iBAAiB;AAChC;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,yCAAyC,YAAY;AACrD;AACA,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,6CAA6C;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,sC;;;;;;;ACvQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA,+CAA+C,mGAAmG,EAAE;AACpJ;AACA,wC;;;;;;;AChMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;8CCTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gC;;;;;;;;;;;AClBA;AAAA;AACA;AACqB;AACN;AACf;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,2BAA2B,EAAE,wEAAwE,qCAAqC,qBAAqB,EAAE,EAAE,EAAE;AACrK;AACA;AACA,gCAAgC,2EAA2E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,oCAAoC,6BAA6B,EAAE;AACnE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gD;;;;;;;;;;;ACjHA;AAAA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,iCAAiC,kCAAkC,EAAE;AACrE,8BAA8B,uBAAuB,EAAE;AACvD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,kCAAkC,iEAAiE,EAAE;AACrG;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA;AACA,wCAAwC;AACxC;AACA,2BAA2B;AAC3B,YAAY;AACZ;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uBAAuB,EAAE,+CAA+C,EAAE;AAC1E,mDAAmD,EAAE;AACrD;AACA;AACA,8BAA8B,sBAAsB;AACpD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,sCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG,2DAA2D;AAC7E;AACA;AACA,uCAAuC,2BAA2B;AAClE,wCAAwC,4BAA4B;AACpE,kCAAkC,sBAAsB;AACxD;AACA;AACA,gDAAgD,qCAAqC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA,oDAAoD,qCAAqC,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uCAAuC,2BAA2B;AAClE,wCAAwC,4BAA4B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mDAAmD,EAAE;AACrD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yDAAyD;AAClE;AACA;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA,yC;;;;;;;ACtQA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,kC;;;;;;;;;;;AC1BA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC4B;AACmB;AAChD,eAAsB,EAAE;AACxB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA,uCAAuC,2BAA2B;AAClE,wCAAwC,4BAA4B;AACpE,kCAAkC,sBAAsB;AACxD,4JAA2E;AAC3E;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,yC;;;;;;;;;;;;AC9DA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACsB;AACM;AAC7B,eAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA,uCAAuC,2BAA2B;AAClE,wCAAwC,4BAA4B;AACpE,kCAAkC,sBAAsB;AACxD,4JAA2E;AAC3E;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,iHAAgC;AAChC;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,gDAAgD,EAAE;AAClD;AACA,2C;;;;;;;AC/IA;AAAA,eAAe,EAAE;AACjB;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,kDAAkD,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAyB;AACzB,wC;;;;;;;AC7CA;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B,2BAA2B,WAAW,EAAE;AACxC,2BAA2B;AAC3B;AACA,oC;;;;;;;ACPA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mC;;;;;;;ACvKA;AACA;AACA,uBAAuB,MAAM;AAC7B,uC;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLyF;AAC1C;AACrB;AACG;AACT;AACoB;AACJ;AACkC;AACA;AACV;AACR;AACY;AAC1C;AACtB,wC;;;;;;;;;;ACbA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC4D;AAC9B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,oCAAoC,EAAE;AACvF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,SAAS,mEAAoB;AAC7B,SAAS,iEAAkB;AAC3B,MAAM;AACN;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,wC;;;;;;;;;;;ACpEA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC4D;AAC9B;AACX;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,qDAAqD;AACrD,SAAS,+EAAmB;AAC5B,SAAS,mEAAoB;AAC7B,SAAS,iEAAkB;AAC3B,MAAM;AACN;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gD;;;;;;;AC9DA;AAAA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,eAAe;AAC/C,4BAA4B,EAAE,sBAAsB,EAAE,6BAA6B,SAAS;AAC5F;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mDAAmD,gCAAgC,EAAE;AACrF;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,4C;;;;;;;;;;;ACpIA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACe;AAC4B;AACvB;AACrB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA,uCAAuC,2BAA2B;AAClE,wCAAwC,4BAA4B;AACpE,kCAAkC,sBAAsB;AACxD,oDAAoD;AACpD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,8C;;;;;;;;;;;;;;;;;;ACrFiD;AAC1B;AACS;AACoB;AAC1B;AACgB;AAC4B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAiB,2KAAyD;AAC1E,iBAAiB,oMAA+E;AAChG,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,8CAA8C,WAAW;AACzD;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,+C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACqgB;AAC/d;AACtC,gD;;;;;;;;;;;;ACLA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC0H;AACnF;AACpB;AACW;AAC/B;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,2DAA2D,4BAA4B;AACvF;AACA;AACA,0CAA0C,yCAAyC;AACnF;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,eAAe;AACjD,0CAA0C,uBAAuB;AACjE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,oCAAoC,EAAE;AACvF;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,oCAAoC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE,mCAAmC,gCAAgC;AAC5F,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,sEAAsE,aAAa,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mIAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,SAAS,+EAAmB;AAC5B,SAAS,yEAA0B;AACnC,SAAS,mEAAoB;AAC7B,SAAS,iEAAkB;AAC3B,MAAM;AACN;AACA,uBAAuB,sFAAuC,kEAAmB,IAAI;AACrF,sBAAsB,sFAAuC,wEAAyB,IAAI;AAC1F,sBAAsB,sFAAuC;AAC7D;AACA;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,6C;;;;;;;;;;;;;ACjTyD;AACrC;AACC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,wDAAwD;AACxD,SAAS,mEAAoB;AAC7B,SAAS,+EAAmB;AAC5B,MAAM;AACN;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,gDAAgD;AAChD,SAAS,yEAA0B;AACnC,MAAM;AACN;AACA,uBAAuB,uFAAwC;AAC/D;AACA;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,8C;;;;;;;;;;;;;;ACvG+B;AACL;AACD;AACJ;AACD;AACpB,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE,qDAAqD,EAAE;AAChF;AACA,sHAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wFAAwF,EAAE;AAC1H;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,iHAAqD;AAC9E;AACA,uBAAuB,EAAE;AACzB,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,SAAS,iFAAyB;AAClC,SAAS,iEAAkB;AAC3B,MAAM;AACN;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,2C;;;;;;;;;;;;;AChImE;AACzC;AACN;AACG;AACvB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oDAAoD,iDAAiD,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA;AACA;AACA,qDAAqD;AACrD,SAAS,uEAAwB;AACjC,SAAS,iEAAkB;AAC3B,MAAM;AACN;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,8C;;;;;;;;;;;AC3EA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC4B;AACT;AACpB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,8BAA8B;AAC9B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,mEAAmE;AACnE;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,oFAAqC,sGAA0C;AACxG;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,oFAAqC,sGAA0C;AACxG;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,oFAAqC,sGAA0C;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,eAAe,EAAE;AACjB;AACA;AACA,iC;;;;;;;ACnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,aAAa;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,eAAe;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG;AACA,uFAAuF,gBAAgB;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,kBAAkB;AAClB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA,eAAe,SAAS;AACxB;AACA,eAAe,SAAS;AACxB,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,mBAAmB;AAClC,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;AC/PA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;ACvCA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kC;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;ACzBA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mD;;;;;;;AC1BA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0GAA0G,0CAA0C,EAAE;AACtJ;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;ACxBA;AACA,kDAAkD,0CAA0C,EAAE;AAC9F,mC;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;AClBA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACpBA,gD;;;;;;ACAA,gD","file":"dist_package/ngx-modialog/bundle/ngx-modialog.webpack.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/common\"), require(\"@angular/platform-browser\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/common\", \"@angular/platform-browser\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngxModialog\"] = factory(require(\"@angular/core\"), require(\"@angular/common\"), require(\"@angular/platform-browser\"));\n\telse\n\t\troot[\"ngxModialog\"] = factory(root[\"@angular/core\"], root[\"@angular/common\"], root[\"@angular/platform-browser\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_46__, __WEBPACK_EXTERNAL_MODULE_47__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 07f0b854dea4b6f977f7","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 0\n// module chunks = 0","/**\n * Simple object extend\n * @template T\n * @param {?} m1\n * @param {?} m2\n * @return {?}\n */\nexport function extend(m1, m2) {\n    var /** @type {?} */ m = ({});\n    for (var /** @type {?} */ attr in m1) {\n        if (m1.hasOwnProperty(attr)) {\n            ((m))[attr] = ((m1))[attr];\n        }\n    }\n    for (var /** @type {?} */ attr in m2) {\n        if (m2.hasOwnProperty(attr)) {\n            ((m))[attr] = ((m2))[attr];\n        }\n    }\n    return m;\n}\n/**\n * Simple, not optimized, array union of unique values.\n * @template T\n * @param {?} arr1\n * @param {?} arr2\n * @return {?}\n */\nexport function arrayUnion(arr1, arr2) {\n    return arr1\n        .concat(arr2.filter(function (v) { return arr1.indexOf(v) === -1; }));\n}\n/**\n * Returns true if the config supports a given key.\n * @param {?} keyCode\n * @param {?} config\n * @return {?}\n */\nexport function supportsKey(keyCode, config) {\n    if (!Array.isArray(config))\n        return config === null ? false : true;\n    return config.indexOf(keyCode) > -1;\n}\n/**\n * Given an object representing a key/value map of css properties, returns a valid css string\n * representing the object.\n * Example:\n * console.log(toStyleString({\n *     position: 'absolute',\n *     width: '100%',\n *     height: '100%',\n *     top: '0',\n *     left: '0',\n *     right: '0',\n *     bottom: '0'\n * }));\n * // position:absolute;width:100%;height:100%;top:0;left:0;right:0;bottom:0\n * @param {?} obj\n * @return {?}\n */\nexport function toStyleString(obj) {\n    return Object.getOwnPropertyNames(obj)\n        .map(function (k) { return k + \":\" + obj[k]; })\n        .join(';');\n    // let objStr = JSON.stringify(obj);\n    // return objStr.substr(1, objStr.length - 2)\n    //     .replace(/,/g, ';')\n    //     .replace(/\"/g, '');\n}\nvar PromiseCompleter = (function () {\n    function PromiseCompleter() {\n        var _this = this;\n        this.promise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    return PromiseCompleter;\n}());\nexport { PromiseCompleter };\nfunction PromiseCompleter_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PromiseCompleter.prototype.promise;\n    /** @type {?} */\n    PromiseCompleter.prototype.resolve;\n    /** @type {?} */\n    PromiseCompleter.prototype.reject;\n}\n/**\n * @return {?}\n */\nexport function noop() { }\n//# sourceMappingURL=utils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/framework/utils.js\n// module id = 1\n// module chunks = 0","import { Subject } from 'rxjs/Subject';\nimport { PromiseCompleter } from '../framework/utils';\nimport { DialogBailOutError } from '../models/errors';\n/**\n * API to an open modal window.\n */\nvar DialogRef = (function () {\n    /**\n     * @param {?} overlay\n     * @param {?=} context\n     */\n    function DialogRef(overlay, context) {\n        this.overlay = overlay;\n        this.context = context;\n        this._resultDeferred = new PromiseCompleter();\n        this._onDestroy = new Subject();\n        this.onDestroy = this._onDestroy.asObservable();\n    }\n    Object.defineProperty(DialogRef.prototype, \"result\", {\n        /**\n         * A Promise that is resolved on a close event and rejected on a dismiss event.\n         * @return {?}\n         */\n        get: function () {\n            return this._resultDeferred.promise;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set a close/dismiss guard\n     * @param {?} guard\n     * @return {?}\n     */\n    DialogRef.prototype.setCloseGuard = function (guard) {\n        this.closeGuard = guard;\n    };\n    /**\n     *  Close the modal with a return value, i.e: result.\n     * @param {?=} result\n     * @return {?}\n     */\n    DialogRef.prototype.close = function (result) {\n        var _this = this;\n        if (result === void 0) { result = null; }\n        var /** @type {?} */ _close = function () {\n            _this.destroy();\n            _this._resultDeferred.resolve(result);\n        };\n        this._fireHook('beforeClose')\n            .then(function (value) { return value !== true && _close(); })\n            .catch(_close);\n    };\n    /**\n     *  Close the modal without a return value, i.e: cancelled.\n     *  This call is automatically invoked when a user either:\n     *  - Presses an exit keyboard key (if configured).\n     *  - Clicks outside of the modal window (if configured).\n     *  Usually, dismiss represent a Cancel button or a X button.\n     * @return {?}\n     */\n    DialogRef.prototype.dismiss = function () {\n        var _this = this;\n        var /** @type {?} */ _dismiss = function () {\n            _this.destroy();\n            _this._resultDeferred.promise.catch(function () { });\n            _this._resultDeferred.reject();\n        };\n        this._fireHook('beforeDismiss')\n            .then(function (value) { return value !== true && _dismiss(); })\n            .catch(_dismiss);\n    };\n    /**\n     * Gracefully close the overlay/dialog with a rejected result.\n     * Does not trigger canDestroy on the overlay.\n     * @return {?}\n     */\n    DialogRef.prototype.bailOut = function () {\n        if (this.destroyed !== true) {\n            this.destroyed = true;\n            this._onDestroy.next(null);\n            this._onDestroy.complete();\n            this._resultDeferred.reject(new DialogBailOutError());\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DialogRef.prototype.destroy = function () {\n        var _this = this;\n        if (this.destroyed !== true) {\n            this.destroyed = true;\n            if (typeof this.overlayRef.instance.canDestroy === 'function') {\n                this.overlayRef.instance.canDestroy()\n                    .catch(function () { })\n                    .then(function () { return _this._destroy(); });\n            }\n            else {\n                this._destroy();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DialogRef.prototype._destroy = function () {\n        this._onDestroy.next(null);\n        this._onDestroy.complete();\n        this.overlayRef.destroy();\n    };\n    /**\n     * @template T\n     * @param {?} name\n     * @return {?}\n     */\n    DialogRef.prototype._fireHook = function (name) {\n        var /** @type {?} */ gurad = this.closeGuard, /** @type {?} */ fn = gurad && typeof gurad[name] === 'function' && gurad[name];\n        return Promise.resolve(fn ? fn.call(gurad) : false);\n    };\n    return DialogRef;\n}());\nexport { DialogRef };\nfunction DialogRef_tsickle_Closure_declarations() {\n    /**\n     * Reference to the overlay component ref.\n     * @type {?}\n     */\n    DialogRef.prototype.overlayRef;\n    /**\n     * States if the modal is inside a specific element.\n     * @type {?}\n     */\n    DialogRef.prototype.inElement;\n    /** @type {?} */\n    DialogRef.prototype.destroyed;\n    /**\n     * Fired before dialog is destroyed.\n     * No need to unsubscribe, done automatically.\n     * Note: Always called.\n     * When called, overlayRef might or might not be destroyed.\n     * @type {?}\n     */\n    DialogRef.prototype.onDestroy;\n    /** @type {?} */\n    DialogRef.prototype._resultDeferred;\n    /** @type {?} */\n    DialogRef.prototype._onDestroy;\n    /** @type {?} */\n    DialogRef.prototype.closeGuard;\n    /** @type {?} */\n    DialogRef.prototype.overlay;\n    /** @type {?} */\n    DialogRef.prototype.context;\n}\n//# sourceMappingURL=dialog-ref.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/models/dialog-ref.js\n// module id = 2\n// module chunks = 0","import { Subject } from 'rxjs/Subject';\nimport { filter } from 'rxjs/operator/filter';\nimport { createComponent } from '../framework/createComponent';\nvar /** @type {?} */ BROWSER_PREFIX = ['webkit', 'moz', 'MS', 'o', ''];\n/**\n * @param {?} eventName\n * @param {?} element\n * @param {?} cb\n * @return {?}\n */\nfunction register(eventName, element, cb) {\n    BROWSER_PREFIX.forEach(function (p) {\n        element.addEventListener(p ? p + eventName : eventName.toLowerCase(), cb, false);\n    });\n}\n/**\n * A base class for supporting dynamic components.\n * There are 3 main support areas:\n * 1 - Easy wrapper for dynamic styling via CSS classes and inline styles.\n * 2 - Easy wrapper for interception of transition/animation end events.\n * 3 - Easy wrapper for component creation and injection.\n *\n * Dynamic css is done via direct element manipulation (via renderer), it does not use change detection\n * or binding. This is to allow better control over animation.\n *\n * Animation support is limited, only transition/keyframes END even are notified.\n * The animation support is needed since currently the angular animation module is limited as well and\n * does not support CSS animation that are not pre-parsed and are not in the styles metadata of a component.\n *\n * Capabilities: Add/Remove styls, Add/Remove classes, listen to animation/transition end event,\n * add components\n */\nvar BaseDynamicComponent = (function () {\n    /**\n     * @param {?} el\n     * @param {?} renderer\n     */\n    function BaseDynamicComponent(el, renderer) {\n        this.el = el;\n        this.renderer = renderer;\n    }\n    /**\n     * @return {?}\n     */\n    BaseDynamicComponent.prototype.activateAnimationListener = function () {\n        var _this = this;\n        if (this.animationEnd)\n            return;\n        this.animationEnd = new Subject();\n        this.animationEnd$ = this.animationEnd.asObservable();\n        register('TransitionEnd', this.el.nativeElement, function (e) { return _this.onEnd(e); });\n        register('AnimationEnd', this.el.nativeElement, function (e) { return _this.onEnd(e); });\n    };\n    /**\n     * Set a specific inline style on the overlay host element.\n     * @param {?} prop The style key\n     * @param {?} value The value, undefined to remove\n     * @return {?}\n     */\n    BaseDynamicComponent.prototype.setStyle = function (prop, value) {\n        this.renderer.setElementStyle(this.el.nativeElement, prop, value);\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    BaseDynamicComponent.prototype.forceReflow = function () {\n        this.el.nativeElement.offsetWidth;\n    };\n    /**\n     * @param {?} css\n     * @param {?=} forceReflow\n     * @return {?}\n     */\n    BaseDynamicComponent.prototype.addClass = function (css, forceReflow) {\n        var _this = this;\n        if (forceReflow === void 0) { forceReflow = false; }\n        css.split(' ')\n            .forEach(function (c) { return _this.renderer.setElementClass(_this.el.nativeElement, c, true); });\n        if (forceReflow)\n            this.forceReflow();\n    };\n    /**\n     * @param {?} css\n     * @param {?=} forceReflow\n     * @return {?}\n     */\n    BaseDynamicComponent.prototype.removeClass = function (css, forceReflow) {\n        var _this = this;\n        if (forceReflow === void 0) { forceReflow = false; }\n        css.split(' ')\n            .forEach(function (c) { return _this.renderer.setElementClass(_this.el.nativeElement, c, false); });\n        if (forceReflow)\n            this.forceReflow();\n    };\n    /**\n     * @return {?}\n     */\n    BaseDynamicComponent.prototype.ngOnDestroy = function () {\n        if (this.animationEnd && !this.animationEnd.closed) {\n            this.animationEnd.complete();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    BaseDynamicComponent.prototype.myAnimationEnd$ = function () {\n        var _this = this;\n        return filter.call(this.animationEnd$, function (e) { return e.target === _this.el.nativeElement; });\n    };\n    /**\n     * Add a component, supply a view container ref.\n     * Note: The components vcRef will result in a sibling.\n     * @template T\n     * @param {?} instructions\n     * @return {?}\n     */\n    BaseDynamicComponent.prototype._addComponent = function (instructions) {\n        var /** @type {?} */ cmpRef = createComponent(instructions);\n        cmpRef.changeDetectorRef.detectChanges();\n        return cmpRef;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    BaseDynamicComponent.prototype.onEnd = function (event) {\n        if (!this.animationEnd.closed) {\n            this.animationEnd.next(event);\n        }\n    };\n    return BaseDynamicComponent;\n}());\nexport { BaseDynamicComponent };\nfunction BaseDynamicComponent_tsickle_Closure_declarations() {\n    /** @type {?} */\n    BaseDynamicComponent.prototype.animationEnd$;\n    /** @type {?} */\n    BaseDynamicComponent.prototype.animationEnd;\n    /** @type {?} */\n    BaseDynamicComponent.prototype.el;\n    /** @type {?} */\n    BaseDynamicComponent.prototype.renderer;\n}\n//# sourceMappingURL=base-dynamic-component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/components/base-dynamic-component.js\n// module id = 3\n// module chunks = 0","export { BaseDynamicComponent } from './base-dynamic-component';\nexport { CSSBackdrop } from './css-backdrop';\nexport { CSSDialogContainer } from './css-dialog-container';\n// export { FadeInBackdrop } from './fade-in-backdrop';\n// export { SplitScreenBackdrop } from './split-screen-backdrop';\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/components/index.js\n// module id = 4\n// module chunks = 0","import { ComponentFactoryResolver, ReflectiveInjector } from '@angular/core';\n/**\n * @param {?} instructions\n * @return {?}\n */\nexport function createComponent(instructions) {\n    var /** @type {?} */ injector = getInjector(instructions);\n    var /** @type {?} */ cmpFactory = injector.get(ComponentFactoryResolver).resolveComponentFactory(instructions.component);\n    if (instructions.vcRef) {\n        return instructions.vcRef.createComponent(cmpFactory, instructions.vcRef.length, injector, instructions.projectableNodes);\n    }\n    else {\n        return cmpFactory.create(injector);\n    }\n}\n/**\n * @param {?} instructions\n * @return {?}\n */\nfunction getInjector(instructions) {\n    var /** @type {?} */ ctxInjector = instructions.injector || instructions.vcRef.parentInjector;\n    return Array.isArray(instructions.bindings) && instructions.bindings.length > 0 ?\n        ReflectiveInjector.fromResolvedProviders(instructions.bindings, ctxInjector) : ctxInjector;\n}\n//# sourceMappingURL=createComponent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/framework/createComponent.js\n// module id = 5\n// module chunks = 0","export var DROP_IN_TYPE = {};\nDROP_IN_TYPE.alert = 0;\nDROP_IN_TYPE.prompt = 1;\nDROP_IN_TYPE.confirm = 2;\nDROP_IN_TYPE[DROP_IN_TYPE.alert] = \"alert\";\nDROP_IN_TYPE[DROP_IN_TYPE.prompt] = \"prompt\";\nDROP_IN_TYPE[DROP_IN_TYPE.confirm] = \"confirm\";\n/**\n * @abstract\n */\nvar OverlayRenderer = (function () {\n    function OverlayRenderer() {\n    }\n    /**\n     * @abstract\n     * @param {?} dialogRef\n     * @param {?} vcRef\n     * @param {?=} injector\n     * @return {?}\n     */\n    OverlayRenderer.prototype.render = function (dialogRef, vcRef, injector) { };\n    return OverlayRenderer;\n}());\nexport { OverlayRenderer };\n//# sourceMappingURL=tokens.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/models/tokens.js\n// module id = 6\n// module chunks = 0","export { OverlayTarget, OverlayDialogBoundary } from './overlay.directives';\nexport { ModalOverlay } from './overlay.component';\nexport { Overlay } from './overlay.service';\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/overlay/index.js\n// module id = 7\n// module chunks = 0","export { DOMOverlayRenderer } from './dom-modal-renderer';\nexport { Modal } from './modal';\nexport { DOMOutsideEventPlugin } from './outside-event-plugin';\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/providers/index.js\n// module id = 8\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscriber.js\n// module id = 9\n// module chunks = 0","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscription.js\n// module id = 10\n// module chunks = 0","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/rxSubscriber.js\n// module id = 11\n// module chunks = 0","\"use strict\";\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/root.js\n// module id = 12\n// module chunks = 0","// heavily inspired by:\n// http://www.bennadel.com/blog/3025-creating-custom-dom-and-host-event-bindings-in-angular-2-beta-6.htm\nimport { Injectable } from '@angular/core';\nimport { noop } from '../framework/utils';\n// TODO: use DI factory for this.\n// TODO: consolidate dup code\nvar /** @type {?} */ isDoc = !(typeof document === 'undefined' || !document);\nvar /** @type {?} */ eventMap = {\n    clickOutside: 'click',\n    mousedownOutside: 'mousedown',\n    mouseupOutside: 'mouseup',\n    mousemoveOutside: 'mousemove'\n};\n/**\n * An event handler factory for event handlers that bubble the event to a given handler\n * if the event target is not an ancestor of the given element.\n * @param {?} element\n * @param {?} handler\n * @return {?}\n */\nfunction bubbleNonAncestorHandlerFactory(element, handler) {\n    return function (event) {\n        var /** @type {?} */ current = event.target;\n        do {\n            if (current === element) {\n                return;\n            }\n        } while (current.parentNode && (current = current.parentNode));\n        handler(event);\n    };\n}\nvar DOMOutsideEventPlugin = (function () {\n    function DOMOutsideEventPlugin() {\n        if (!isDoc || typeof document.addEventListener !== 'function') {\n            this.addEventListener = noop;\n        }\n    }\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    DOMOutsideEventPlugin.prototype.supports = function (eventName) {\n        return eventMap.hasOwnProperty(eventName);\n    };\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    DOMOutsideEventPlugin.prototype.addEventListener = function (element, eventName, handler) {\n        var /** @type {?} */ zone = this.manager.getZone();\n        // A Factory that registers the event on the document, instead of the element.\n        // the handler is created at runtime, and it acts as a propagation/bubble predicate, it will\n        // bubble up the event (i.e: execute our original event handler) only if the event targer\n        // is an ancestor of our element.\n        // The event is fired inside the angular zone so change detection can kick into action.\n        var /** @type {?} */ onceOnOutside = function () {\n            var /** @type {?} */ listener = bubbleNonAncestorHandlerFactory(element, function (evt) { return zone.runGuarded(function () { return handler(evt); }); });\n            // mimic BrowserDomAdapter.onAndCancel\n            document.addEventListener(eventMap[eventName], listener, false);\n            return function () { return document.removeEventListener(eventMap[eventName], listener, false); };\n        };\n        // we run the event registration for the document in a different zone, this will make sure\n        // change detection is off.\n        // It turns out that if a component that use DOMOutsideEventPlugin is built from a click\n        // event, we might get here before the event reached the document, causing a quick false\n        // positive handling (when stopPropagation() was'nt invoked). To workaround this we wait\n        // for the next vm turn and register.\n        // Event registration returns a dispose function for that event, angular use it to clean\n        // up after component get's destroyed. Since we need to return a dispose function\n        // synchronously we have to put a wrapper for it since we will get it asynchronously,\n        // i.e: after we need to return it.\n        //\n        return zone.runOutsideAngular(function () {\n            var /** @type {?} */ fn;\n            setTimeout(function () { return fn = onceOnOutside(); }, 0);\n            return function () {\n                if (fn)\n                    fn();\n            };\n        });\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    DOMOutsideEventPlugin.prototype.addGlobalEventListener = function (target, eventName, handler) {\n        throw 'not supported';\n    };\n    DOMOutsideEventPlugin.decorators = [\n        { type: Injectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    DOMOutsideEventPlugin.ctorParameters = function () { return []; };\n    return DOMOutsideEventPlugin;\n}());\nexport { DOMOutsideEventPlugin };\nfunction DOMOutsideEventPlugin_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DOMOutsideEventPlugin.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DOMOutsideEventPlugin.ctorParameters;\n    /** @type {?} */\n    DOMOutsideEventPlugin.prototype.manager;\n}\n//# sourceMappingURL=outside-event-plugin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/providers/outside-event-plugin.js\n// module id = 13\n// module chunks = 0","var /** @type {?} */ PRIVATE_PREFIX = '$$';\nvar /** @type {?} */ RESERVED_REGEX = /^(\\$\\$).*/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction validateMethodName(name) {\n    if (!name) {\n        throw new Error(\"Illegal method name. Empty method name is not allowed\");\n    }\n    else if (name in this) {\n        throw new Error(\"A member name '\" + name + \"' already defined.\");\n    }\n}\n/**\n * Returns a list of assigned property names (non private)\n * @param {?} subject\n * @return {?}\n */\nfunction getAssignedPropertyNames(subject) {\n    return Object.getOwnPropertyNames(subject)\n        .filter(function (name) { return RESERVED_REGEX.test(name); })\n        .map(function (name) { return name.substr(2); });\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function privateKey(name) {\n    return PRIVATE_PREFIX + name;\n}\n/**\n * @param {?} obj\n * @param {?} propertyName\n * @param {?} value\n * @return {?}\n */\nfunction objectDefinePropertyValue(obj, propertyName, value) {\n    Object.defineProperty(obj, propertyName, /** @type {?} */ ({\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: value\n    }));\n}\n/**\n * Given a FluentAssign instance, apply all of the supplied default values so calling\n * instance.toJSON will return those values (does not create a setter function)\n * @param {?} instance\n * @param {?} defaultValues\n * @return {?}\n */\nfunction applyDefaultValues(instance, defaultValues) {\n    Object.getOwnPropertyNames(defaultValues)\n        .forEach(function (name) { return ((instance))[privateKey(name)] = ((defaultValues))[name]; });\n}\n/**\n * Create a function for setting a value for a property on a given object.\n * @template T\n * @param {?} obj The object to apply the key & setter on.\n * @param {?} propertyName The name of the property on the object\n * @param {?=} writeOnce If true will allow writing once (default: false)\n *\n * Example:\n * let obj = new FluentAssign<any>;\n * setAssignMethod(obj, 'myProp');\n * obj.myProp('someValue');\n * const result = obj.toJSON();\n * console.log(result); //{ myProp: 'someValue' }\n *\n *\n * let obj = new FluentAssign<any>;\n * setAssignMethod(obj, 'myProp', true); // applying writeOnce\n * obj.myProp('someValue');\n * obj.myProp('someValue'); // ERROR: Overriding config property 'myProp' is not allowed.\n * @return {?}\n */\nexport function setAssignMethod(obj, propertyName, writeOnce) {\n    var _this = this;\n    if (writeOnce === void 0) { writeOnce = false; }\n    validateMethodName.call(obj, propertyName);\n    var /** @type {?} */ key = privateKey(propertyName);\n    objectDefinePropertyValue(obj, propertyName, function (value) {\n        if (writeOnce && _this.hasOwnProperty(key)) {\n            throw new Error(\"Overriding config property '\" + propertyName + \"' is not allowed.\");\n        }\n        obj[key] = value;\n        return obj;\n    });\n}\n/**\n * Create a function for setting a value that is an alias to an other setter function.\n * @template T\n * @param {?} obj The object to apply the key & setter on.\n * @param {?} propertyName The name of the property on the object\n * @param {?} srcPropertyName The name of the property on the object this alias points to\n * @param {?=} hard If true, will set a readonly property on the object that returns\n *        the value of the source property. Default: false\n *\n * Example:\n * let obj = new FluentAssign<any> ;\n * setAssignMethod(obj, 'myProp');\n * setAssignAlias(obj, 'myPropAlias', 'myProp');\n * obj.myPropAlias('someValue');\n * const result = obj.toJSON();\n * console.log(result); //{ myProp: 'someValue' }\n * result.myPropAlias // undefined\n *\n *\n * let obj = new FluentAssign<any> ;\n * setAssignMethod(obj, 'myProp');\n * setAssignAlias(obj, 'myPropAlias', 'myProp', true); // setting a hard alias.\n * obj.myPropAlias('someValue');\n * const result = obj.toJSON();\n * console.log(result); //{ myProp: 'someValue' }\n * result.myPropAlias // someValue\n * @return {?}\n */\nexport function setAssignAlias(obj, propertyName, srcPropertyName, hard) {\n    if (hard === void 0) { hard = false; }\n    validateMethodName.call(obj, propertyName);\n    objectDefinePropertyValue(obj, propertyName, function (value) {\n        obj[srcPropertyName](value);\n        return obj;\n    });\n    if (hard === true) {\n        var /** @type {?} */ key = privateKey(propertyName), /** @type {?} */ srcKey_1 = privateKey(srcPropertyName);\n        Object.defineProperty(obj, key, /** @type {?} */ ({\n            configurable: false,\n            enumerable: false,\n            get: function () { return obj[srcKey_1]; }\n        }));\n    }\n}\n/**\n * Represent a fluent API factory wrapper for defining FluentAssign instances.\n */\nvar FluentAssignFactory = (function () {\n    /**\n     * @param {?=} fluentAssign\n     */\n    function FluentAssignFactory(fluentAssign) {\n        this._fluentAssign =\n            fluentAssign instanceof FluentAssign ? fluentAssign : new FluentAssign();\n    }\n    /**\n     * Create a setter method on the FluentAssign instance.\n     * @param {?} name The name of the setter function.\n     * @param {?=} defaultValue If set (not undefined) set's the value on the instance immediately.\n     * @return {?}\n     */\n    FluentAssignFactory.prototype.setMethod = function (name, defaultValue) {\n        if (defaultValue === void 0) { defaultValue = undefined; }\n        setAssignMethod(this._fluentAssign, name);\n        if (defaultValue !== undefined) {\n            ((this._fluentAssign))[name](defaultValue);\n        }\n        return this;\n    };\n    Object.defineProperty(FluentAssignFactory.prototype, \"fluentAssign\", {\n        /**\n         * The FluentAssign instance.\n         * @return {?}\n         */\n        get: function () {\n            return this._fluentAssign;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FluentAssignFactory;\n}());\nexport { FluentAssignFactory };\nfunction FluentAssignFactory_tsickle_Closure_declarations() {\n    /** @type {?} */\n    FluentAssignFactory.prototype._fluentAssign;\n}\n/**\n * Represent an object where every property is a function representing an assignment function.\n * Calling each function with a value will assign the value to the object and return the object.\n * Calling 'toJSON' returns an object with the same properties but this time representing the\n * assigned values.\n *\n * This allows setting an object in a fluent API manner.\n * Example:\n * let fluent = new FluentAssign<any>(undefined, ['some', 'went']);\n * fluent.some('thing').went('wrong').toJSON();\n * // { some: 'thing', went: 'wrong' }\n */\nvar FluentAssign = (function () {\n    /**\n     *\n     * @param {?=} defaultValues An object representing default values for the underlying object.\n     * @param {?=} initialSetters A list of initial setters for this FluentAssign.\n     * @param {?=} baseType the class/type to create a new base. optional, {} is used if not supplied.\n     */\n    function FluentAssign(defaultValues, initialSetters, baseType) {\n        if (defaultValues === void 0) { defaultValues = undefined; }\n        if (initialSetters === void 0) { initialSetters = undefined; }\n        if (baseType === void 0) { baseType = undefined; }\n        var _this = this;\n        if (Array.isArray(defaultValues)) {\n            defaultValues.forEach(function (d) { return applyDefaultValues(_this, d); });\n        }\n        else if (defaultValues) {\n            applyDefaultValues(this, defaultValues);\n        }\n        if (Array.isArray(initialSetters)) {\n            initialSetters.forEach(function (name) { return setAssignMethod(_this, name); });\n        }\n        if (baseType) {\n            this.__fluent$base__ = baseType;\n        }\n    }\n    /**\n     * Returns a FluentAssignFactory<FluentAssign<T>> ready to define a FluentAssign type.\n     * @template T\n     * @param {?=} defaultValues An object representing default values for the instance.\n     * @param {?=} initialSetters A list of initial setters for the instance.\n     * @return {?}\n     */\n    FluentAssign.compose = function (defaultValues, initialSetters) {\n        if (defaultValues === void 0) { defaultValues = undefined; }\n        if (initialSetters === void 0) { initialSetters = undefined; }\n        return (FluentAssign.composeWith(new FluentAssign(defaultValues, initialSetters)));\n    };\n    /**\n     * Returns a FluentAssignFactory<Z> where Z is an instance of FluentAssign<?> or a derived\n     * class of it.\n     * @template Z\n     * @param {?} fluentAssign An instance of FluentAssign<?> or a derived class of FluentAssign<?>.\n     * @return {?}\n     */\n    FluentAssign.composeWith = function (fluentAssign) {\n        return (new FluentAssignFactory(/** @type {?} */ (fluentAssign)));\n    };\n    /**\n     * @return {?}\n     */\n    FluentAssign.prototype.toJSON = function () {\n        var _this = this;\n        return getAssignedPropertyNames(this)\n            .reduce(function (obj, name) {\n            var /** @type {?} */ key = privateKey(name);\n            // re-define property descriptors (we dont want their value)\n            var /** @type {?} */ propDesc = Object.getOwnPropertyDescriptor(_this, key);\n            if (propDesc) {\n                Object.defineProperty(obj, name, propDesc);\n            }\n            else {\n                ((obj))[name] = ((_this))[key];\n            }\n            return obj;\n        }, this.__fluent$base__ ? new this.__fluent$base__() : ({}));\n    };\n    return FluentAssign;\n}());\nexport { FluentAssign };\nfunction FluentAssign_tsickle_Closure_declarations() {\n    /** @type {?} */\n    FluentAssign.prototype.__fluent$base__;\n}\n//# sourceMappingURL=fluent-assign.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/framework/fluent-assign.js\n// module id = 14\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar DialogBailOutError = (function (_super) {\n    __extends(DialogBailOutError, _super);\n    /**\n     * @param {?=} value\n     */\n    function DialogBailOutError(value) {\n        var _this = _super.call(this) || this;\n        if (!value) {\n            value = 'Dialog was forced to close by an unknown source.';\n        }\n        _this.message = value;\n        return _this;\n    }\n    return DialogBailOutError;\n}(Error));\nexport { DialogBailOutError };\n//# sourceMappingURL=errors.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/models/errors.js\n// module id = 15\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { extend, arrayUnion } from './../framework/utils';\nimport { OverlayContext, OverlayContextBuilder } from './overlay-context';\nexport var /** @type {?} */ DEFAULT_VALUES = {};\nvar /** @type {?} */ DEFAULT_SETTERS = [\n    'message'\n];\nvar ModalContext = (function (_super) {\n    __extends(ModalContext, _super);\n    function ModalContext() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ModalContext;\n}(OverlayContext));\nexport { ModalContext };\nfunction ModalContext_tsickle_Closure_declarations() {\n    /**\n     * The core message to display.\n     * A modal might have an extended message (e.g: HTML message) or other fields (e.g: title) but\n     * all models, at core, convey a message thus message is common to all modals.\n     * @type {?}\n     */\n    ModalContext.prototype.message;\n}\n/**\n * A core context builder for a modal window instance, used to define the context upon\n * a modal choose it's behaviour.\n */\nvar ModalContextBuilder = (function (_super) {\n    __extends(ModalContextBuilder, _super);\n    /**\n     * @param {?=} defaultValues\n     * @param {?=} initialSetters\n     * @param {?=} baseType\n     */\n    function ModalContextBuilder(defaultValues, initialSetters, baseType) {\n        if (defaultValues === void 0) { defaultValues = undefined; }\n        if (initialSetters === void 0) { initialSetters = undefined; }\n        if (baseType === void 0) { baseType = undefined; }\n        return _super.call(this, extend(DEFAULT_VALUES, defaultValues || {}), arrayUnion(DEFAULT_SETTERS, initialSetters || []), baseType) || this;\n    }\n    return ModalContextBuilder;\n}(OverlayContextBuilder));\nexport { ModalContextBuilder };\nfunction ModalContextBuilder_tsickle_Closure_declarations() {\n    /**\n     * The core message to display.\n     * A modal might have an extended message (e.g: HTML message) or other fields (e.g: title) but\n     * all models, at core, convey a message thus message is common to all modals.\n     * @type {?}\n     */\n    ModalContextBuilder.prototype.message;\n}\n//# sourceMappingURL=modal-context.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/models/modal-context.js\n// module id = 16\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { FluentAssign } from './../framework/fluent-assign';\nimport { extend, arrayUnion } from './../framework/utils';\nexport var /** @type {?} */ DEFAULT_VALUES = {\n    inElement: false,\n    isBlocking: true,\n    keyboard: [27],\n    supportsKey: function supportsKey(keyCode) {\n        return ((this.keyboard)).indexOf(keyCode) > -1;\n    }\n};\nvar /** @type {?} */ DEFAULT_SETTERS = [\n    'inElement',\n    'isBlocking',\n    'keyboard'\n];\nvar OverlayContext = (function () {\n    function OverlayContext() {\n    }\n    /**\n     * @return {?}\n     */\n    OverlayContext.prototype.normalize = function () {\n        if (this.isBlocking !== false)\n            this.isBlocking = true;\n        if (this.keyboard === null) {\n            this.keyboard = [];\n        }\n        else if (typeof this.keyboard === 'number') {\n            this.keyboard = [/** @type {?} */ (this.keyboard)];\n        }\n        else if (!Array.isArray(/** @type {?} */ (this.keyboard))) {\n            this.keyboard = DEFAULT_VALUES.keyboard;\n        }\n    };\n    return OverlayContext;\n}());\nexport { OverlayContext };\nfunction OverlayContext_tsickle_Closure_declarations() {\n    /**\n     * Describes if the modal is rendered within the container element.\n     * The container element is the ViewContainerRef supplied.\n     * Defaults to false.\n     * @type {?}\n     */\n    OverlayContext.prototype.inElement;\n    /**\n     * Describes if the modal is blocking modal.\n     * A Blocking modal is not closable by clicking outside of the modal window.\n     * Defaults to false.\n     * @type {?}\n     */\n    OverlayContext.prototype.isBlocking;\n    /**\n     * Keyboard value/s that close the modal.\n     * Accepts either a single numeric value or an array of numeric values.\n     * A modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\n     * Defaults to 27, set `null` implicitly to disable.\n     * @type {?}\n     */\n    OverlayContext.prototype.keyboard;\n}\n/**\n * A core context builder for a modal window instance, used to define the context upon\n * a modal choose it's behaviour.\n */\nvar OverlayContextBuilder = (function (_super) {\n    __extends(OverlayContextBuilder, _super);\n    /**\n     * @param {?=} defaultValues\n     * @param {?=} initialSetters\n     * @param {?=} baseType\n     */\n    function OverlayContextBuilder(defaultValues, initialSetters, baseType) {\n        if (defaultValues === void 0) { defaultValues = undefined; }\n        if (initialSetters === void 0) { initialSetters = undefined; }\n        if (baseType === void 0) { baseType = undefined; }\n        return _super.call(this, extend(DEFAULT_VALUES, defaultValues || {}), arrayUnion(DEFAULT_SETTERS, initialSetters || []), baseType || OverlayContext // https://github.com/Microsoft/TypeScript/issues/7234\n        ) || this;\n    }\n    /**\n     * Returns an new OverlayConfig with a context property representing the data in this builder.\n     * @param {?=} base A base configuration that the result will extend\n     * @return {?} OverlayConfig\n     */\n    OverlayContextBuilder.prototype.toOverlayConfig = function (base) {\n        return extend(base || {}, {\n            context: this.toJSON()\n        });\n    };\n    return OverlayContextBuilder;\n}(FluentAssign));\nexport { OverlayContextBuilder };\nfunction OverlayContextBuilder_tsickle_Closure_declarations() {\n    /**\n     * Describes if the modal is rendered within the container element.\n     * The container element is the ViewContainerRef supplied.\n     * Defaults to false.\n     * @type {?}\n     */\n    OverlayContextBuilder.prototype.inElement;\n    /**\n     * Describes if the modal is blocking modal.\n     * A Blocking modal is not closable by clicking outside of the modal window.\n     * Defaults to false.\n     * @type {?}\n     */\n    OverlayContextBuilder.prototype.isBlocking;\n    /**\n     * Keyboard value/s that close the modal.\n     * Accepts either a single numeric value or an array of numeric values.\n     * A modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\n     * Defaults to 27, set `null` implicitly to disable.\n     * @type {?}\n     */\n    OverlayContextBuilder.prototype.keyboard;\n}\n/**\n * A helper to create an `OverlayConfig` on the fly.\n * Since `OverlayConfig` requires context it means a builder is needed, this process had some boilerplate.\n * When a quick, on the fly overlay config is needed use this helper to avoid that boilerplate.\n *\n * A builder is used as an API to allow setting the context and providing some operations around the modal.\n * When a developers knows the context before hand we can skip this step, this is what this factory is for.\n *\n * @template T\n * @param {?} context The context for the modal\n * @param {?=} baseContextType Optional. The type/class of the context. This is the class used to init a new instance of the context\n * @param {?=} baseConfig A base configuration that the result will extend\n * @return {?}\n */\nexport function overlayConfigFactory(context, baseContextType, baseConfig) {\n    return new OverlayContextBuilder(/** @type {?} */ (context), undefined, baseContextType).toOverlayConfig(baseConfig);\n}\n//# sourceMappingURL=overlay-context.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/models/overlay-context.js\n// module id = 17\n// module chunks = 0","var /** @type {?} */ vcRefCollection = {};\n/**\n * @param {?} key\n * @return {?}\n */\nfunction getVCRef(key) {\n    return vcRefCollection[key] ? vcRefCollection[key].slice() : [];\n}\n/**\n * @param {?} key\n * @param {?} vcRef\n * @return {?}\n */\nfunction setVCRef(key, vcRef) {\n    if (!vcRefCollection.hasOwnProperty(key)) {\n        vcRefCollection[key] = [];\n    }\n    vcRefCollection[key].push(vcRef);\n}\n/**\n * @param {?} key\n * @param {?=} vcRef\n * @return {?}\n */\nfunction delVCRef(key, vcRef) {\n    if (!vcRef) {\n        vcRefCollection[key] = [];\n    }\n    else {\n        var /** @type {?} */ coll = vcRefCollection[key] || [], /** @type {?} */ idx = coll.indexOf(vcRef);\n        if (idx > -1) {\n            coll.splice(idx, 1);\n        }\n    }\n}\n/**\n * A Simple store that holds a reference to ViewContainerRef instances by a user defined key.\n * This, with the OverlayTarget directive makes it easy to block the overlay inside an element\n * without having to use the angular query boilerplate.\n *  getVCRef: (function(string): ViewContainerRef),\n *  setVCRef: (function(string, ViewContainerRef): void),\n *  delVCRef: (function(string): void)\n *  }}\n */\nexport var vcRefStore = { getVCRef: getVCRef, setVCRef: setVCRef, delVCRef: delVCRef };\n//# sourceMappingURL=vc-ref-store.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/models/vc-ref-store.js\n// module id = 18\n// module chunks = 0","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observer.js\n// module id = 19\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subject.js\n// module id = 20\n// module chunks = 0","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/errorObject.js\n// module id = 21\n// module chunks = 0","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isFunction.js\n// module id = 22\n// module chunks = 0","export { privateKey, setAssignMethod, setAssignAlias, FluentAssignFactory, FluentAssign } from './framework/fluent-assign';\nexport { extend, arrayUnion, PromiseCompleter } from './framework/utils';\nexport { createComponent } from './framework/createComponent';\nexport { DialogBailOutError } from './models/errors';\nexport { DialogRef } from './models/dialog-ref';\nexport { DROP_IN_TYPE, OverlayRenderer } from './models/tokens';\nexport { Modal, DOMOverlayRenderer } from './providers/index';\nexport { overlayConfigFactory, OverlayContext, OverlayContextBuilder } from './models/overlay-context';\nexport { Overlay, ModalOverlay, OverlayDialogBoundary, OverlayTarget } from './overlay/index';\nexport { DEFAULT_VALUES, ModalContext, ModalContextBuilder } from './models/modal-context';\nexport { ModalOpenContext, ModalOpenContextBuilder } from './models/modal-open-context';\nexport { BaseDynamicComponent, CSSBackdrop, CSSDialogContainer } from './components/index';\nexport { ModalModule } from './ngx-modialog.module';\n//# sourceMappingURL=ngx-modialog.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/ngx-modialog.js\n// module id = 23\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component, ElementRef, ViewEncapsulation, Renderer } from '@angular/core';\nimport { BaseDynamicComponent } from './base-dynamic-component';\n/**\n * Represents the modal backdrop shaped by CSS.\n */\nvar CSSBackdrop = (function (_super) {\n    __extends(CSSBackdrop, _super);\n    /**\n     * @param {?} el\n     * @param {?} renderer\n     */\n    function CSSBackdrop(el, renderer) {\n        var _this = _super.call(this, el, renderer) || this;\n        _this.activateAnimationListener();\n        var style = {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%'\n        };\n        Object.keys(style).forEach(function (k) { return _this.setStyle(k, style[k]); });\n        return _this;\n    }\n    CSSBackdrop.decorators = [\n        { type: Component, args: [{\n                    selector: 'css-backdrop',\n                    host: {\n                        '[attr.class]': 'cssClass',\n                        '[attr.style]': 'styleStr'\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    template: \"\"\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    CSSBackdrop.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer, },\n    ]; };\n    return CSSBackdrop;\n}(BaseDynamicComponent));\nexport { CSSBackdrop };\nfunction CSSBackdrop_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CSSBackdrop.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    CSSBackdrop.ctorParameters;\n    /** @type {?} */\n    CSSBackdrop.prototype.cssClass;\n    /** @type {?} */\n    CSSBackdrop.prototype.styleStr;\n}\n//# sourceMappingURL=css-backdrop.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/components/css-backdrop.js\n// module id = 24\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component, ViewEncapsulation, ElementRef, Renderer } from '@angular/core';\nimport { BaseDynamicComponent } from './base-dynamic-component';\nimport { DialogRef } from '../models/dialog-ref';\n/**\n * A component that acts as a top level container for an open modal window.\n */\nvar CSSDialogContainer = (function (_super) {\n    __extends(CSSDialogContainer, _super);\n    /**\n     * @param {?} dialog\n     * @param {?} el\n     * @param {?} renderer\n     */\n    function CSSDialogContainer(dialog, el, renderer) {\n        var _this = _super.call(this, el, renderer) || this;\n        _this.dialog = dialog;\n        _this.activateAnimationListener();\n        return _this;\n    }\n    CSSDialogContainer.decorators = [\n        { type: Component, args: [{\n                    selector: 'css-dialog-container',\n                    host: {\n                        'tabindex': '-1',\n                        'role': 'dialog'\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    template: \"<ng-content></ng-content>\"\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    CSSDialogContainer.ctorParameters = function () { return [\n        { type: DialogRef, },\n        { type: ElementRef, },\n        { type: Renderer, },\n    ]; };\n    return CSSDialogContainer;\n}(BaseDynamicComponent));\nexport { CSSDialogContainer };\nfunction CSSDialogContainer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CSSDialogContainer.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    CSSDialogContainer.ctorParameters;\n    /** @type {?} */\n    CSSDialogContainer.prototype.dialog;\n}\n//# sourceMappingURL=css-dialog-container.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/components/css-dialog-container.js\n// module id = 25\n// module chunks = 0","var /** @type {?} */ BASKET_GROUP = {};\n/**\n * A dumb stack implementation over an array.\n */\nvar DialogRefStack = (function () {\n    function DialogRefStack() {\n        this._stack = [];\n        this._stackMap = new Map();\n    }\n    Object.defineProperty(DialogRefStack.prototype, \"length\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._stack.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} result\n     * @return {?}\n     */\n    DialogRefStack.prototype.closeAll = function (result) {\n        if (result === void 0) { result = null; }\n        for (var /** @type {?} */ i = 0, /** @type {?} */ len = this._stack.length; i < len; i++) {\n            this._stack.pop().close(result);\n        }\n    };\n    /**\n     * @param {?} dialogRef\n     * @param {?=} group\n     * @return {?}\n     */\n    DialogRefStack.prototype.push = function (dialogRef, group) {\n        if (this._stack.indexOf(dialogRef) === -1) {\n            this._stack.push(dialogRef);\n            this._stackMap.set(dialogRef, group || BASKET_GROUP);\n        }\n    };\n    /**\n     * Push a DialogRef into the stack and manage it so when it's done\n     * it will automatically kick itself out of the stack.\n     * @param {?} dialogRef\n     * @param {?=} group\n     * @return {?}\n     */\n    DialogRefStack.prototype.pushManaged = function (dialogRef, group) {\n        var _this = this;\n        this.push(dialogRef, group);\n        dialogRef.onDestroy.subscribe(function () { return _this.remove(dialogRef); });\n    };\n    /**\n     * @return {?}\n     */\n    DialogRefStack.prototype.pop = function () {\n        var /** @type {?} */ dialogRef = this._stack.pop();\n        this._stackMap.delete(dialogRef);\n        return dialogRef;\n    };\n    /**\n     * Remove a DialogRef from the stack.\n     * @param {?} dialogRef\n     * @return {?}\n     */\n    DialogRefStack.prototype.remove = function (dialogRef) {\n        var /** @type {?} */ idx = this.indexOf(dialogRef);\n        if (idx > -1) {\n            this._stack.splice(idx, 1);\n            this._stackMap.delete(dialogRef);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    DialogRefStack.prototype.index = function (index) {\n        return this._stack[index];\n    };\n    /**\n     * @param {?} dialogRef\n     * @return {?}\n     */\n    DialogRefStack.prototype.indexOf = function (dialogRef) {\n        return this._stack.indexOf(dialogRef);\n    };\n    /**\n     * @param {?} dialogRef\n     * @return {?}\n     */\n    DialogRefStack.prototype.groupOf = function (dialogRef) {\n        return this._stackMap.get(dialogRef);\n    };\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    DialogRefStack.prototype.groupBy = function (group) {\n        var /** @type {?} */ arr = [];\n        if (group) {\n            this._stackMap.forEach(function (value, key) {\n                if (value === group) {\n                    arr.push(key);\n                }\n            });\n        }\n        return arr;\n    };\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    DialogRefStack.prototype.groupLength = function (group) {\n        var /** @type {?} */ count = 0;\n        if (group) {\n            this._stackMap.forEach(function (value, key) {\n                if (value === group) {\n                    count++;\n                }\n            });\n        }\n        return count;\n    };\n    return DialogRefStack;\n}());\nexport { DialogRefStack };\nfunction DialogRefStack_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DialogRefStack.prototype._stack;\n    /** @type {?} */\n    DialogRefStack.prototype._stackMap;\n}\n//# sourceMappingURL=dialog-ref-stack.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/models/dialog-ref-stack.js\n// module id = 26\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Modal } from '../providers/index';\nimport { ModalContext, ModalContextBuilder } from './modal-context';\nimport { arrayUnion } from '../framework/utils';\nvar /** @type {?} */ DEFAULT_SETTERS = [\n    'component'\n];\nvar ModalOpenContext = (function (_super) {\n    __extends(ModalOpenContext, _super);\n    function ModalOpenContext() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ModalOpenContext;\n}(ModalContext));\nexport { ModalOpenContext };\nfunction ModalOpenContext_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ModalOpenContext.prototype.component;\n    /** @type {?} */\n    ModalOpenContext.prototype.modal;\n}\n/**\n * A Modal Context that knows about the modal service, and so can open a modal window on demand.\n * Use the fluent API to configure the preset and then invoke the 'open' method to open a modal\n * based on the context.\n * @abstract\n */\nvar ModalOpenContextBuilder = (function (_super) {\n    __extends(ModalOpenContextBuilder, _super);\n    /**\n     * @param {?=} defaultValues\n     * @param {?=} initialSetters\n     * @param {?=} baseType\n     */\n    function ModalOpenContextBuilder(defaultValues, initialSetters, baseType) {\n        if (defaultValues === void 0) { defaultValues = undefined; }\n        if (initialSetters === void 0) { initialSetters = undefined; }\n        if (baseType === void 0) { baseType = undefined; }\n        return _super.call(this, defaultValues || {}, arrayUnion(DEFAULT_SETTERS, initialSetters || []), baseType) || this;\n    }\n    /**\n     * Hook to alter config and return bindings.\n     * @param {?} config\n     * @return {?}\n     */\n    ModalOpenContextBuilder.prototype.$$beforeOpen = function (config) {\n        return [];\n    };\n    /**\n     * Open a modal window based on the configuration of this config instance.\n     * @param {?=} viewContainer If set opens the modal inside the supplied viewContainer\n     * @return {?} Promise<DialogRef>\n     */\n    ModalOpenContextBuilder.prototype.open = function (viewContainer) {\n        var /** @type {?} */ context = this.toJSON();\n        if (!(context.modal instanceof Modal)) {\n            return (Promise.reject(new Error('Configuration Error: modal service not set.')));\n        }\n        var /** @type {?} */ overlayConfig = {\n            context: context,\n            viewContainer: viewContainer,\n            bindings: typeof this.$$beforeOpen === 'function' && this.$$beforeOpen(context)\n        };\n        return context.modal.open(context.component, overlayConfig);\n    };\n    return ModalOpenContextBuilder;\n}(ModalContextBuilder));\nexport { ModalOpenContextBuilder };\nfunction ModalOpenContextBuilder_tsickle_Closure_declarations() {\n    /**\n     * A Class for the footer container.\n     * Default: modal-footer\n     * @type {?}\n     */\n    ModalOpenContextBuilder.prototype.component;\n}\n//# sourceMappingURL=modal-open-context.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/models/modal-open-context.js\n// module id = 27\n// module chunks = 0","import { ANALYZE_FOR_ENTRY_COMPONENTS, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';\nimport { DOMOutsideEventPlugin, DOMOverlayRenderer } from './providers/index';\nimport { OverlayRenderer } from './models/tokens';\nimport { CSSBackdrop, CSSDialogContainer } from './components/index';\nimport { Overlay, ModalOverlay, OverlayDialogBoundary, OverlayTarget } from './overlay/index';\nvar ModalModule = (function () {\n    function ModalModule() {\n    }\n    /**\n     * Returns a ModalModule pre-loaded with a list of dynamically inserted components.\n     * Since dynamic components are not analysed by the angular compiler they must register manually\n     * using entryComponents, this is an easy way to do it.\n     * @param {?} entryComponents A list of dynamically inserted components (dialog's).\n     * @return {?}\n     */\n    ModalModule.withComponents = function (entryComponents) {\n        return {\n            ngModule: ModalModule,\n            providers: [\n                { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: entryComponents, multi: true }\n            ]\n        };\n    };\n    /**\n     * Returns a NgModule for use in the root Module.\n     * @param {?=} entryComponents A list of dynamically inserted components (dialog's).\n     * @return {?} ModuleWithProviders\n     */\n    ModalModule.forRoot = function (entryComponents) {\n        return {\n            ngModule: ModalModule,\n            providers: [\n                { provide: OverlayRenderer, useClass: DOMOverlayRenderer },\n                { provide: EVENT_MANAGER_PLUGINS, useClass: DOMOutsideEventPlugin, multi: true },\n                { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: entryComponents || [], multi: true }\n            ]\n        };\n    };\n    ModalModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        ModalOverlay,\n                        CSSBackdrop,\n                        CSSDialogContainer,\n                        OverlayDialogBoundary,\n                        OverlayTarget\n                    ],\n                    imports: [CommonModule],\n                    exports: [\n                        CSSBackdrop,\n                        CSSDialogContainer,\n                        OverlayDialogBoundary,\n                        OverlayTarget\n                    ],\n                    providers: [\n                        Overlay\n                    ],\n                    entryComponents: [\n                        ModalOverlay,\n                        CSSBackdrop,\n                        CSSDialogContainer\n                    ]\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    ModalModule.ctorParameters = function () { return []; };\n    return ModalModule;\n}());\nexport { ModalModule };\nfunction ModalModule_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ModalModule.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ModalModule.ctorParameters;\n}\n//# sourceMappingURL=ngx-modialog.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/ngx-modialog.module.js\n// module id = 28\n// module chunks = 0","/**\n * Generated bundle index. Do not edit.\n */\nexport { extend, arrayUnion, PromiseCompleter, createComponent, DialogRef, DROP_IN_TYPE, OverlayRenderer, Modal, DOMOverlayRenderer, overlayConfigFactory, OverlayContext, OverlayContextBuilder, Overlay, ModalOverlay, OverlayDialogBoundary, OverlayTarget, DEFAULT_VALUES, ModalContext, ModalContextBuilder, ModalOpenContext, ModalOpenContextBuilder, ModalModule, privateKey, setAssignMethod, setAssignAlias, FluentAssignFactory, FluentAssign, DialogBailOutError, BaseDynamicComponent, CSSBackdrop, CSSDialogContainer } from './ngx-modialog';\nexport { DOMOutsideEventPlugin as ɵa } from './providers/outside-event-plugin';\n//# sourceMappingURL=ngx-modialog.ng-flat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/ngx-modialog.ng-flat.js\n// module id = 29\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component, ElementRef, ReflectiveInjector, ViewChild, ViewContainerRef, ViewEncapsulation, Renderer, TemplateRef } from '@angular/core';\nimport { PromiseCompleter, supportsKey } from '../framework/utils';\nimport { DialogRef } from '../models/dialog-ref';\nimport { BaseDynamicComponent } from '../components/index';\n// TODO: use DI factory for this.\n// TODO: consolidate dup code\nvar /** @type {?} */ isDoc = !(typeof document === 'undefined' || !document);\n/**\n * Represents the modal overlay.\n */\nvar ModalOverlay = (function (_super) {\n    __extends(ModalOverlay, _super);\n    /**\n     * @param {?} dialogRef\n     * @param {?} vcr\n     * @param {?} el\n     * @param {?} renderer\n     */\n    function ModalOverlay(dialogRef, vcr, el, renderer) {\n        var _this = _super.call(this, el, renderer) || this;\n        _this.dialogRef = dialogRef;\n        _this.vcr = vcr;\n        _this.activateAnimationListener();\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @template T\n     * @param {?} content\n     * @param {?=} bindings\n     * @return {?}\n     */\n    ModalOverlay.prototype.getProjectables = function (content, bindings) {\n        var /** @type {?} */ nodes;\n        if (typeof content === 'string') {\n            nodes = [[this.renderer.createText(null, \"\" + content)]];\n        }\n        else if (content instanceof TemplateRef) {\n            nodes = [this.vcr.createEmbeddedView(content, { dialogRef: this.dialogRef }).rootNodes];\n        }\n        else {\n            nodes = [this.embedComponent({ component: content, bindings: bindings }).rootNodes];\n        }\n        return nodes;\n    };\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    ModalOverlay.prototype.embedComponent = function (config) {\n        var /** @type {?} */ ctx = (config);\n        if (ctx.bindings) {\n            ctx.injector = ReflectiveInjector.fromResolvedProviders(ctx.bindings, this.vcr.parentInjector);\n        }\n        return this.vcr.createEmbeddedView(this.template, {\n            $implicit: ctx\n        });\n    };\n    /**\n     * @template T\n     * @param {?} type\n     * @param {?=} bindings\n     * @param {?=} projectableNodes\n     * @return {?}\n     */\n    ModalOverlay.prototype.addComponent = function (type, bindings, projectableNodes) {\n        if (bindings === void 0) { bindings = []; }\n        if (projectableNodes === void 0) { projectableNodes = []; }\n        return _super.prototype._addComponent.call(this, {\n            component: type,\n            vcRef: this.innerVcr,\n            bindings: bindings,\n            projectableNodes: projectableNodes\n        });\n    };\n    /**\n     * @return {?}\n     */\n    ModalOverlay.prototype.fullscreen = function () {\n        var _this = this;\n        var /** @type {?} */ style = {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            'z-index': 1500\n        };\n        Object.keys(style).forEach(function (k) { return _this.setStyle(k, style[k]); });\n    };\n    /**\n     * @return {?}\n     */\n    ModalOverlay.prototype.insideElement = function () {\n        var _this = this;\n        var /** @type {?} */ style = {\n            position: 'absolute',\n            overflow: 'hidden',\n            width: '100%',\n            height: '100%',\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0\n        };\n        Object.keys(style).forEach(function (k) { return _this.setStyle(k, style[k]); });\n    };\n    /**\n     * Set a specific inline style for the container of the whole dialog component\n     * The dialog component root element is the host of this component, it contains only 1 direct\n     * child which is the container.\n     *\n     * Structure:\n     *\n     * ```html\n     * <modal-overlay>\n     *   <div>\n     *     <!-- BACKDROP ELEMENT -->\n     *     <!-- DIALOG CONTAINER ELEMENT -->\n     *   </div>\n     * </modal-overlay>\n     * ```\n     *\n     * @param {?} prop The style key\n     * @param {?} value The value, undefined to remove\n     * @return {?}\n     */\n    ModalOverlay.prototype.setContainerStyle = function (prop, value) {\n        this.renderer.setElementStyle(this.container.nativeElement, prop, value);\n        return this;\n    };\n    /**\n     * Define an element that click inside it will not trigger modal close.\n     * Since events bubble, clicking on a dialog will bubble up to the overlay, a plugin\n     * must define an element that represent the dialog, the overlay will make sure no to close when\n     * it was clicked.\n     * @param {?} element\n     * @return {?}\n     */\n    ModalOverlay.prototype.setClickBoundary = function (element) {\n        var _this = this;\n        var /** @type {?} */ target;\n        var /** @type {?} */ elListener = function (event) { return target = (event.target); };\n        var /** @type {?} */ docListener = function (event) {\n            if (_this.dialogRef.context.isBlocking || !_this.dialogRef.overlay.isTopMost(_this.dialogRef)) {\n                return;\n            }\n            var /** @type {?} */ current = event.target;\n            // on click, this will hit.\n            if (current === target)\n                return;\n            // on mouse down -> drag -> release the current might not be 'target', it might be\n            // a sibling or a child (i.e: not part of the tree-up direction). It might also be a release\n            // outside the dialog... so we compare to the boundary element\n            do {\n                if (current === element) {\n                    return;\n                }\n            } while (current.parentNode && (current = current.parentNode));\n            _this.dialogRef.dismiss();\n        };\n        if (isDoc) {\n            this.dialogRef.onDestroy.subscribe(function () {\n                element.removeEventListener('click', elListener, false);\n                element.removeEventListener('touchstart', elListener, false);\n                document.removeEventListener('click', docListener, false);\n                document.removeEventListener('touchend', docListener, false);\n            });\n            setTimeout(function () {\n                element.addEventListener('mousedown', elListener, false);\n                element.addEventListener('touchstart', docListener, false);\n                document.addEventListener('click', docListener, false);\n                document.addEventListener('touchend', docListener, false);\n            });\n        }\n    };\n    /**\n     * Temp workaround for animation where destruction of the top level component does not\n     * trigger child animations. Solution should be found either in animation module or in design\n     * of the modal component tree.\n     * @return {?}\n     */\n    ModalOverlay.prototype.canDestroy = function () {\n        var /** @type {?} */ completer = new PromiseCompleter();\n        if (!Array.isArray(this.beforeDestroyHandlers)) {\n            completer.resolve();\n        }\n        else {\n            // run destroy notification but protect against halt.\n            var /** @type {?} */ id_1 = setTimeout(function () {\n                id_1 = null;\n                completer.reject();\n            }, 1000);\n            var /** @type {?} */ resolve = function () {\n                if (id_1 === null)\n                    return;\n                clearTimeout(id_1);\n                completer.resolve();\n            };\n            Promise.all(this.beforeDestroyHandlers.map(function (fn) { return fn(); }))\n                .then(resolve)\n                .catch(resolve);\n        }\n        return completer.promise;\n    };\n    /**\n     * A handler running before destruction of the overlay\n     * use to delay destruction due to animation.\n     * This is part of the workaround for animation, see canDestroy.\n     *\n     * NOTE: There is no guarantee that the listeners will fire, use dialog.onDestory for that.\n     * @param {?} fn\n     * @return {?}\n     */\n    ModalOverlay.prototype.beforeDestroy = function (fn) {\n        if (!this.beforeDestroyHandlers) {\n            this.beforeDestroyHandlers = [];\n        }\n        this.beforeDestroyHandlers.push(fn);\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    ModalOverlay.prototype.documentKeypress = function (event) {\n        // check that this modal is the last in the stack.\n        if (!this.dialogRef.overlay.isTopMost(this.dialogRef))\n            return;\n        if (supportsKey(event.keyCode, /** @type {?} */ (this.dialogRef.context.keyboard))) {\n            this.dialogRef.dismiss();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ModalOverlay.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this.dialogRef.destroyed !== true) {\n            // if we're here the overlay is destroyed by an external event that is not user invoked.\n            // i.e: The user did no call dismiss or close and dialogRef.destroy() did not invoke.\n            // this will happen when routing or killing an element containing a blocked overlay (ngIf)\n            // we bail out, i.e gracefully shutting down.\n            this.dialogRef.bailOut();\n        }\n    };\n    ModalOverlay.decorators = [\n        { type: Component, args: [{\n                    selector: 'modal-overlay',\n                    host: {\n                        '(body:keydown)': 'documentKeypress($event)'\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    templateUrl: './overlay.component.html'\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    ModalOverlay.ctorParameters = function () { return [\n        { type: DialogRef, },\n        { type: ViewContainerRef, },\n        { type: ElementRef, },\n        { type: Renderer, },\n    ]; };\n    ModalOverlay.propDecorators = {\n        'container': [{ type: ViewChild, args: ['container', { read: ElementRef },] },],\n        'innerVcr': [{ type: ViewChild, args: ['innerView', { read: ViewContainerRef },] },],\n        'template': [{ type: ViewChild, args: ['template',] },],\n    };\n    return ModalOverlay;\n}(BaseDynamicComponent));\nexport { ModalOverlay };\nfunction ModalOverlay_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ModalOverlay.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ModalOverlay.ctorParameters;\n    /** @type {?} */\n    ModalOverlay.propDecorators;\n    /** @type {?} */\n    ModalOverlay.prototype.beforeDestroyHandlers;\n    /** @type {?} */\n    ModalOverlay.prototype.container;\n    /** @type {?} */\n    ModalOverlay.prototype.innerVcr;\n    /** @type {?} */\n    ModalOverlay.prototype.template;\n    /** @type {?} */\n    ModalOverlay.prototype.dialogRef;\n    /** @type {?} */\n    ModalOverlay.prototype.vcr;\n}\n//# sourceMappingURL=overlay.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/overlay/overlay.component.js\n// module id = 30\n// module chunks = 0","import { Directive, Input, ElementRef, ViewContainerRef } from '@angular/core';\nimport { DialogRef } from '../models/dialog-ref';\nimport { vcRefStore } from '../models/vc-ref-store';\n/**\n * A directive use to signal the overlay that the host of this directive\n * is a dialog boundary, i.e: over click outside of the element should close the modal\n * (if non blocking)\n */\nvar OverlayDialogBoundary = (function () {\n    /**\n     * @param {?} el\n     * @param {?} dialogRef\n     */\n    function OverlayDialogBoundary(el, dialogRef) {\n        if (dialogRef && el.nativeElement) {\n            dialogRef.overlayRef.instance.setClickBoundary(el.nativeElement);\n        }\n    }\n    OverlayDialogBoundary.decorators = [\n        { type: Directive, args: [{\n                    selector: '[overlayDialogBoundary]'\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    OverlayDialogBoundary.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: DialogRef, },\n    ]; };\n    return OverlayDialogBoundary;\n}());\nexport { OverlayDialogBoundary };\nfunction OverlayDialogBoundary_tsickle_Closure_declarations() {\n    /** @type {?} */\n    OverlayDialogBoundary.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    OverlayDialogBoundary.ctorParameters;\n}\nvar OverlayTarget = (function () {\n    /**\n     * @param {?} vcRef\n     */\n    function OverlayTarget(vcRef) {\n        this.vcRef = vcRef;\n    }\n    Object.defineProperty(OverlayTarget.prototype, \"targetKey\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._targetKey = value;\n            if (value) {\n                vcRefStore.setVCRef(value, this.vcRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    OverlayTarget.prototype.ngOnDestroy = function () {\n        if (this._targetKey) {\n            vcRefStore.delVCRef(this._targetKey, this.vcRef);\n        }\n    };\n    OverlayTarget.decorators = [\n        { type: Directive, args: [{\n                    selector: '[overlayTarget]'\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    OverlayTarget.ctorParameters = function () { return [\n        { type: ViewContainerRef, },\n    ]; };\n    OverlayTarget.propDecorators = {\n        'targetKey': [{ type: Input, args: ['overlayTarget',] },],\n    };\n    return OverlayTarget;\n}());\nexport { OverlayTarget };\nfunction OverlayTarget_tsickle_Closure_declarations() {\n    /** @type {?} */\n    OverlayTarget.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    OverlayTarget.ctorParameters;\n    /** @type {?} */\n    OverlayTarget.propDecorators;\n    /** @type {?} */\n    OverlayTarget.prototype._targetKey;\n    /** @type {?} */\n    OverlayTarget.prototype.vcRef;\n}\n//# sourceMappingURL=overlay.directives.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/overlay/overlay.directives.js\n// module id = 31\n// module chunks = 0","import { Injectable, Injector } from '@angular/core';\nimport { OverlayRenderer } from '../models/tokens';\nimport { DialogRefStack } from '../models/dialog-ref-stack';\nimport { vcRefStore } from '../models/vc-ref-store';\nimport { DialogRef } from '../models/dialog-ref';\nvar /** @type {?} */ _stack = new DialogRefStack();\nvar Overlay = (function () {\n    /**\n     * @param {?} _modalRenderer\n     * @param {?} injector\n     */\n    function Overlay(_modalRenderer, injector) {\n        this._modalRenderer = _modalRenderer;\n        this.injector = injector;\n    }\n    Object.defineProperty(Overlay.prototype, \"stackLength\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return _stack.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Check if a given DialogRef is the top most ref in the stack.\n     * TODO: distinguish between body modal vs in element modal.\n     * @param {?} dialogRef\n     * @return {?}\n     */\n    Overlay.prototype.isTopMost = function (dialogRef) {\n        return _stack.indexOf(dialogRef) === _stack.length - 1;\n    };\n    /**\n     * @param {?} dialogRef\n     * @return {?}\n     */\n    Overlay.prototype.stackPosition = function (dialogRef) {\n        return _stack.indexOf(dialogRef);\n    };\n    /**\n     * @param {?} dialogRef\n     * @return {?}\n     */\n    Overlay.prototype.groupStackLength = function (dialogRef) {\n        return _stack.groupLength(_stack.groupOf(dialogRef));\n    };\n    /**\n     * @param {?=} result\n     * @return {?}\n     */\n    Overlay.prototype.closeAll = function (result) {\n        if (result === void 0) { result = null; }\n        _stack.closeAll(result);\n    };\n    /**\n     * Creates an overlay and returns a dialog ref.\n     * @template T\n     * @param {?} config instructions how to create the overlay\n     * @param {?=} group A token to associate the new overlay with, used for reference (stacks usually)\n     * @return {?}\n     */\n    Overlay.prototype.open = function (config, group) {\n        var _this = this;\n        var /** @type {?} */ viewContainer = config.viewContainer, /** @type {?} */ containers = [];\n        if (typeof viewContainer === 'string') {\n            containers = vcRefStore.getVCRef(/** @type {?} */ (viewContainer));\n        }\n        else if (Array.isArray(viewContainer)) {\n            containers = (viewContainer);\n        }\n        else if (viewContainer) {\n            containers = ([viewContainer]);\n        }\n        else {\n            containers = [null];\n        }\n        return containers\n            .map(function (vc) { return _this.createOverlay(config.renderer || _this._modalRenderer, vc, config, group); });\n    };\n    /**\n     * @param {?} renderer\n     * @param {?} vcRef\n     * @param {?} config\n     * @param {?} group\n     * @return {?}\n     */\n    Overlay.prototype.createOverlay = function (renderer, vcRef, config, group) {\n        if (config.context) {\n            config.context.normalize();\n        }\n        if (!config.injector) {\n            config.injector = this.injector;\n        }\n        var /** @type {?} */ dialog = new DialogRef(this, config.context || {});\n        dialog.inElement = config.context && !!config.context.inElement;\n        var /** @type {?} */ cmpRef = renderer.render(dialog, vcRef, config.injector);\n        Object.defineProperty(dialog, 'overlayRef', { value: cmpRef });\n        _stack.pushManaged(dialog, group);\n        return dialog;\n    };\n    Overlay.decorators = [\n        { type: Injectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    Overlay.ctorParameters = function () { return [\n        { type: OverlayRenderer, },\n        { type: Injector, },\n    ]; };\n    return Overlay;\n}());\nexport { Overlay };\nfunction Overlay_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Overlay.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    Overlay.ctorParameters;\n    /** @type {?} */\n    Overlay.prototype._modalRenderer;\n    /** @type {?} */\n    Overlay.prototype.injector;\n}\n//# sourceMappingURL=overlay.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/overlay/overlay.service.js\n// module id = 32\n// module chunks = 0","import { ApplicationRef, Injector, Injectable, ReflectiveInjector } from '@angular/core';\nimport { createComponent } from '../framework/createComponent';\nimport { DialogRef } from '../models/dialog-ref';\nimport { ModalOverlay } from '../overlay/index';\nvar DOMOverlayRenderer = (function () {\n    /**\n     * @param {?} appRef\n     * @param {?} injector\n     */\n    function DOMOverlayRenderer(appRef, injector) {\n        this.appRef = appRef;\n        this.injector = injector;\n        this.isDoc = !(typeof document === 'undefined' || !document);\n    }\n    /**\n     * @param {?} dialog\n     * @param {?} vcRef\n     * @param {?=} injector\n     * @return {?}\n     */\n    DOMOverlayRenderer.prototype.render = function (dialog, vcRef, injector) {\n        var _this = this;\n        if (!injector) {\n            injector = this.injector;\n        }\n        var /** @type {?} */ bindings = ReflectiveInjector.resolve([\n            { provide: DialogRef, useValue: dialog }\n        ]);\n        var /** @type {?} */ cmpRef = createComponent({\n            component: ModalOverlay,\n            vcRef: vcRef,\n            injector: injector,\n            bindings: bindings\n        });\n        if (!vcRef) {\n            this.appRef.attachView(cmpRef.hostView);\n            // TODO: doesn't look like this is needed, explore. leaving now to be on the safe side.\n            dialog.onDestroy.subscribe(function () { return _this.appRef.detachView(cmpRef.hostView); });\n        }\n        if (vcRef && dialog.inElement) {\n            vcRef.element.nativeElement.appendChild(cmpRef.location.nativeElement);\n        }\n        else if (this.isDoc) {\n            document.body.appendChild(cmpRef.location.nativeElement);\n        }\n        return cmpRef;\n    };\n    DOMOverlayRenderer.decorators = [\n        { type: Injectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    DOMOverlayRenderer.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n        { type: Injector, },\n    ]; };\n    return DOMOverlayRenderer;\n}());\nexport { DOMOverlayRenderer };\nfunction DOMOverlayRenderer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DOMOverlayRenderer.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DOMOverlayRenderer.ctorParameters;\n    /** @type {?} */\n    DOMOverlayRenderer.prototype.isDoc;\n    /** @type {?} */\n    DOMOverlayRenderer.prototype.appRef;\n    /** @type {?} */\n    DOMOverlayRenderer.prototype.injector;\n}\n//# sourceMappingURL=dom-modal-renderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/providers/dom-modal-renderer.js\n// module id = 33\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ReflectiveInjector } from '@angular/core';\nimport { DialogRef } from '../models/dialog-ref';\nvar UnsupportedDropInError = (function (_super) {\n    __extends(UnsupportedDropInError, _super);\n    /**\n     * @param {?} dropInName\n     */\n    function UnsupportedDropInError(dropInName) {\n        var _this = _super.call(this) || this;\n        _this.message = \"Unsupported Drop-In \" + dropInName;\n        return _this;\n    }\n    return UnsupportedDropInError;\n}(Error));\nexport { UnsupportedDropInError };\n/**\n * @abstract\n */\nvar Modal = (function () {\n    /**\n     * @param {?} overlay\n     */\n    function Modal(overlay) {\n        this.overlay = overlay;\n    }\n    /**\n     * @return {?}\n     */\n    Modal.prototype.alert = function () {\n        throw new UnsupportedDropInError('alert');\n    };\n    /**\n     * @return {?}\n     */\n    Modal.prototype.prompt = function () {\n        throw new UnsupportedDropInError('prompt');\n    };\n    /**\n     * @return {?}\n     */\n    Modal.prototype.confirm = function () {\n        throw new UnsupportedDropInError('confirm');\n    };\n    /**\n     * Opens a modal window inside an existing component.\n     * @param {?} content The content to display, either string, template ref or a component.\n     * @param {?=} config Additional settings.\n     * @return {?}\n     */\n    Modal.prototype.open = function (content, config) {\n        config = config || ({});\n        try {\n            var /** @type {?} */ dialogs = this.overlay.open(config, this.constructor);\n            if (dialogs.length > 1) {\n                console.warn(\"Attempt to open more then 1 overlay detected.\\n        Multiple modal copies are not supported at the moment, \\n        only the first viewContainer will display.\");\n            }\n            // TODO:  Currently supporting 1 view container, hence working on dialogs[0].\n            //        upgrade to multiple containers.\n            return Promise.resolve(this.create(dialogs[0], content, config.bindings));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    /**\n     * A Hook that enables derived classes to add content to the overlay.\n     * @abstract\n     * @param {?} dialogRef\n     * @param {?} type\n     * @param {?=} bindings\n     * @return {?}\n     */\n    Modal.prototype.create = function (dialogRef, type, bindings) { };\n    /**\n     * @template T\n     * @param {?} dialogRef\n     * @param {?} BackdropComponent\n     * @return {?}\n     */\n    Modal.prototype.createBackdrop = function (dialogRef, BackdropComponent) {\n        var /** @type {?} */ b = ReflectiveInjector.resolve([{ provide: DialogRef, useValue: dialogRef }]);\n        return dialogRef.overlayRef.instance.addComponent(BackdropComponent, b);\n    };\n    /**\n     * @template T\n     * @param {?} dialogRef\n     * @param {?} ContainerComponent\n     * @param {?} content\n     * @param {?=} bindings\n     * @return {?}\n     */\n    Modal.prototype.createContainer = function (dialogRef, ContainerComponent, content, bindings) {\n        var /** @type {?} */ b = ReflectiveInjector.resolve([{ provide: DialogRef, useValue: dialogRef }])\n            .concat(bindings || []);\n        var /** @type {?} */ nodes = dialogRef.overlayRef.instance.getProjectables(content, b);\n        return dialogRef.overlayRef.instance.addComponent(ContainerComponent, b, nodes);\n    };\n    /**\n     * A helper function for derived classes to create backdrop & container\n     * @deprecated use createBackdrop and createContainer instead\n     * @template B, C\n     * @param {?} dialogRef\n     * @param {?} backdrop\n     * @param {?} container\n     *\n     * @return {?}\n     */\n    Modal.prototype.createModal = function (dialogRef, backdrop, container) {\n        var /** @type {?} */ b = ReflectiveInjector.resolve([{ provide: DialogRef, useValue: dialogRef }]);\n        return {\n            backdropRef: dialogRef.overlayRef.instance.addComponent(backdrop, b),\n            containerRef: dialogRef.overlayRef.instance.addComponent(container, b)\n        };\n    };\n    return Modal;\n}());\nexport { Modal };\nfunction Modal_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Modal.prototype.overlay;\n}\n//# sourceMappingURL=modal.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.tmp/ngx-modialog/src/providers/modal.js\n// module id = 34\n// module chunks = 0","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observables internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remote this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2,5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observable.js\n// module id = 35\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/SubjectSubscription.js\n// module id = 36\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n        this.predicate = predicate;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/filter.js\n// module id = 37\n// module chunks = 0","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/observable.js\n// module id = 38\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/ObjectUnsubscribedError.js\n// module id = 39\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/UnsubscriptionError.js\n// module id = 40\n// module chunks = 0","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isArray.js\n// module id = 41\n// module chunks = 0","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isObject.js\n// module id = 42\n// module chunks = 0","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/toSubscriber.js\n// module id = 43\n// module chunks = 0","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/tryCatch.js\n// module id = 44\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 45\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_46__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common\"\n// module id = 46\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_47__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/platform-browser\"\n// module id = 47\n// module chunks = 0"],"sourceRoot":""}