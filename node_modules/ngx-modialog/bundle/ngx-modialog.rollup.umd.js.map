{"version":3,"file":"ngx-modialog.rollup.umd.js","sources":["../../../src/ngx-modialog/src/ngx-modialog.module.ts","../../../src/ngx-modialog/src/models/modal-open-context.ts","../../../src/ngx-modialog/src/models/modal-context.ts","../../../src/ngx-modialog/src/models/overlay-context.ts","../../../src/ngx-modialog/src/providers/outside-event-plugin.ts","../../../src/ngx-modialog/src/providers/modal.ts","../../../src/ngx-modialog/src/providers/dom-modal-renderer.ts","../../../src/ngx-modialog/src/overlay/overlay.service.ts","../../../src/ngx-modialog/src/models/dialog-ref-stack.ts","../../../src/ngx-modialog/src/overlay/overlay.component.ts","../../../src/ngx-modialog/src/components/css-dialog-container.ts","../../../src/ngx-modialog/src/components/css-backdrop.ts","../../../src/ngx-modialog/src/components/base-dynamic-component.ts","../../../src/ngx-modialog/src/overlay/overlay.directives.ts","../../../src/ngx-modialog/src/models/vc-ref-store.ts","../../../src/ngx-modialog/src/models/tokens.ts","../../../src/ngx-modialog/src/models/dialog-ref.ts","../../../src/ngx-modialog/src/models/errors.ts","../../../src/ngx-modialog/src/framework/createComponent.ts","../../../src/ngx-modialog/src/framework/utils.ts","../../../src/ngx-modialog/src/framework/fluent-assign.ts"],"sourcesContent":["import { ANALYZE_FOR_ENTRY_COMPONENTS, NgModule, ModuleWithProviders, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';\n\nimport { DOMOutsideEventPlugin, DOMOverlayRenderer } from './providers/index';\nimport { OverlayRenderer } from './models/tokens';\nimport { CSSBackdrop, CSSDialogContainer } from './components/index';\nimport {\n  Overlay,\n  ModalOverlay,\n  OverlayDialogBoundary,\n  OverlayTarget\n} from './overlay/index';\nexport class ModalModule {\n/**\n * Returns a ModalModule pre-loaded with a list of dynamically inserted components.\n * Since dynamic components are not analysed by the angular compiler they must register manually\n * using entryComponents, this is an easy way to do it.\n * @param {?} entryComponents A list of dynamically inserted components (dialog's).\n * @return {?}\n */\nstatic withComponents(entryComponents: Array<Type<any> | any[]>): ModuleWithProviders {\n    return {\n      ngModule: ModalModule,\n      providers: [\n        {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: entryComponents, multi: true}\n      ]\n    }\n  }\n/**\n * Returns a NgModule for use in the root Module.\n * @param {?=} entryComponents A list of dynamically inserted components (dialog's).\n * @return {?} ModuleWithProviders\n */\nstatic forRoot(entryComponents?: Array<Type<any> | any[]>): ModuleWithProviders {\n    return {\n      ngModule: ModalModule,\n      providers: [\n        {provide: OverlayRenderer, useClass: DOMOverlayRenderer},\n        {provide: EVENT_MANAGER_PLUGINS, useClass: DOMOutsideEventPlugin, multi: true},\n        {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: entryComponents || [], multi: true}\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    ModalOverlay,\n    CSSBackdrop,\n    CSSDialogContainer,\n    OverlayDialogBoundary,\n    OverlayTarget\n  ],\n  imports: [ CommonModule ],\n  exports: [\n    CSSBackdrop,\n    CSSDialogContainer,\n    OverlayDialogBoundary,\n    OverlayTarget\n  ],\n  providers: [\n    Overlay\n  ],\n  entryComponents: [\n    ModalOverlay,\n    CSSBackdrop,\n    CSSDialogContainer\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ModalModule_tsickle_Closure_declarations() {\n/** @type {?} */\nModalModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nModalModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ResolvedReflectiveProvider } from '@angular/core';\n\nimport { FluentAssignMethod } from '../framework/fluent-assign';\nimport { ModalComponent, OverlayConfig, WideVCRef } from './tokens';\nimport { Modal } from '../providers/index';\nimport { DialogRef } from './dialog-ref';\nimport { ModalContext, ModalContextBuilder } from './modal-context';\nimport { ModalControllingContextBuilder } from './overlay-context';\n\nimport { arrayUnion } from '../framework/utils';\n\nconst /** @type {?} */ DEFAULT_SETTERS = [\n  'component'\n];\nexport class ModalOpenContext extends ModalContext {\n  component: any;\n  modal: Modal;\n}\n\nfunction ModalOpenContext_tsickle_Closure_declarations() {\n/** @type {?} */\nModalOpenContext.prototype.component;\n/** @type {?} */\nModalOpenContext.prototype.modal;\n}\n\n/**\n * A Modal Context that knows about the modal service, and so can open a modal window on demand.\n * Use the fluent API to configure the preset and then invoke the 'open' method to open a modal\n * based on the context.\n * @abstract\n */\nexport abstract class ModalOpenContextBuilder<T extends ModalOpenContext>\n                  extends ModalContextBuilder<T> implements ModalControllingContextBuilder<T> {\n/**\n * A Class for the footer container.\n * Default: modal-footer\n */\ncomponent: FluentAssignMethod<ModalComponent<T>, this>;\n/**\n * @param {?=} defaultValues\n * @param {?=} initialSetters\n * @param {?=} baseType\n */\nconstructor(defaultValues: T = undefined,\n              initialSetters: string[] = undefined,\n              baseType: new () => T = undefined) {\n    super(\n      defaultValues || <any>{},\n      arrayUnion<string>(DEFAULT_SETTERS, initialSetters || []),\n      baseType\n    );\n  }\n/**\n * Hook to alter config and return bindings.\n * @param {?} config\n * @return {?}\n */\nprotected $$beforeOpen(config: T): ResolvedReflectiveProvider[] {\n    return [];\n  }\n/**\n * Open a modal window based on the configuration of this config instance.\n * @param {?=} viewContainer If set opens the modal inside the supplied viewContainer\n * @return {?} Promise<DialogRef>\n */\nopen(viewContainer?: WideVCRef): Promise<DialogRef<T>> {\n    let /** @type {?} */ context: T = this.toJSON();\n\n    if (!(context.modal instanceof Modal)) {\n      return /** @type {?} */(( <any>Promise.reject(new Error('Configuration Error: modal service not set.'))));\n    }\n\n    let /** @type {?} */ overlayConfig: OverlayConfig = {\n      context: context,\n      viewContainer: viewContainer,\n      bindings: typeof this.$$beforeOpen === 'function' && this.$$beforeOpen(context)\n    };\n\n    return context.modal.open(context.component, overlayConfig);\n  }\n}\n\nfunction ModalOpenContextBuilder_tsickle_Closure_declarations() {\n/**\n * A Class for the footer container.\n * Default: modal-footer\n * @type {?}\n */\nModalOpenContextBuilder.prototype.component;\n}\n\n","import { FluentAssignMethod } from './../framework/fluent-assign';\nimport { extend, arrayUnion } from './../framework/utils';\nimport { OverlayContext, OverlayContextBuilder } from './overlay-context';\n\nexport const /** @type {?} */ DEFAULT_VALUES = {};\n\nconst /** @type {?} */ DEFAULT_SETTERS = [\n    'message'\n];\nexport class ModalContext extends OverlayContext {\n/**\n * The core message to display.\n * A modal might have an extended message (e.g: HTML message) or other fields (e.g: title) but\n * all models, at core, convey a message thus message is common to all modals.\n */\nmessage: string;\n}\n\nfunction ModalContext_tsickle_Closure_declarations() {\n/**\n * The core message to display.\n * A modal might have an extended message (e.g: HTML message) or other fields (e.g: title) but\n * all models, at core, convey a message thus message is common to all modals.\n * @type {?}\n */\nModalContext.prototype.message;\n}\n\n/**\n * A core context builder for a modal window instance, used to define the context upon\n * a modal choose it's behaviour.\n */\nexport class ModalContextBuilder<T extends ModalContext> extends OverlayContextBuilder<T> {\n/**\n * The core message to display.\n * A modal might have an extended message (e.g: HTML message) or other fields (e.g: title) but\n * all models, at core, convey a message thus message is common to all modals.\n */\nmessage: FluentAssignMethod<string, this>;\n/**\n * @param {?=} defaultValues\n * @param {?=} initialSetters\n * @param {?=} baseType\n */\nconstructor(\n        defaultValues: T | T[] = undefined,\n        initialSetters: string[] = undefined,\n        baseType: new () => T = undefined\n    ) {\n        super(\n            extend<any>(DEFAULT_VALUES, defaultValues || {}),\n            arrayUnion<string>(DEFAULT_SETTERS, initialSetters || []),\n            baseType\n        );\n    }\n}\n\nfunction ModalContextBuilder_tsickle_Closure_declarations() {\n/**\n * The core message to display.\n * A modal might have an extended message (e.g: HTML message) or other fields (e.g: title) but\n * all models, at core, convey a message thus message is common to all modals.\n * @type {?}\n */\nModalContextBuilder.prototype.message;\n}\n\n","import { FluentAssign, FluentAssignMethod } from './../framework/fluent-assign';\nimport { extend, arrayUnion } from './../framework/utils';\nimport { DialogRef } from './dialog-ref';\nimport { WideVCRef, OverlayConfig } from './tokens';\n\nexport const /** @type {?} */ DEFAULT_VALUES = {\n  inElement: false,\n  isBlocking: true,\n  keyboard: [27],\n  supportsKey: function supportsKey(keyCode: number): boolean {\n    return ( /** @type {?} */((<Array<number>>this.keyboard))).indexOf(keyCode) > -1;\n  }\n};\n\nconst /** @type {?} */ DEFAULT_SETTERS = [\n  'inElement',\n  'isBlocking',\n  'keyboard'\n];\nexport class OverlayContext {\n/**\n * Describes if the modal is rendered within the container element.\n * The container element is the ViewContainerRef supplied.\n * Defaults to false.\n */\ninElement: boolean;\n/**\n * Describes if the modal is blocking modal.\n * A Blocking modal is not closable by clicking outside of the modal window.\n * Defaults to false.\n */\nisBlocking: boolean;\n/**\n * Keyboard value/s that close the modal.\n * Accepts either a single numeric value or an array of numeric values.\n * A modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\n * Defaults to 27, set `null` implicitly to disable.\n */\nkeyboard: Array<number> | number;\n/**\n * @return {?}\n */\nnormalize(): void {\n    if (this.isBlocking !== false)\n      this.isBlocking = true;\n\n    if (this.keyboard === null) {\n      this.keyboard = [];\n    } else if (typeof this.keyboard === 'number') {\n      this.keyboard = [ /** @type {?} */((<number>this.keyboard))];\n    } else if (!Array.isArray( /** @type {?} */((<Array<number>>this.keyboard)))) {\n      this.keyboard = DEFAULT_VALUES.keyboard;\n    }\n  }\n}\n\nfunction OverlayContext_tsickle_Closure_declarations() {\n/**\n * Describes if the modal is rendered within the container element.\n * The container element is the ViewContainerRef supplied.\n * Defaults to false.\n * @type {?}\n */\nOverlayContext.prototype.inElement;\n/**\n * Describes if the modal is blocking modal.\n * A Blocking modal is not closable by clicking outside of the modal window.\n * Defaults to false.\n * @type {?}\n */\nOverlayContext.prototype.isBlocking;\n/**\n * Keyboard value/s that close the modal.\n * Accepts either a single numeric value or an array of numeric values.\n * A modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\n * Defaults to 27, set `null` implicitly to disable.\n * @type {?}\n */\nOverlayContext.prototype.keyboard;\n}\n\n/**\n * A core context builder for a modal window instance, used to define the context upon\n * a modal choose it's behaviour.\n */\nexport class OverlayContextBuilder<T extends OverlayContext> extends FluentAssign<T> {\n/**\n * Describes if the modal is rendered within the container element.\n * The container element is the ViewContainerRef supplied.\n * Defaults to false.\n */\ninElement: FluentAssignMethod<boolean, this>;\n/**\n * Describes if the modal is blocking modal.\n * A Blocking modal is not closable by clicking outside of the modal window.\n * Defaults to false.\n */\nisBlocking: FluentAssignMethod<boolean, this>;\n/**\n * Keyboard value/s that close the modal.\n * Accepts either a single numeric value or an array of numeric values.\n * A modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\n * Defaults to 27, set `null` implicitly to disable.\n */\nkeyboard: FluentAssignMethod<Array<number> | number, this>;\n/**\n * @param {?=} defaultValues\n * @param {?=} initialSetters\n * @param {?=} baseType\n */\nconstructor(defaultValues: T | T[] = undefined,\n              initialSetters: string[] = undefined,\n              baseType: new () => T = undefined) {\n    super(\n      extend<any>(DEFAULT_VALUES, defaultValues || {}),\n      arrayUnion<string>(DEFAULT_SETTERS, initialSetters || []),\n      baseType || <any>OverlayContext // https://github.com/Microsoft/TypeScript/issues/7234\n    );\n  }\n/**\n * Returns an new OverlayConfig with a context property representing the data in this builder.\n * @param {?=} base A base configuration that the result will extend\n * @return {?} OverlayConfig\n */\ntoOverlayConfig(base?: OverlayConfig): OverlayConfig {\n    return extend(base || {}, {\n      context: this.toJSON()\n    });\n  }\n}\n\nfunction OverlayContextBuilder_tsickle_Closure_declarations() {\n/**\n * Describes if the modal is rendered within the container element.\n * The container element is the ViewContainerRef supplied.\n * Defaults to false.\n * @type {?}\n */\nOverlayContextBuilder.prototype.inElement;\n/**\n * Describes if the modal is blocking modal.\n * A Blocking modal is not closable by clicking outside of the modal window.\n * Defaults to false.\n * @type {?}\n */\nOverlayContextBuilder.prototype.isBlocking;\n/**\n * Keyboard value/s that close the modal.\n * Accepts either a single numeric value or an array of numeric values.\n * A modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\n * Defaults to 27, set `null` implicitly to disable.\n * @type {?}\n */\nOverlayContextBuilder.prototype.keyboard;\n}\n\n\nexport interface ModalControllingContextBuilder<T> {\n  open(viewContainer?: WideVCRef): Promise<DialogRef<T>>;\n}\n/**\n * A helper to create an `OverlayConfig` on the fly.\n * Since `OverlayConfig` requires context it means a builder is needed, this process had some boilerplate.\n * When a quick, on the fly overlay config is needed use this helper to avoid that boilerplate.\n * \n * A builder is used as an API to allow setting the context and providing some operations around the modal.\n * When a developers knows the context before hand we can skip this step, this is what this factory is for.\n * \n * @template T\n * @param {?} context The context for the modal\n * @param {?=} baseContextType Optional. The type/class of the context. This is the class used to init a new instance of the context\n * @param {?=} baseConfig A base configuration that the result will extend\n * @return {?}\n */\nexport function overlayConfigFactory<T>(context: T, baseContextType?: any, baseConfig?: OverlayConfig): OverlayConfig {\n  return new OverlayContextBuilder<T & OverlayContext>( /** @type {?} */((<any>context)), undefined, baseContextType).toOverlayConfig(baseConfig);\n}","// heavily inspired by:\n// http://www.bennadel.com/blog/3025-creating-custom-dom-and-host-event-bindings-in-angular-2-beta-6.htm\n\n\nimport { Injectable } from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\nimport { noop } from '../framework/utils';\n\n// TODO: use DI factory for this.\n// TODO: consolidate dup code\nconst /** @type {?} */ isDoc: boolean = !(typeof document === 'undefined' || !document);\n\nconst /** @type {?} */ eventMap = {\n    clickOutside: 'click',\n    mousedownOutside: 'mousedown',\n    mouseupOutside: 'mouseup',\n    mousemoveOutside: 'mousemove'\n};\n/**\n * An event handler factory for event handlers that bubble the event to a given handler\n * if the event target is not an ancestor of the given element.\n * @param {?} element\n * @param {?} handler\n * @return {?}\n */\nfunction bubbleNonAncestorHandlerFactory(element: HTMLElement, handler: (event) => void) {\n    return (event) => {\n        let /** @type {?} */ current = event.target;\n        do {\n            if (current === element) {\n                return;\n            }\n        } while (current.parentNode && ( current = current.parentNode ));\n\n        handler(event);\n    };\n}\nexport class DOMOutsideEventPlugin { // extends EventManagerPlugin\n    manager: EventManager;\nconstructor() {\n    if (!isDoc || typeof document.addEventListener !== 'function') {\n        this.addEventListener = noop as any;\n    }\n    }\n/**\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string): boolean {\n        return eventMap.hasOwnProperty(eventName);\n    }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n        const /** @type {?} */ zone = this.manager.getZone();\n\n        // A Factory that registers the event on the document, instead of the element.\n        // the handler is created at runtime, and it acts as a propagation/bubble predicate, it will\n        // bubble up the event (i.e: execute our original event handler) only if the event targer\n        // is an ancestor of our element.\n        // The event is fired inside the angular zone so change detection can kick into action.\n        const /** @type {?} */ onceOnOutside = () => {\n            const /** @type {?} */ listener =\n              bubbleNonAncestorHandlerFactory(element, evt => zone.runGuarded(() => handler(evt)));\n\n            // mimic BrowserDomAdapter.onAndCancel\n            document.addEventListener(eventMap[eventName], listener, false);\n            return () => document.removeEventListener(eventMap[eventName], listener, false);\n        };\n\n        // we run the event registration for the document in a different zone, this will make sure\n        // change detection is off.\n        // It turns out that if a component that use DOMOutsideEventPlugin is built from a click\n        // event, we might get here before the event reached the document, causing a quick false\n        // positive handling (when stopPropagation() was'nt invoked). To workaround this we wait\n        // for the next vm turn and register.\n        // Event registration returns a dispose function for that event, angular use it to clean\n        // up after component get's destroyed. Since we need to return a dispose function\n        // synchronously we have to put a wrapper for it since we will get it asynchronously,\n        // i.e: after we need to return it.\n        //\n        return zone.runOutsideAngular(() => {\n            let /** @type {?} */ fn: Function;\n            setTimeout(() => fn = onceOnOutside(), 0);\n            return () => {\n                if (fn) fn();\n            };\n        });\n    }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddGlobalEventListener(target: string, eventName: string, handler: Function): Function {\n        throw 'not supported';\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DOMOutsideEventPlugin_tsickle_Closure_declarations() {\n/** @type {?} */\nDOMOutsideEventPlugin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDOMOutsideEventPlugin.ctorParameters;\n/** @type {?} */\nDOMOutsideEventPlugin.prototype.manager;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ComponentRef,\n  TemplateRef,\n  ReflectiveInjector,\n  ResolvedReflectiveProvider, Type\n} from '@angular/core';\n\nimport { Overlay } from '../overlay/index';\nimport { Class, Maybe } from '../framework/utils';\nimport { OverlayConfig, ContainerContent } from '../models/tokens';\nimport { DialogRef } from '../models/dialog-ref';\nimport { ModalControllingContextBuilder } from '../models/overlay-context';\nexport class UnsupportedDropInError extends Error {\n/**\n * @param {?} dropInName\n */\nconstructor(dropInName: string) {\n    super();\n    this.message = `Unsupported Drop-In ${dropInName}`;\n  }\n}\n/**\n * @abstract\n */\nexport abstract class Modal {\n/**\n * @param {?} overlay\n */\nconstructor(public overlay: Overlay) { }\n/**\n * @return {?}\n */\nalert(): ModalControllingContextBuilder<any> {\n    throw new UnsupportedDropInError('alert');\n  }\n/**\n * @return {?}\n */\nprompt(): ModalControllingContextBuilder<any> {\n    throw new UnsupportedDropInError('prompt');\n  }\n/**\n * @return {?}\n */\nconfirm(): ModalControllingContextBuilder<any> {\n    throw new UnsupportedDropInError('confirm');\n  }\n/**\n * Opens a modal window inside an existing component.\n * @param {?} content The content to display, either string, template ref or a component.\n * @param {?=} config Additional settings.\n * @return {?}\n */\nopen(content: ContainerContent, config?: OverlayConfig): Promise<DialogRef<any>> {\n    config = config || /** @type {?} */(( {} as any));\n    try {\n      let /** @type {?} */ dialogs = this.overlay.open(config, this.constructor);\n\n      if (dialogs.length > 1) {\n        console.warn(`Attempt to open more then 1 overlay detected.\n        Multiple modal copies are not supported at the moment, \n        only the first viewContainer will display.`);\n      }\n      // TODO:  Currently supporting 1 view container, hence working on dialogs[0].\n      //        upgrade to multiple containers.\n      return Promise.resolve(\n        this.create(dialogs[0], content, config.bindings)\n      );\n\n    } catch ( /** @type {?} */e) {\n      return Promise.reject<DialogRef<any>>(e);\n    }\n\n  }\n/**\n * A Hook that enables derived classes to add content to the overlay.\n * @abstract\n * @param {?} dialogRef\n * @param {?} type\n * @param {?=} bindings\n * @return {?}\n */\ncreate(dialogRef: DialogRef<any>,\n                            type: ContainerContent,\n                            bindings?: ResolvedReflectiveProvider[]) {}\n/**\n * @template T\n * @param {?} dialogRef\n * @param {?} BackdropComponent\n * @return {?}\n */\nprotected createBackdrop<T>(dialogRef: DialogRef<any>, BackdropComponent: Class<T>): ComponentRef<T> {\n    const /** @type {?} */ b = ReflectiveInjector.resolve([{provide: DialogRef, useValue: dialogRef}]);\n    return dialogRef.overlayRef.instance.addComponent<T>(BackdropComponent, b);\n  }\n/**\n * @template T\n * @param {?} dialogRef\n * @param {?} ContainerComponent\n * @param {?} content\n * @param {?=} bindings\n * @return {?}\n */\nprotected createContainer<T>(\n    dialogRef: DialogRef<any>,\n    ContainerComponent: Class<T>,\n    content: string | TemplateRef<any> | Type<any>,\n    bindings?: ResolvedReflectiveProvider[]): ComponentRef<T> {\n\n    const /** @type {?} */ b = ReflectiveInjector.resolve([{provide: DialogRef, useValue: dialogRef}])\n      .concat(bindings || []);\n\n    let /** @type {?} */ nodes: any[] = dialogRef.overlayRef.instance.getProjectables(content, b);\n    return dialogRef.overlayRef.instance.addComponent<T>(ContainerComponent, b, nodes);\n  }\n/**\n * A helper function for derived classes to create backdrop & container\n * @deprecated use createBackdrop and createContainer instead\n * @template B, C\n * @param {?} dialogRef\n * @param {?} backdrop\n * @param {?} container \n * \n * @return {?}\n */\nprotected createModal<B, C>(dialogRef: DialogRef<any>, backdrop: Class<B>, container: Class<C>)\n                                : { backdropRef: ComponentRef<B>, containerRef: ComponentRef<C> } {\n    const /** @type {?} */ b = ReflectiveInjector.resolve([{provide: DialogRef, useValue: dialogRef}]);\n\n    return {\n      backdropRef: dialogRef.overlayRef.instance.addComponent<B>(backdrop, b),\n      containerRef: dialogRef.overlayRef.instance.addComponent<C>(container, b)\n    };\n  }\n\n}\n\nfunction Modal_tsickle_Closure_declarations() {\n/** @type {?} */\nModal.prototype.overlay;\n}\n\n","import {\n  ApplicationRef,\n  ViewContainerRef,\n  ComponentRef,\n  Injector,\n  Injectable,\n  ReflectiveInjector\n} from '@angular/core';\n\nimport { createComponent } from '../framework/createComponent';\nimport { DialogRef } from '../models/dialog-ref';\nimport { OverlayRenderer } from '../models/tokens';\nimport { ModalOverlay } from '../overlay/index';\nexport class DOMOverlayRenderer implements OverlayRenderer {\nprivate isDoc: boolean = !(typeof document === 'undefined' || !document);\n/**\n * @param {?} appRef\n * @param {?} injector\n */\nconstructor(private appRef: ApplicationRef,\nprivate injector: Injector) { }\n/**\n * @param {?} dialog\n * @param {?} vcRef\n * @param {?=} injector\n * @return {?}\n */\nrender(dialog: DialogRef<any>, vcRef: ViewContainerRef, injector?: Injector): ComponentRef<ModalOverlay> {\n    if (!injector) {\n      injector = this.injector;\n    }\n\n    const /** @type {?} */ bindings = ReflectiveInjector.resolve([\n      { provide: DialogRef, useValue: dialog }\n    ]);\n\n    const /** @type {?} */ cmpRef = createComponent({\n      component: ModalOverlay,\n      vcRef,\n      injector,\n      bindings\n    });\n\n    if (!vcRef) {\n      this.appRef.attachView(cmpRef.hostView);\n\n      // TODO: doesn't look like this is needed, explore. leaving now to be on the safe side.\n      dialog.onDestroy.subscribe( () => this.appRef.detachView(cmpRef.hostView) );\n    }\n\n    if (vcRef && dialog.inElement) {\n      vcRef.element.nativeElement.appendChild(cmpRef.location.nativeElement);\n    } else if (this.isDoc) {\n      document.body.appendChild(cmpRef.location.nativeElement);\n    }\n\n    return cmpRef;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ApplicationRef, },\n{type: Injector, },\n];\n}\n\nfunction DOMOverlayRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDOMOverlayRenderer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDOMOverlayRenderer.ctorParameters;\n/** @type {?} */\nDOMOverlayRenderer.prototype.isDoc;\n/** @type {?} */\nDOMOverlayRenderer.prototype.appRef;\n/** @type {?} */\nDOMOverlayRenderer.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ViewContainerRef, Injectable, Injector } from '@angular/core';\n\nimport { OverlayRenderer, OverlayConfig } from '../models/tokens';\nimport { DialogRefStack } from '../models/dialog-ref-stack';\nimport { vcRefStore } from '../models/vc-ref-store';\nimport { DialogRef } from '../models/dialog-ref';\nimport { OverlayContext } from '../models/overlay-context';\n\nconst /** @type {?} */ _stack = new DialogRefStack<any>();\nexport class Overlay {\n/**\n * @return {?}\n */\nget stackLength(): number {\n    return _stack.length;\n  }\n/**\n * @param {?} _modalRenderer\n * @param {?} injector\n */\nconstructor(private _modalRenderer: OverlayRenderer, protected injector: Injector) {\n  }\n/**\n * Check if a given DialogRef is the top most ref in the stack.\n * TODO: distinguish between body modal vs in element modal.\n * @param {?} dialogRef\n * @return {?}\n */\nisTopMost(dialogRef: DialogRef<any>): boolean {\n    return _stack.indexOf(dialogRef) === _stack.length - 1;\n  }\n/**\n * @param {?} dialogRef\n * @return {?}\n */\nstackPosition(dialogRef: DialogRef<any>) {\n    return _stack.indexOf(dialogRef);\n  }\n/**\n * @param {?} dialogRef\n * @return {?}\n */\ngroupStackLength(dialogRef: DialogRef<any>): number {\n    return _stack.groupLength(_stack.groupOf(dialogRef));\n  }\n/**\n * @param {?=} result\n * @return {?}\n */\ncloseAll(result: any = null): void {\n      _stack.closeAll(result);\n  }\n/**\n * Creates an overlay and returns a dialog ref.\n * @template T\n * @param {?} config instructions how to create the overlay\n * @param {?=} group A token to associate the new overlay with, used for reference (stacks usually)\n * @return {?}\n */\nopen<T extends OverlayContext>(config: OverlayConfig, group?: any): DialogRef<T>[] {\n    let /** @type {?} */ viewContainer = config.viewContainer, /** @type {?} */\n        containers: Array<ViewContainerRef> = [];\n\n    if (typeof viewContainer === 'string') {\n      containers = vcRefStore.getVCRef( /** @type {?} */((viewContainer as string)));\n    } else if (Array.isArray(viewContainer)) {\n      containers = /** @type {?} */(( viewContainer as any));\n    } else if (viewContainer) {\n      containers = /** @type {?} */(( [viewContainer] as any));\n    } else {\n      containers = [null];\n    }\n\n    return containers\n      .map( vc => this.createOverlay(config.renderer || this._modalRenderer, vc, config, group));\n  }\n/**\n * @param {?} renderer\n * @param {?} vcRef\n * @param {?} config\n * @param {?} group\n * @return {?}\n */\nprivate createOverlay(renderer: OverlayRenderer,\n                        vcRef: ViewContainerRef,\n                        config: OverlayConfig,\n                        group: any): DialogRef<any> {\n\n    if (config.context) {\n      config.context.normalize();\n    }\n\n    if (!config.injector) {\n      config.injector = this.injector;\n    }\n\n    let /** @type {?} */ dialog = new DialogRef<any>(this, config.context || {});\n    dialog.inElement = config.context && !!config.context.inElement;\n\n    let /** @type {?} */ cmpRef = renderer.render(dialog, vcRef, config.injector);\n\n    Object.defineProperty(dialog, 'overlayRef', {value: cmpRef});\n    _stack.pushManaged(dialog, group);\n\n    return dialog;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OverlayRenderer, },\n{type: Injector, },\n];\n}\n\nfunction Overlay_tsickle_Closure_declarations() {\n/** @type {?} */\nOverlay.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOverlay.ctorParameters;\n/** @type {?} */\nOverlay.prototype._modalRenderer;\n/** @type {?} */\nOverlay.prototype.injector;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { DialogRef } from './dialog-ref';\n\nconst /** @type {?} */ BASKET_GROUP = {};\n/**\n * A dumb stack implementation over an array.\n */\nexport class DialogRefStack<T> {\nprivate _stack: DialogRef<T>[];\nprivate _stackMap: Map<DialogRef<T>, any>;\n/**\n * @return {?}\n */\nget length(): number {\n    return this._stack.length;\n  }\nconstructor() {\n    this._stack = [];\n    this._stackMap = new Map<DialogRef<T>, any>();\n  }\n/**\n * @param {?=} result\n * @return {?}\n */\ncloseAll(result: any = null): void {\n    for (let /** @type {?} */ i=0, /** @type {?} */ len=this._stack.length; i<len; i++) {\n      this._stack.pop().close(result);\n    }\n  }\n/**\n * @param {?} dialogRef\n * @param {?=} group\n * @return {?}\n */\npush(dialogRef: DialogRef<T>, group?: any): void {\n    if (this._stack.indexOf(dialogRef) === -1) {\n      this._stack.push(dialogRef);\n      this._stackMap.set(dialogRef, group || BASKET_GROUP);\n    }\n  }\n/**\n * Push a DialogRef into the stack and manage it so when it's done\n * it will automatically kick itself out of the stack.\n * @param {?} dialogRef\n * @param {?=} group\n * @return {?}\n */\npushManaged(dialogRef: DialogRef<T>, group?: any): void {\n    this.push(dialogRef, group);\n    dialogRef.onDestroy.subscribe(() => this.remove(dialogRef));\n  }\n/**\n * @return {?}\n */\npop(): DialogRef<T> {\n    const /** @type {?} */ dialogRef = this._stack.pop();\n    this._stackMap.delete(dialogRef);\n    return dialogRef;\n  }\n/**\n * Remove a DialogRef from the stack.\n * @param {?} dialogRef\n * @return {?}\n */\nremove(dialogRef: DialogRef<T>): void {\n    let /** @type {?} */ idx = this.indexOf(dialogRef);\n    if (idx > -1) {\n      this._stack.splice(idx, 1);\n      this._stackMap.delete(dialogRef);\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nindex(index: number): DialogRef<T> {\n    return this._stack[index];\n  }\n/**\n * @param {?} dialogRef\n * @return {?}\n */\nindexOf(dialogRef: DialogRef<T>): number {\n     return this._stack.indexOf(dialogRef);\n  }\n/**\n * @param {?} dialogRef\n * @return {?}\n */\ngroupOf(dialogRef: DialogRef<T>): any {\n    return this._stackMap.get(dialogRef);\n  }\n/**\n * @param {?} group\n * @return {?}\n */\ngroupBy(group: any): DialogRef<T>[] {\n    let /** @type {?} */ arr = [];\n    if (group) {\n      this._stackMap.forEach( (value, key) => {\n        if (value === group) {\n          arr.push(key);\n        }\n      });\n    }\n    return arr;\n  }\n/**\n * @param {?} group\n * @return {?}\n */\ngroupLength(group: any): number {\n    let /** @type {?} */ count = 0;\n    if (group) {\n      this._stackMap.forEach( (value, key) => {\n        if (value === group) {\n          count++;\n        }\n      });\n    }\n    return count;\n  }\n}\n\nfunction DialogRefStack_tsickle_Closure_declarations() {\n/** @type {?} */\nDialogRefStack.prototype._stack;\n/** @type {?} */\nDialogRefStack.prototype._stackMap;\n}\n\n","declare const clearTimeout: any;\n\nimport {\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  Injector,\n  ReflectiveInjector,\n  ResolvedReflectiveProvider,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  Renderer,\n  TemplateRef,\n  Type\n} from '@angular/core';\n\nimport { PromiseCompleter, supportsKey } from '../framework/utils';\nimport { DialogRef } from '../models/dialog-ref';\nimport { BaseDynamicComponent } from '../components/index';\n\n// TODO: use DI factory for this.\n// TODO: consolidate dup code\nconst /** @type {?} */ isDoc: boolean = !(typeof document === 'undefined' || !document);\n\nexport interface EmbedComponentConfig {\n  component: any;\n  bindings?: ResolvedReflectiveProvider[];\n  projectableNodes?: any[][];\n}\n/**\n * Represents the modal overlay.\n */\nexport class ModalOverlay extends BaseDynamicComponent {\nprivate beforeDestroyHandlers: Array<() => Promise<void>>;\npublic container: ElementRef;\npublic innerVcr: ViewContainerRef;\npublic template: TemplateRef<any>;\n/**\n * @param {?} dialogRef\n * @param {?} vcr\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(private dialogRef: DialogRef<any>,\nprivate vcr: ViewContainerRef,\n              el: ElementRef,\n              renderer: Renderer) {\n    super(el, renderer);\n    this.activateAnimationListener();\n  }\n/**\n * \\@internal\n * @template T\n * @param {?} content\n * @param {?=} bindings\n * @return {?}\n */\ngetProjectables<T> (\n    content: string | TemplateRef<any> | Type<any>,\n    bindings?: ResolvedReflectiveProvider[]): any[][] {\n\n\n    let /** @type {?} */ nodes: any[];\n    if (typeof content === 'string') {\n      nodes = [ [this.renderer.createText(null, `${content}`)] ];\n    } else if (content instanceof TemplateRef) {\n      nodes = [ this.vcr.createEmbeddedView(content, { dialogRef: this.dialogRef }).rootNodes ];\n    } else {\n      nodes = [ this.embedComponent({ component: content, bindings: bindings }).rootNodes ];\n    }\n\n    return nodes;\n  }\n/**\n * @param {?} config\n * @return {?}\n */\nembedComponent(config: EmbedComponentConfig): EmbeddedViewRef<EmbedComponentConfig> {\n    const /** @type {?} */ ctx: EmbedComponentConfig & { injector: Injector } = /** @type {?} */(( <any>config));\n\n    if (ctx.bindings) {\n      ctx.injector = ReflectiveInjector.fromResolvedProviders(ctx.bindings, this.vcr.parentInjector);\n    }\n\n    return this.vcr.createEmbeddedView(this.template, {\n      $implicit: ctx\n    });\n  }\n/**\n * @template T\n * @param {?} type\n * @param {?=} bindings\n * @param {?=} projectableNodes\n * @return {?}\n */\naddComponent<T>(type: any, bindings: ResolvedReflectiveProvider[] = [], projectableNodes: any[][] = []): ComponentRef<T> {\n    return super._addComponent<T>({\n      component: type,\n      vcRef: this.innerVcr,\n      bindings,\n      projectableNodes\n    });\n  }\n/**\n * @return {?}\n */\nfullscreen(): void {\n    const /** @type {?} */ style = {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      'z-index': 1500\n    };\n    Object.keys(style).forEach( k => this.setStyle(k, style[k]) );\n  }\n/**\n * @return {?}\n */\ninsideElement(): void {\n    const /** @type {?} */ style = {\n      position: 'absolute',\n      overflow: 'hidden',\n      width: '100%',\n      height: '100%',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    };\n    Object.keys(style).forEach( k => this.setStyle(k, style[k]) );\n  }\n/**\n * Set a specific inline style for the container of the whole dialog component\n * The dialog component root element is the host of this component, it contains only 1 direct\n * child which is the container.\n * \n * Structure:\n * \n * ```html\n * <modal-overlay>\n *   <div>\n *     <!-- BACKDROP ELEMENT -->\n *     <!-- DIALOG CONTAINER ELEMENT -->\n *   </div>\n * </modal-overlay>\n * ```\n * \n * @param {?} prop The style key\n * @param {?} value The value, undefined to remove\n * @return {?}\n */\nsetContainerStyle(prop: string, value: string): this {\n    this.renderer.setElementStyle(this.container.nativeElement, prop, value);\n    return this;\n  }\n/**\n * Define an element that click inside it will not trigger modal close.\n * Since events bubble, clicking on a dialog will bubble up to the overlay, a plugin\n * must define an element that represent the dialog, the overlay will make sure no to close when\n * it was clicked.\n * @param {?} element\n * @return {?}\n */\nsetClickBoundary(element: Element): void {\n    let /** @type {?} */ target: Element;\n    const /** @type {?} */ elListener = event => target = /** @type {?} */(( event.target as any));\n    const /** @type {?} */ docListener = event => {\n      if (this.dialogRef.context.isBlocking || !this.dialogRef.overlay.isTopMost(this.dialogRef) ) {\n        return;\n      }\n\n      let /** @type {?} */ current: any = event.target;\n\n      // on click, this will hit.\n      if (current === target) return;\n\n      // on mouse down -> drag -> release the current might not be 'target', it might be\n      // a sibling or a child (i.e: not part of the tree-up direction). It might also be a release\n      // outside the dialog... so we compare to the boundary element\n      do {\n        if (current === element) {\n          return;\n        }\n      } while (current.parentNode && ( current = current.parentNode ));\n      this.dialogRef.dismiss();\n    };\n\n    if (isDoc) {\n      this.dialogRef.onDestroy.subscribe(() => {\n        element.removeEventListener('click', elListener, false);\n        element.removeEventListener('touchstart', elListener, false);\n        document.removeEventListener('click', docListener, false);\n        document.removeEventListener('touchend', docListener, false);\n      });\n\n\n      setTimeout(() => {\n        element.addEventListener('mousedown', elListener, false);\n        element.addEventListener('touchstart', docListener, false);\n        document.addEventListener('click', docListener, false);\n        document.addEventListener('touchend', docListener, false);\n      });\n    }\n  }\n/**\n * Temp workaround for animation where destruction of the top level component does not\n * trigger child animations. Solution should be found either in animation module or in design\n * of the modal component tree.\n * @return {?}\n */\ncanDestroy(): Promise<void> {\n    const /** @type {?} */ completer = new PromiseCompleter<void>();\n\n    if (!Array.isArray(this.beforeDestroyHandlers)) {\n      completer.resolve();\n    } else {\n\n      // run destroy notification but protect against halt.\n      let /** @type {?} */ id = setTimeout(() => {\n        id = null;\n        completer.reject();\n      }, 1000);\n\n      const /** @type {?} */ resolve = () => {\n        if (id === null) return;\n\n        clearTimeout(id);\n        completer.resolve();\n      };\n\n      Promise.all(this.beforeDestroyHandlers.map( fn => fn() ))\n        .then(resolve)\n        .catch(resolve);\n\n    }\n\n    return completer.promise;\n  }\n/**\n * A handler running before destruction of the overlay\n * use to delay destruction due to animation.\n * This is part of the workaround for animation, see canDestroy.\n * \n * NOTE: There is no guarantee that the listeners will fire, use dialog.onDestory for that.\n * @param {?} fn\n * @return {?}\n */\nbeforeDestroy(fn: () => Promise<void>) {\n    if (!this.beforeDestroyHandlers) {\n      this.beforeDestroyHandlers = [];\n    }\n    this.beforeDestroyHandlers.push(fn);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\ndocumentKeypress(event: KeyboardEvent) {\n    // check that this modal is the last in the stack.\n    if (!this.dialogRef.overlay.isTopMost(this.dialogRef)) return;\n\n\n    if (supportsKey(event.keyCode, /** @type {?} */(( <any>this.dialogRef.context.keyboard)))) {\n      this.dialogRef.dismiss();\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    super.ngOnDestroy();\n    if (this.dialogRef.destroyed !== true) {\n      // if we're here the overlay is destroyed by an external event that is not user invoked.\n      // i.e: The user did no call dismiss or close and dialogRef.destroy() did not invoke.\n      // this will happen when routing or killing an element containing a blocked overlay (ngIf)\n      // we bail out, i.e gracefully shutting down.\n      this.dialogRef.bailOut();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'modal-overlay',\n  host: {\n    '(body:keydown)': 'documentKeypress($event)'\n  },\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './overlay.component.html'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DialogRef, },\n{type: ViewContainerRef, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'container': [{ type: ViewChild, args: ['container', {read: ElementRef}, ] },],\n'innerVcr': [{ type: ViewChild, args: ['innerView', {read: ViewContainerRef}, ] },],\n'template': [{ type: ViewChild, args: ['template', ] },],\n};\n}\n\nfunction ModalOverlay_tsickle_Closure_declarations() {\n/** @type {?} */\nModalOverlay.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nModalOverlay.ctorParameters;\n/** @type {?} */\nModalOverlay.propDecorators;\n/** @type {?} */\nModalOverlay.prototype.beforeDestroyHandlers;\n/** @type {?} */\nModalOverlay.prototype.container;\n/** @type {?} */\nModalOverlay.prototype.innerVcr;\n/** @type {?} */\nModalOverlay.prototype.template;\n/** @type {?} */\nModalOverlay.prototype.dialogRef;\n/** @type {?} */\nModalOverlay.prototype.vcr;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  ViewEncapsulation,\n  ElementRef,\n  Renderer\n} from '@angular/core';\n\nimport { BaseDynamicComponent } from './base-dynamic-component';\nimport { DialogRef } from '../models/dialog-ref';\n/**\n * A component that acts as a top level container for an open modal window.\n */\nexport class CSSDialogContainer extends BaseDynamicComponent {\n/**\n * @param {?} dialog\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(public dialog: DialogRef<any>,\n              el: ElementRef, renderer: Renderer) {\n    super(el, renderer);\n    this.activateAnimationListener();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'css-dialog-container',\n  host: {\n    'tabindex': '-1',\n    'role': 'dialog'\n  },\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-content></ng-content>`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DialogRef, },\n{type: ElementRef, },\n{type: Renderer, },\n];\n}\n\nfunction CSSDialogContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nCSSDialogContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCSSDialogContainer.ctorParameters;\n/** @type {?} */\nCSSDialogContainer.prototype.dialog;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  ElementRef,\n  ViewEncapsulation,\n  Renderer\n} from '@angular/core';\n\nimport { BaseDynamicComponent } from './base-dynamic-component';\n/**\n * Represents the modal backdrop shaped by CSS.\n */\nexport class CSSBackdrop extends BaseDynamicComponent {\npublic cssClass: string;\npublic styleStr: string;\n/**\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(el: ElementRef, renderer: Renderer) {\n    super(el, renderer);\n    this.activateAnimationListener();\n\n    const style = {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%'\n    };\n    Object.keys(style).forEach( k => this.setStyle(k, style[k]) );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'css-backdrop',\n  host: {\n    '[attr.class]': 'cssClass',\n    '[attr.style]': 'styleStr'\n  },\n  encapsulation: ViewEncapsulation.None,\n  template: ``\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\n}\n\nfunction CSSBackdrop_tsickle_Closure_declarations() {\n/** @type {?} */\nCSSBackdrop.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCSSBackdrop.ctorParameters;\n/** @type {?} */\nCSSBackdrop.prototype.cssClass;\n/** @type {?} */\nCSSBackdrop.prototype.styleStr;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Renderer\n} from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { filter } from 'rxjs/operator/filter';\n\nimport { createComponent, CreateComponentArgs } from '../framework/createComponent';\n\nconst /** @type {?} */ BROWSER_PREFIX = ['webkit', 'moz', 'MS', 'o', ''];\n/**\n * @param {?} eventName\n * @param {?} element\n * @param {?} cb\n * @return {?}\n */\nfunction register(eventName, element, cb) {\n  BROWSER_PREFIX.forEach( p => {\n    element.addEventListener(p ? p + eventName : eventName.toLowerCase(), cb, false);\n  });\n}\n/**\n * A base class for supporting dynamic components.\n * There are 3 main support areas:\n * 1 - Easy wrapper for dynamic styling via CSS classes and inline styles.\n * 2 - Easy wrapper for interception of transition/animation end events.\n * 3 - Easy wrapper for component creation and injection.\n * \n * Dynamic css is done via direct element manipulation (via renderer), it does not use change detection\n * or binding. This is to allow better control over animation.\n * \n * Animation support is limited, only transition/keyframes END even are notified.\n * The animation support is needed since currently the angular animation module is limited as well and\n * does not support CSS animation that are not pre-parsed and are not in the styles metadata of a component.\n * \n * Capabilities: Add/Remove styls, Add/Remove classes, listen to animation/transition end event,\n * add components\n */\nexport class BaseDynamicComponent implements OnDestroy {\n  animationEnd$: Observable<TransitionEvent | AnimationEvent>;\n\n  protected animationEnd: Subject<TransitionEvent | AnimationEvent>;\n/**\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected el: ElementRef,\n              protected renderer: Renderer) {}\n/**\n * @return {?}\n */\nactivateAnimationListener() {\n    if (this.animationEnd) return;\n    this.animationEnd = new Subject<TransitionEvent | AnimationEvent>();\n    this.animationEnd$ = this.animationEnd.asObservable();\n    register('TransitionEnd', this.el.nativeElement, (e: TransitionEvent) => this.onEnd(e));\n    register('AnimationEnd', this.el.nativeElement, (e: AnimationEvent) => this.onEnd(e));\n  }\n/**\n * Set a specific inline style on the overlay host element.\n * @param {?} prop The style key\n * @param {?} value The value, undefined to remove\n * @return {?}\n */\nsetStyle(prop: string, value: string): this {\n    this.renderer.setElementStyle(this.el.nativeElement, prop, value);\n    return this;\n  }\n/**\n * @return {?}\n */\nforceReflow() {\n    this.el.nativeElement.offsetWidth;\n  }\n/**\n * @param {?} css\n * @param {?=} forceReflow\n * @return {?}\n */\naddClass(css: string, forceReflow: boolean = false): void {\n    css.split(' ')\n      .forEach( c => this.renderer.setElementClass(this.el.nativeElement, c, true) );\n    if (forceReflow) this.forceReflow();\n  }\n/**\n * @param {?} css\n * @param {?=} forceReflow\n * @return {?}\n */\nremoveClass(css: string, forceReflow: boolean = false): void {\n    css.split(' ')\n      .forEach( c => this.renderer.setElementClass(this.el.nativeElement, c, false) );\n    if (forceReflow) this.forceReflow();\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this.animationEnd && !this.animationEnd.closed) {\n      this.animationEnd.complete();\n    }\n  }\n/**\n * @return {?}\n */\nmyAnimationEnd$(): Observable<AnimationEvent | TransitionEvent> {\n    return filter.call(this.animationEnd$, e => e.target === this.el.nativeElement);\n  }\n/**\n * Add a component, supply a view container ref.\n * Note: The components vcRef will result in a sibling.\n * @template T\n * @param {?} instructions\n * @return {?}\n */\nprotected _addComponent<T>(instructions: CreateComponentArgs): ComponentRef<T> {\n    const /** @type {?} */ cmpRef = createComponent(instructions);\n    cmpRef.changeDetectorRef.detectChanges();\n\n    return cmpRef;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onEnd(event: TransitionEvent | AnimationEvent): void {\n\n    if (!this.animationEnd.closed) {\n      this.animationEnd.next(event);\n    }\n  }\n\n}\n\nfunction BaseDynamicComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseDynamicComponent.prototype.animationEnd$;\n/** @type {?} */\nBaseDynamicComponent.prototype.animationEnd;\n/** @type {?} */\nBaseDynamicComponent.prototype.el;\n/** @type {?} */\nBaseDynamicComponent.prototype.renderer;\n}\n\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  ViewContainerRef,\n  OnDestroy\n} from '@angular/core';\n\nimport { DialogRef } from '../models/dialog-ref';\nimport { vcRefStore } from '../models/vc-ref-store';\nimport { Overlay } from './overlay.service';\n/**\n * A directive use to signal the overlay that the host of this directive\n * is a dialog boundary, i.e: over click outside of the element should close the modal\n * (if non blocking)\n */\nexport class OverlayDialogBoundary {\n/**\n * @param {?} el\n * @param {?} dialogRef\n */\nconstructor(el: ElementRef, dialogRef: DialogRef<any>) {\n    if (dialogRef && el.nativeElement) {\n      dialogRef.overlayRef.instance.setClickBoundary(el.nativeElement);\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[overlayDialogBoundary]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: DialogRef, },\n];\n}\n\nfunction OverlayDialogBoundary_tsickle_Closure_declarations() {\n/** @type {?} */\nOverlayDialogBoundary.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOverlayDialogBoundary.ctorParameters;\n}\n\nexport class OverlayTarget implements OnDestroy {\n/**\n * @param {?} value\n * @return {?}\n */\nset targetKey(value: string) {\n    this._targetKey = value;\n    if (value) {\n      vcRefStore.setVCRef(value, this.vcRef);\n    }\n  }\nprivate _targetKey: string;\n/**\n * @param {?} vcRef\n */\nconstructor(private vcRef: ViewContainerRef) {}\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._targetKey) {\n      vcRefStore.delVCRef(this._targetKey, this.vcRef);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[overlayTarget]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'targetKey': [{ type: Input, args: ['overlayTarget', ] },],\n};\n}\n\nfunction OverlayTarget_tsickle_Closure_declarations() {\n/** @type {?} */\nOverlayTarget.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOverlayTarget.ctorParameters;\n/** @type {?} */\nOverlayTarget.propDecorators;\n/** @type {?} */\nOverlayTarget.prototype._targetKey;\n/** @type {?} */\nOverlayTarget.prototype.vcRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ViewContainerRef } from '@angular/core';\n\nconst /** @type {?} */ vcRefCollection: { [key: string]: ViewContainerRef[] } = {};\n/**\n * @param {?} key\n * @return {?}\n */\nfunction getVCRef(key: string): ViewContainerRef[] {\n  return vcRefCollection[key] ? vcRefCollection[key].slice() : [];\n}\n/**\n * @param {?} key\n * @param {?} vcRef\n * @return {?}\n */\nfunction setVCRef(key: string, vcRef: ViewContainerRef): void {\n  if (!vcRefCollection.hasOwnProperty(key)) {\n    vcRefCollection[key] = [];\n  }\n  vcRefCollection[key].push(vcRef);\n}\n/**\n * @param {?} key\n * @param {?=} vcRef\n * @return {?}\n */\nfunction delVCRef(key: string, vcRef?: ViewContainerRef): void {\n    if (!vcRef) {\n      vcRefCollection[key] = [];\n    } else {\n      const /** @type {?} */ coll = vcRefCollection[key] || [], /** @type {?} */\n            idx = coll.indexOf(vcRef);\n      if (idx > -1) {\n        coll.splice(idx, 1);\n      }\n    }\n}\n/**\n * A Simple store that holds a reference to ViewContainerRef instances by a user defined key.\n * This, with the OverlayTarget directive makes it easy to block the overlay inside an element\n * without having to use the angular query boilerplate.\n *  getVCRef: (function(string): ViewContainerRef), \n *  setVCRef: (function(string, ViewContainerRef): void), \n *  delVCRef: (function(string): void)\n *  }}\n */\nexport const vcRefStore = { getVCRef, setVCRef, delVCRef };\n","import {\n  ComponentRef,\n  Injector,\n  ViewContainerRef,\n  TemplateRef,\n  Type,\n  ResolvedReflectiveProvider\n} from '@angular/core';\n\nimport { ModalOverlay } from '../overlay/index';\nimport { DialogRef } from './dialog-ref';\nimport { OverlayContext } from '../models/overlay-context';\nimport { Maybe } from '../framework/utils';\nexport type DROP_IN_TYPE = number;\nexport let DROP_IN_TYPE: any = {};\nDROP_IN_TYPE.alert = 0;\nDROP_IN_TYPE.prompt = 1;\nDROP_IN_TYPE.confirm = 2;\nDROP_IN_TYPE[DROP_IN_TYPE.alert] = \"alert\";\nDROP_IN_TYPE[DROP_IN_TYPE.prompt] = \"prompt\";\nDROP_IN_TYPE[DROP_IN_TYPE.confirm] = \"confirm\";\n\n\nexport type WideVCRef = ViewContainerRef | string;\n\nexport type ContainerContent = string | TemplateRef<any> | Type<any>;\n\nexport interface OverlayPlugin extends Function {\n  <T>(component: any, dialogRef: DialogRef<T>, config: OverlayConfig): Maybe<DialogRef<any>>;\n}\n\nexport interface OverlayConfig {\n  /**\n   * The context for the modal, attached to the dialog instance, DialogRef.context.\n   * Default: {}\n   */\n  context?: OverlayContext;\n\n  injector?: Injector;\n\n  /**\n   * Resolved providers that will inject into the component provided.\n   */\n  bindings?: ResolvedReflectiveProvider[];\n\n  /**\n   * The element to block using the modal.\n   */\n  viewContainer?: WideVCRef;\n\n  renderer?: OverlayRenderer;\n\n  /**\n   * Not used yet.\n   */\n  overlayPlugins?: OverlayPlugin | Array<OverlayPlugin>;\n}\n\nexport interface ModalComponent<T> {\n  dialog: DialogRef<T>;\n}\n\nexport interface CloseGuard {\n  /**\n   * Invoked before a modal is dismissed.\n   * @return true or a promise that resolves to true to cancel dismissal.\n   */\n  beforeDismiss?(): boolean | Promise<boolean>;\n\n  /**\n   * Invoked before a modal is closed.\n   * @return true or a promise that resolves to true to cancel closing.\n   */\n  beforeClose?(): boolean | Promise<boolean>;\n}\n/**\n * @abstract\n */\nexport abstract class OverlayRenderer {\n/**\n * @abstract\n * @param {?} dialogRef\n * @param {?} vcRef\n * @param {?=} injector\n * @return {?}\n */\nrender(dialogRef: DialogRef<any>,\n                         vcRef: ViewContainerRef,\n                         injector?: Injector) {}\n}\n","import { ComponentRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nimport { PromiseCompleter } from '../framework/utils';\nimport { Overlay, ModalOverlay } from '../overlay/index';\nimport { CloseGuard } from '../models/tokens';\nimport { DialogBailOutError } from '../models/errors';\n/**\n * API to an open modal window.\n */\nexport class DialogRef<T> {\n/**\n * Reference to the overlay component ref.\n */\noverlayRef: ComponentRef<ModalOverlay>;\n/**\n * States if the modal is inside a specific element.\n */\npublic inElement: boolean;\npublic destroyed: boolean;\n/**\n * Fired before dialog is destroyed.\n * No need to unsubscribe, done automatically.\n * Note: Always called.\n * When called, overlayRef might or might not be destroyed.\n */\npublic onDestroy: Observable<void>;\nprivate _resultDeferred: PromiseCompleter<any> = new PromiseCompleter<any>();\nprivate _onDestroy: Subject<void> = new Subject<void>();\nprivate closeGuard: CloseGuard;\n/**\n * @param {?} overlay\n * @param {?=} context\n */\nconstructor(public overlay: Overlay,\npublic context?: T) {\n    this.onDestroy = this._onDestroy.asObservable();\n  }\n/**\n * A Promise that is resolved on a close event and rejected on a dismiss event.\n * @return {?}\n */\nget result(): Promise<any> {\n    return this._resultDeferred.promise;\n  }\n/**\n * Set a close/dismiss guard\n * @param {?} guard\n * @return {?}\n */\nsetCloseGuard(guard: CloseGuard): void {\n    this.closeGuard = guard;\n  }\n/**\n *  Close the modal with a return value, i.e: result.\n * @param {?=} result\n * @return {?}\n */\nclose(result: any = null) {\n    const /** @type {?} */ _close = () => {\n      this.destroy();\n      this._resultDeferred.resolve(result);\n    };\n    this._fireHook<boolean>('beforeClose')\n      .then(value => value !== true && _close())\n      .catch(_close);\n  }\n/**\n *  Close the modal without a return value, i.e: cancelled.\n *  This call is automatically invoked when a user either:\n *  - Presses an exit keyboard key (if configured).\n *  - Clicks outside of the modal window (if configured).\n *  Usually, dismiss represent a Cancel button or a X button.\n * @return {?}\n */\ndismiss() {\n    const /** @type {?} */ _dismiss = () => {\n      this.destroy();\n      this._resultDeferred.promise.catch(() => {});\n      this._resultDeferred.reject();\n    };\n    this._fireHook<boolean>('beforeDismiss')\n      .then(value => value !== true && _dismiss())\n      .catch(_dismiss);\n  }\n/**\n * Gracefully close the overlay/dialog with a rejected result.\n * Does not trigger canDestroy on the overlay.\n * @return {?}\n */\nbailOut() {\n    if (this.destroyed !== true) {\n      this.destroyed = true;\n      this._onDestroy.next(null);\n      this._onDestroy.complete();\n      this._resultDeferred.reject(new DialogBailOutError());\n    }\n  }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this.destroyed !== true) {\n      this.destroyed = true;\n\n      if (typeof this.overlayRef.instance.canDestroy === 'function') {\n        this.overlayRef.instance.canDestroy()\n          .catch( () => {})\n          .then ( () => this._destroy() );\n      } else {\n        this._destroy();\n      }\n    }\n  }\n/**\n * @return {?}\n */\nprivate _destroy(): void {\n    this._onDestroy.next(null);\n    this._onDestroy.complete();\n    this.overlayRef.destroy()\n  }\n/**\n * @template T\n * @param {?} name\n * @return {?}\n */\nprivate _fireHook<T>(name: 'beforeClose' | 'beforeDismiss'): Promise<T> {\n    const /** @type {?} */ gurad = this.closeGuard, /** @type {?} */\n          fn: Function = gurad && typeof gurad[name] === 'function' && gurad[name];\n\n    return Promise.resolve(fn ? fn.call(gurad) : false);\n  }\n}\n\nfunction DialogRef_tsickle_Closure_declarations() {\n/**\n * Reference to the overlay component ref.\n * @type {?}\n */\nDialogRef.prototype.overlayRef;\n/**\n * States if the modal is inside a specific element.\n * @type {?}\n */\nDialogRef.prototype.inElement;\n/** @type {?} */\nDialogRef.prototype.destroyed;\n/**\n * Fired before dialog is destroyed.\n * No need to unsubscribe, done automatically.\n * Note: Always called.\n * When called, overlayRef might or might not be destroyed.\n * @type {?}\n */\nDialogRef.prototype.onDestroy;\n/** @type {?} */\nDialogRef.prototype._resultDeferred;\n/** @type {?} */\nDialogRef.prototype._onDestroy;\n/** @type {?} */\nDialogRef.prototype.closeGuard;\n/** @type {?} */\nDialogRef.prototype.overlay;\n/** @type {?} */\nDialogRef.prototype.context;\n}\n\n","\nexport class DialogBailOutError extends Error {\n/**\n * @param {?=} value\n */\nconstructor(value?: string) {\n    super();\n\n    if (!value) {\n      value = 'Dialog was forced to close by an unknown source.';\n    }\n    this.message = value;\n  }\n}\n","import {\n  ComponentRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Injector,\n  ViewContainerRef,\n  ReflectiveInjector,\n  ResolvedReflectiveProvider\n} from '@angular/core';\n\nexport interface CreateComponentArgs {\n  component: any;\n  vcRef: ViewContainerRef;\n  injector?: Injector;\n  bindings?: ResolvedReflectiveProvider[];\n  projectableNodes?: any[][];\n}\n/**\n * @param {?} instructions\n * @return {?}\n */\nexport function createComponent(instructions: CreateComponentArgs): ComponentRef<any> {\n  const /** @type {?} */ injector: Injector = getInjector(instructions);\n  const /** @type {?} */ cmpFactory: ComponentFactory<any>\n    = injector.get(ComponentFactoryResolver).resolveComponentFactory(instructions.component);\n\n  if (instructions.vcRef) {\n    return instructions.vcRef.createComponent(\n      cmpFactory,\n      instructions.vcRef.length,\n      injector,\n      instructions.projectableNodes\n    );\n  } else {\n    return cmpFactory.create(injector);\n  }\n}\n/**\n * @param {?} instructions\n * @return {?}\n */\nfunction getInjector(instructions: CreateComponentArgs) {\n  const /** @type {?} */ ctxInjector = instructions.injector || instructions.vcRef.parentInjector;\n  return Array.isArray(instructions.bindings) && instructions.bindings.length > 0 ?\n    ReflectiveInjector.fromResolvedProviders(instructions.bindings, ctxInjector) : ctxInjector;\n\n}\n\n","\n/**\n * Simple object extend\n * @template T\n * @param {?} m1\n * @param {?} m2\n * @return {?}\n */\nexport function extend<T>(m1: any, m2: any): T {\n  var /** @type {?} */ m: T = /** @type {?} */(( <T>{}));\n  for (var /** @type {?} */ attr in m1) {\n    if (m1.hasOwnProperty(attr)) {\n      ( /** @type {?} */((<any>m)))[attr] = ( /** @type {?} */((<any>m1)))[attr];\n    }\n  }\n\n  for (var /** @type {?} */ attr in m2) {\n    if (m2.hasOwnProperty(attr)) {\n      ( /** @type {?} */((<any>m)))[attr] = ( /** @type {?} */((<any>m2)))[attr];\n    }\n  }\n\n  return m;\n}\n/**\n * Simple, not optimized, array union of unique values.\n * @template T\n * @param {?} arr1\n * @param {?} arr2\n * @return {?}\n */\nexport function arrayUnion<T>(arr1: any[], arr2: any[]): T[] {\n  return arr1\n    .concat(arr2.filter(v => arr1.indexOf(v) === -1));\n\n}\n/**\n * Returns true if the config supports a given key.\n * @param {?} keyCode\n * @param {?} config\n * @return {?}\n */\nexport function supportsKey(keyCode: number, config: Array<number>): boolean {\n  if (!Array.isArray(config)) return config === null ? false : true;\n  return config.indexOf(keyCode) > -1;\n}\n/**\n * Given an object representing a key/value map of css properties, returns a valid css string\n * representing the object.\n * Example:\n * console.log(toStyleString({\n *     position: 'absolute',\n *     width: '100%',\n *     height: '100%',\n *     top: '0',\n *     left: '0',\n *     right: '0',\n *     bottom: '0'\n * }));\n * // position:absolute;width:100%;height:100%;top:0;left:0;right:0;bottom:0\n * @param {?} obj\n * @return {?}\n */\nexport function toStyleString(obj: any | CSSStyleDeclaration): string {\n  return Object.getOwnPropertyNames(obj)\n    .map(k => `${k}:${obj[k]}`)\n    .join(';');\n\n  // let objStr = JSON.stringify(obj);\n  // return objStr.substr(1, objStr.length - 2)\n  //     .replace(/,/g, ';')\n  //     .replace(/\"/g, '');\n}\nexport class PromiseCompleter<R> {\n  promise: Promise<R>;\n  resolve: (value?: R|PromiseLike<R>) => void;\n  reject: (error?: any, stackTrace?: string) => void;\nconstructor() {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\n\nfunction PromiseCompleter_tsickle_Closure_declarations() {\n/** @type {?} */\nPromiseCompleter.prototype.promise;\n/** @type {?} */\nPromiseCompleter.prototype.resolve;\n/** @type {?} */\nPromiseCompleter.prototype.reject;\n}\n\n\nexport interface Class<T> {\n  new(...args: any[]): T;\n}\n\nexport type Maybe<T> = T | Promise<T>;\n/**\n * @return {?}\n */\nexport function noop() { }\n","import { extend, arrayUnion } from './utils';\nconst /** @type {?} */ PRIVATE_PREFIX = '$$';\nconst /** @type {?} */ RESERVED_REGEX = /^(\\$\\$).*/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction validateMethodName(name: string) {\n  if (!name) {\n    throw new Error(`Illegal method name. Empty method name is not allowed`);\n  } else if (name in this) {\n    throw new Error(`A member name '${name}' already defined.`);\n  }\n}\n/**\n * Returns a list of assigned property names (non private)\n * @param {?} subject\n * @return {?}\n */\nfunction getAssignedPropertyNames(subject: any): string[] {\n  return Object.getOwnPropertyNames(subject)\n    .filter(name => RESERVED_REGEX.test(name))\n    .map(name => name.substr(2));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function privateKey(name: string): string {\n  return PRIVATE_PREFIX + name;\n}\n/**\n * @param {?} obj\n * @param {?} propertyName\n * @param {?} value\n * @return {?}\n */\nfunction objectDefinePropertyValue(obj: any, propertyName, value: (value: any) => void): void {\n  Object.defineProperty(obj, propertyName, /** @type {?} */(( <any>{\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value\n  })));\n}\n/**\n * Given a FluentAssign instance, apply all of the supplied default values so calling\n * instance.toJSON will return those values (does not create a setter function)\n * @param {?} instance\n * @param {?} defaultValues\n * @return {?}\n */\nfunction applyDefaultValues(instance: any, defaultValues: Object): void {\n  Object.getOwnPropertyNames(defaultValues)\n    .forEach(name => ( /** @type {?} */((<any>instance)))[privateKey(name)] = ( /** @type {?} */((<any>defaultValues)))[name]);\n}\n/**\n * Create a function for setting a value for a property on a given object.\n * @template T\n * @param {?} obj The object to apply the key & setter on.\n * @param {?} propertyName The name of the property on the object\n * @param {?=} writeOnce If true will allow writing once (default: false)\n * \n * Example:\n * let obj = new FluentAssign<any>;\n * setAssignMethod(obj, 'myProp');\n * obj.myProp('someValue');\n * const result = obj.toJSON();\n * console.log(result); //{ myProp: 'someValue' }\n * \n * \n * let obj = new FluentAssign<any>;\n * setAssignMethod(obj, 'myProp', true); // applying writeOnce\n * obj.myProp('someValue');\n * obj.myProp('someValue'); // ERROR: Overriding config property 'myProp' is not allowed.\n * @return {?}\n */\nexport function setAssignMethod<T>(obj: T, propertyName: string, writeOnce: boolean = false): void {\n  validateMethodName.call(obj, propertyName);\n\n  const /** @type {?} */ key = privateKey(propertyName);\n  objectDefinePropertyValue(obj, propertyName, (value: any) => {\n    if (writeOnce && this.hasOwnProperty(key)) {\n      throw new Error(`Overriding config property '${propertyName}' is not allowed.`);\n    }\n    obj[key] = value;\n    return obj;\n  });\n}\n/**\n * Create a function for setting a value that is an alias to an other setter function.\n * @template T\n * @param {?} obj The object to apply the key & setter on.\n * @param {?} propertyName The name of the property on the object\n * @param {?} srcPropertyName The name of the property on the object this alias points to\n * @param {?=} hard If true, will set a readonly property on the object that returns\n *        the value of the source property. Default: false\n * \n * Example:\n * let obj = new FluentAssign<any> ;\n * setAssignMethod(obj, 'myProp');\n * setAssignAlias(obj, 'myPropAlias', 'myProp');\n * obj.myPropAlias('someValue');\n * const result = obj.toJSON();\n * console.log(result); //{ myProp: 'someValue' }\n * result.myPropAlias // undefined\n * \n * \n * let obj = new FluentAssign<any> ;\n * setAssignMethod(obj, 'myProp');\n * setAssignAlias(obj, 'myPropAlias', 'myProp', true); // setting a hard alias.\n * obj.myPropAlias('someValue');\n * const result = obj.toJSON();\n * console.log(result); //{ myProp: 'someValue' }\n * result.myPropAlias // someValue\n * @return {?}\n */\nexport function setAssignAlias<T>(obj: T, propertyName: string,\n                                  srcPropertyName: string,\n                                  hard: boolean = false): void {\n  validateMethodName.call(obj, propertyName);\n\n  objectDefinePropertyValue(obj, propertyName, (value: any) => {\n    obj[srcPropertyName](value);\n    return obj;\n  });\n\n  if (hard === true) {\n    const /** @type {?} */ key = privateKey(propertyName), /** @type {?} */\n      srcKey = privateKey(srcPropertyName);\n\n    Object.defineProperty(obj, key, /** @type {?} */(( <any>{\n      configurable: false,\n      enumerable: false,\n      get: () => obj[srcKey]\n    })));\n  }\n}\n\n/**\n * Describes a fluent assign method.\n * A function that gets a value and returns the instance it works on.\n */\nexport interface FluentAssignMethod<T, Z> {\n  //TODO: Setting 'this' instead of Z does not work, this=ConfigSetter here...\n  (value: T): Z;\n}\n\n\nexport interface IFluentAssignFactory<Z> {\n  fluentAssign: Z;\n  setMethod(name: string, defaultValue?: any): IFluentAssignFactory<Z>;\n}\n/**\n * Represent a fluent API factory wrapper for defining FluentAssign instances.\n */\nexport class FluentAssignFactory<T> {\nprivate _fluentAssign: FluentAssign<T>;\n/**\n * @param {?=} fluentAssign\n */\nconstructor(fluentAssign?: FluentAssign<T>) {\n    this._fluentAssign =\n      fluentAssign instanceof FluentAssign ? fluentAssign : <any>new FluentAssign();\n  }\n/**\n * Create a setter method on the FluentAssign instance.\n * @param {?} name The name of the setter function.\n * @param {?=} defaultValue If set (not undefined) set's the value on the instance immediately.\n * @return {?}\n */\nsetMethod(name: string, defaultValue: any = undefined): FluentAssignFactory<T> {\n    setAssignMethod(this._fluentAssign, name);\n    if (defaultValue !== undefined) {\n      ( /** @type {?} */((<any>this._fluentAssign)))[name](defaultValue);\n    }\n    return this;\n  }\n/**\n * The FluentAssign instance.\n * @return {?}\n */\nget fluentAssign(): FluentAssign<T> {\n    return this._fluentAssign;\n  }\n}\n\nfunction FluentAssignFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nFluentAssignFactory.prototype._fluentAssign;\n}\n\n/**\n * Represent an object where every property is a function representing an assignment function.\n * Calling each function with a value will assign the value to the object and return the object.\n * Calling 'toJSON' returns an object with the same properties but this time representing the\n * assigned values.\n * \n * This allows setting an object in a fluent API manner.\n * Example:\n * let fluent = new FluentAssign<any>(undefined, ['some', 'went']);\n * fluent.some('thing').went('wrong').toJSON();\n * // { some: 'thing', went: 'wrong' }\n */\nexport class FluentAssign<T> {\nprivate __fluent$base__: new () => T;\n/**\n * Returns a FluentAssignFactory<FluentAssign<T>> ready to define a FluentAssign type.\n * @template T\n * @param {?=} defaultValues An object representing default values for the instance.\n * @param {?=} initialSetters A list of initial setters for the instance.\n * @return {?}\n */\nstatic compose<T>(defaultValues: T = undefined,\n                    initialSetters: string[] = undefined): FluentAssignFactory<T> {\n\n    return /** @type {?} */(( <any>FluentAssign.composeWith<FluentAssign<T>>(\n      new FluentAssign<T>(defaultValues, initialSetters))));\n  }\n/**\n * Returns a FluentAssignFactory<Z> where Z is an instance of FluentAssign<?> or a derived\n * class of it.\n * @template Z\n * @param {?} fluentAssign An instance of FluentAssign<?> or a derived class of FluentAssign<?>.\n * @return {?}\n */\nstatic composeWith<Z>(fluentAssign: Z): IFluentAssignFactory<Z> {\n    return /** @type {?} */(( <any>new FluentAssignFactory<any>( /** @type {?} */((<any>fluentAssign)))));\n  }\n/**\n *\n * @param {?=} defaultValues An object representing default values for the underlying object.\n * @param {?=} initialSetters A list of initial setters for this FluentAssign.\n * @param {?=} baseType the class/type to create a new base. optional, {} is used if not supplied.\n */\nconstructor(defaultValues: T | T[] = undefined,\n              initialSetters: string[] = undefined,\n              baseType: new () => T = undefined) {\n    if (Array.isArray(defaultValues)) {\n      (defaultValues as Array<any>).forEach(d => applyDefaultValues(this, d));\n    } else if (defaultValues) {\n      applyDefaultValues(this, defaultValues);\n    }\n\n    if (Array.isArray(initialSetters)) {\n\n      initialSetters.forEach(name => setAssignMethod(this, name));\n    }\n\n    if (baseType) {\n      this.__fluent$base__ = baseType;\n    }\n  }\n/**\n * @return {?}\n */\ntoJSON(): T {\n    return getAssignedPropertyNames(this)\n      .reduce((obj: T, name: string) => {\n        const /** @type {?} */ key = privateKey(name);\n        // re-define property descriptors (we dont want their value)\n        let /** @type {?} */ propDesc = Object.getOwnPropertyDescriptor(this, key);\n        if (propDesc) {\n          Object.defineProperty(obj, name, propDesc);\n        } else {\n          ( /** @type {?} */((<any>obj)))[name] = ( /** @type {?} */((<any>this)))[key];\n        }\n        return obj;\n      }, this.__fluent$base__ ? new this.__fluent$base__() : /** @type {?} */(( <any>{})));\n  }\n}\n\nfunction FluentAssign_tsickle_Closure_declarations() {\n/** @type {?} */\nFluentAssign.prototype.__fluent$base__;\n}\n\n"],"names":["CommonModule","NgModule","ANALYZE_FOR_ENTRY_COMPONENTS","EVENT_MANAGER_PLUGINS","DEFAULT_SETTERS","__extends","DEFAULT_VALUES","supportsKey","Injectable","isDoc","ReflectiveInjector","Injector","ApplicationRef","ViewChild","ViewContainerRef","ElementRef","Renderer","ViewEncapsulation","Component","TemplateRef","filter","Subject","Input","Directive","ComponentFactoryResolver"],"mappings":";;;;;;AoBCA,IAAM,cAAA,GAAiB,IAAA,CAAK;AAC5B,IAAM,cAAA,GAAiB,WAAA,CAAY;;;;;AAKnC,SAAA,kBAAA,CAHC,IAAA,EAGD;IACE,IAAI,CAHC,IAAC,EAAK;QAIT,MAHM,IAAI,KAAA,CAAM,uDAAC,CAAuD,CAAC;KAI1E;SAHM,IAAA,IAAK,IAAO,IAAA,EAAM;QAIvB,MAHM,IAAI,KAAA,CAAM,iBAGpB,GAHqB,IAAkB,GAGvC,oBAH2C,CAAoB,CAAC;KAI7D;CACF;;;;;;AAMD,SAAA,wBAAA,CAFC,OAAA,EAED;IACE,OAFO,MAAA,CAAO,mBAAC,CAAmB,OAAC,CAAO;SAGvC,MAFC,CAAM,UAAA,IAAC,EAEb,EAFoB,OAAA,cAAA,CAAe,IAAC,CAAI,IAAC,CAAI,CAE7C,EAF6C,CAAC;SAGzC,GAFC,CAAG,UAAA,IAAC,EAEV,EAFiB,OAAA,IAAA,CAAK,MAAC,CAAM,CAAC,CAAC,CAE/B,EAF+B,CAAC,CAAC;CAGhC;;;;;AAKD,SAAA,UAAA,CALC,IAAA,EAKD;IACE,OALO,cAAA,GAAiB,IAAA,CAAK;CAM9B;;;;;;;AAOD,SAAA,yBAAA,CAVC,GAAA,EAAA,YAAA,EAAA,KAAA,EAUD;IACE,MAAM,CAVC,cAAC,CAAc,GAAC,EAAI,YAAA,oBAAmB;QAW5C,YAAY,EAVE,KAAA;QAWd,UAAU,EAVE,KAAA;QAWZ,QAAQ,EAVE,KAAA;QAWV,KAAK,EAAT,KAAS;KACL,EAVA,CAAC;CAWJ;;;;;;;;AAQD,SAAA,kBAAA,CAVC,QAAA,EAAA,aAAA,EAUD;IACE,MAAM,CAVC,mBAAC,CAAmB,aAAC,CAAa;SAWtC,OAVC,CAAO,UAAA,IAAC,EAUd,EAVqB,OAAA,EAAM,QAAC,GAAS,UAAC,CAAU,IAAC,CAAI,CAAC,GAAG,EAAM,aAAC,GAAc,IAAC,CAAI,CAUnF,EAVmF,CAAC,CAAC;CAWpF;;;;;;;;;;;;;;;;;;;;;;AAsBD,SAAA,eAAA,CAXC,GAAA,EAAA,YAAA,EAAA,SAAA,EAWD;IAAA,IAAA,KAAA,GAAA,IAAA,CAWC;IAtBA,IAAD,SAAA,KAAA,KAAA,CAAA,EAAC,EAAA,SAAD,GAAA,KAAC,CAAD,EAAA;IAYE,kBAAkB,CAXC,IAAC,CAAI,GAAC,EAAI,YAAA,CAAa,CAAC;IAa3C,qBAXM,GAAA,GAAM,UAAA,CAAW,YAAC,CAAY,CAAC;IAYrC,yBAAyB,CAXC,GAAC,EAAI,YAAA,EAAc,UAAA,KAAQ,EAWvD;QACI,IAAI,SAXC,IAAY,KAAA,CAAK,cAAC,CAAc,GAAC,CAAG,EAAE;YAYzC,MAXM,IAAI,KAAA,CAAM,8BAWtB,GAXuB,YAA+B,GAWtD,mBAXkE,CAAmB,CAAC;SAYjF;QACD,GAAG,CAXC,GAAC,CAAG,GAAG,KAAA,CAAM;QAYjB,OAXO,GAAA,CAAI;KAYZ,CAXC,CAAC;CAYJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BD,SAAA,cAAA,CAZC,GAAA,EAAA,YAAA,EAaiC,eAAuB,EACvB,IAAqB,EAFvD;IAEkC,IAAlC,IAAA,KAAA,KAAA,CAAA,EAAkC,EAAA,IAAlC,GAAA,KAAuD,CAAvD,EAAA;IACE,kBAAkB,CAZC,IAAC,CAAI,GAAC,EAAI,YAAA,CAAa,CAAC;IAc3C,yBAAyB,CAZC,GAAC,EAAI,YAAA,EAAc,UAAA,KAAQ,EAYvD;QACI,GAAG,CAZC,eAAC,CAAe,CAAC,KAAC,CAAK,CAAC;QAa5B,OAZO,GAAA,CAAI;KAaZ,CAZC,CAAC;IAcH,IAAI,IAZC,KAAQ,IAAA,EAAM;QAajB,qBAZM,GAAA,GAAM,UAAA,CAAW,YAAC,CAAY,mBAalC,QAAM,GAZG,UAAA,CAAW,eAAC,CAAe,CAAC;QAcvC,MAAM,CAZC,cAAC,CAAc,GAAC,EAAI,GAAA,oBAAU;YAanC,YAAY,EAZE,KAAA;YAad,UAAU,EAZE,KAAA;YAaZ,GAAG,EAZE,YAYX,EAZiB,OAAA,GAAA,CAAI,QAAC,CAAM,CAY5B,EAZ4B;SAatB,EAZA,CAAC;KAaJ;CACF;;;;AAmBD,IAAA,mBAAA,IAAA,YAAA;;;;IAKA,SAAA,mBAAA,CAbG,YAAyC,EAa5C;QACI,IAAI,CAAC,aAAa;YAChB,YAAY,YAAY,YAAY,GAAG,YAAY,GAAQ,IAAI,YAAY,EAAE,CAAC;KACjF;;;;;;;IAOH,mBAAA,CAAA,SAAA,CAAA,SAZG,GAYH,UAZG,IAAA,EAAA,YAAA,EAYH;QAZG,IAAH,YAAA,KAAA,KAAA,CAAA,EAAG,EAAA,YAAH,GAAA,SAAG,CAAH,EAAA;QAaI,eAAe,CAZC,IAAC,CAAI,aAAC,EAAc,IAAA,CAAK,CAAC;QAa1C,IAAI,YAZC,KAAgB,SAAA,EAAW;YAa9B,EAZM,IAAC,CAAI,aAAC,GAAc,IAAC,CAAI,CAAC,YAAC,CAAY,CAAC;SAa/C;QACD,OAZO,IAAA,CAAK;KAab,CAAH;IAKA,MAAA,CAAA,cAAA,CAXG,mBAWH,CAAA,SAAA,EAAA,cAXG,EAWH;;;;;QAAA,GAAA,EAAA,YAAA;YACI,OAXO,IAAA,CAAK,aAAC,CAAa;SAY3B;;;KAAH,CAAA,CAAG;IACH,OAAA,mBAAC,CAAD;CA7BA,EA6BA,CAAA,CAAC;;;;;;;;;;;;;AAmBD,IAAA,YAAA,IAAA,YAAA;;;;;;;IA+BA,SAAA,YAAA,CAdG,aAAoC,EAezB,cAd2B,EAe3B,QAdwB,EAYtC;QAdG,IAAH,aAAA,KAAA,KAAA,CAAA,EAAG,EAAA,aAAH,GAAA,SAAuC,CAAvC,EAAA;QAec,IAAd,cAAA,KAAA,KAAA,CAAA,EAAc,EAAA,cAAd,GAAA,SAdyC,CAczC,EAAA;QACc,IAAd,QAAA,KAAA,KAAA,CAAA,EAAc,EAAA,QAAd,GAAA,SAdsC,CActC,EAAA;QAFA,IAAA,KAAA,GAAA,IAAA,CAiBG;QAdC,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;YAC/B,aAA4B,CAAC,OAAO,CAAC,UAAA,CAAC,EAA7C,EAAiD,OAAA,kBAAkB,CAAC,KAAI,EAAE,CAAC,CAAC,CAA5E,EAA4E,CAAC,CAAC;SACzE;aAAM,IAAI,aAAa,EAAE;YACxB,kBAAkB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;SACzC;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;YAEjC,cAAc,CAAC,OAAO,CAAC,UAAA,IAAI,EAAjC,EAAqC,OAAA,eAAe,CAAC,KAAI,EAAE,IAAI,CAAC,CAAhE,EAAgE,CAAC,CAAC;SAC7D;QAED,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;SACjC;KACF;;;;;;;;IAtDA,YAAH,CAAA,OAAG,GAeH,UAfG,aAAA,EAgBiB,cAAoC,EAhBxD;QAAG,IAAH,aAAA,KAAA,KAAA,CAAA,EAAG,EAAA,aAAH,GAAA,SAAG,CAAH,EAAA;QAgBoB,IAApB,cAAA,KAAA,KAAA,CAAA,EAAoB,EAAA,cAApB,GAAA,SAAwD,CAAxD,EAAA;QAEI,QAfY,YAAC,CAAY,WAAC,CAgBxB,IAfI,YAAA,CAAe,aAAE,EAAc,cAAA,CAAe,CAAC,EAAC;KAgBvD,CAAH;;;;;;;;IAPG,YAAH,CAAA,WAAG,GAeH,UAfG,YAAA,EAAH;QAgBI,QAfY,IAAI,mBAAA,mBAA8B,YAAC,EAAY,EAAC;KAgB7D,CAAH;;;;IA4BA,YAAA,CAAA,SAAA,CAAA,MAhBG,GAgBH,YAAA;QAAA,IAAA,KAAA,GAAA,IAAA,CAaG;QAZC,OAhBO,wBAAA,CAAyB,IAAC,CAAI;aAiBlC,MAhBC,CAAM,UAAC,GAAK,EAAG,IAAM,EAgB7B;YACQ,qBAhBM,GAAA,GAAM,UAAA,CAAW,IAAC,CAAI,CAAC;;YAkB7B,qBAhBI,QAAA,GAAW,MAAA,CAAO,wBAAC,CAAwB,KAAC,EAAK,GAAA,CAAI,CAAC;YAiB1D,IAAI,QAhBC,EAAS;gBAiBZ,MAAM,CAhBC,cAAC,CAAc,GAAC,EAAI,IAAA,EAAM,QAAA,CAAS,CAAC;aAiB5C;iBAhBM;gBAiBL,EAhBM,GAAC,GAAI,IAAC,CAAI,GAAG,EAAM,KAAC,GAAK,GAAC,CAAG,CAAC;aAiBrC;YACD,OAhBO,GAAA,CAAI;SAiBZ,EAhBE,IAAA,CAAK,eAAC,GAAiB,IAAI,IAAA,CAAK,eAAC,EAAe,IAAS,EAAC,CAAA,CAAE,CAAC;KAiBnE,CAAH;IACA,OAAA,YAAC,CAAD;CAlEA,EAkEA,CAAA,CAlEA;;;;;;;;;ADpMA,SAAA,MAAA,CAFC,EAAA,EAAA,EAAA,EAED;IACE,qBAFI,CAAA,IAAU,EAAC,CAAA,CAAE;IAGjB,KAAK,qBAFI,IAAA,IAAQ,EAAA,EAAI;QAGnB,IAAI,EAFC,CAAE,cAAC,CAAc,IAAC,CAAI,EAAE;YAG3B,EAFM,CAAC,GAAE,IAAC,CAAI,GAAG,EAAM,EAAC,GAAG,IAAC,CAAI,CAAC;SAGlC;KACF;IAED,KAAK,qBAFI,IAAA,IAAQ,EAAA,EAAI;QAGnB,IAAI,EAFC,CAAE,cAAC,CAAc,IAAC,CAAI,EAAE;YAG3B,EAFM,CAAC,GAAE,IAAC,CAAI,GAAG,EAAM,EAAC,GAAG,IAAC,CAAI,CAAC;SAGlC;KACF;IAED,OAFO,CAAA,CAAE;CAGV;;;;;;;;AAQD,SAAA,UAAA,CAFC,IAAA,EAAA,IAAA,EAED;IACE,OAFO,IAAA;SAGJ,MAFC,CAAM,IAAC,CAAI,MAAC,CAAM,UAAA,CAAC,EAEzB,EAF6B,OAAA,IAAA,CAAK,OAAC,CAAO,CAAC,CAAC,KAAK,CAAA,CAAE,CAEnD,EAFmD,CAAC,CAAC,CAAC;CAIrD;;;;;;;AAOD,SAAA,WAAA,CAFC,OAAA,EAAA,MAAA,EAED;IACE,IAAI,CAFC,KAAC,CAAK,OAAC,CAAO,MAAC,CAAM;QAAE,OAAO,MAAA,KAAW,IAAA,GAAO,KAAA,GAAQ,IAAA,CAAK;IAGlE,OAFO,MAAA,CAAO,OAAC,CAAO,OAAC,CAAO,GAAG,CAAA,CAAE,CAAC;CAGrC;;;;;;;;;;;;;;;;;;;AA4BD,IAAA,gBAAA,IAAA,YAAA;IAIA,SAAA,gBAAA,GAAA;QAAA,IAAA,KAAA,GAAA,IAAA,CAKG;QAJC,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,GAAG,EAAE,GAAG,EAAxC;YACM,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;SACnB,CAAC,CAAC;KACJ;IACH,OAAA,gBAAC,CAAD;CAVA,EAUA,CAAA,CAAC;;;;AAoBD,SAAA,IAAA,GAAA,GAXuB;;;;;;ADvEvB,SAAA,eAAA,CAHC,YAAA,EAGD;IACE,qBAHM,QAAA,GAAqB,WAAA,CAAY,YAAC,CAAY,CAAC;IAIrD,qBAHM,UAAA,GACF,QAAA,CAAS,GAAC,CAAGwB,sCAAC,CAAwB,CAAC,uBAAC,CAAuB,YAAC,CAAY,SAAC,CAAS,CAAC;IAK3F,IAAI,YAHC,CAAY,KAAC,EAAM;QAItB,OAHO,YAAA,CAAa,KAAC,CAAK,eAAC,CAIzB,UAAU,EACV,YAAY,CAHC,KAAC,CAAK,MAAC,EAIpB,QAAQ,EACR,YAAY,CAHC,gBAAC,CAIf,CAHC;KAIH;SAHM;QAIL,OAHO,UAAA,CAAW,MAAC,CAAM,QAAC,CAAQ,CAAC;KAIpC;CACF;;;;;AAKD,SAAA,WAAA,CANC,YAAA,EAMD;IACE,qBANM,WAAA,GAAc,YAAA,CAAa,QAAC,IAAW,YAAA,CAAa,KAAC,CAAK,cAAC,CAAc;IAO/E,OANO,KAAA,CAAM,OAAC,CAAO,YAAC,CAAY,QAAC,CAAQ,IAAI,YAAA,CAAa,QAAC,CAAQ,MAAC,GAAQ,CAAA;QAO5Ed,gCAAkB,CANC,qBAAC,CAAqB,YAAC,CAAY,QAAC,EAAS,WAAA,CAAY,GAAG,WAAA,CAAY;CAQ9F;;;;;;;;;;;;AD7CD,IAAA,kBAAA,IAAA,UAAA,MAAA,EAAA;IADC,SAAD,CAAA,kBAAA,EAAA,MAAA,CAAA,CAAC;;;;IAKD,SAAA,kBAAA,CAJG,KAAmB,EAItB;QAAA,IAAA,KAAA,GACI,MADJ,CAAA,IAAA,CAAA,IAAA,CACW,IADX,IAAA,CAOG;QAJC,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAG,kDAAkD,CAAC;SAC5D;QACD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;KACtB;IACH,OAAA,kBAAC,CAAD;CAZA,CADC,KAAA,CAaD,CAAA,CAZA;;;;;ADUA,IAAA,SAAA,IAAA,YAAA;;;;;IAwBA,SAAA,SAAA,CAGqB,OAAS,EAAgB,OAAU,EAHxD;QAGqB,IAArB,CAAA,OAAqB,GAAA,OAAA,CAAS;QAAgB,IAA9C,CAAA,OAA8C,GAAA,OAAA,CAAU;QAJ9C,IAAV,CAAA,eAAU,GAAyC,IAAI,gBAAA,EAAqB,CAAG;QACrE,IAAV,CAAA,UAAU,GAA4B,IAAIW,oBAAA,EAAa,CAAG;QAEtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;KACjD;IAKH,MAAA,CAAA,cAAA,CAGG,SAHH,CAAA,SAAA,EAAA,QAGG,EAHH;;;;;QAAA,GAAA,EAAA,YAAA;YACI,OAGO,IAAA,CAAK,eAAC,CAAe,OAAC,CAAO;SAFrC;;;KAAH,CAAA,CAAG;;;;;;IAMH,SAAA,CAAA,SAAA,CAAA,aAGG,GAHH,UAGG,KAAA,EAHH;QACI,IAAI,CAGC,UAAC,GAAY,KAAA,CAAM;KAFzB,CAAH;;;;;;IAMA,SAAA,CAAA,SAAA,CAAA,KAEG,GAFH,UAEG,MAAA,EAFH;QAAA,IAAA,KAAA,GAAA,IAAA,CAQG;QANA,IAAH,MAAA,KAAA,KAAA,CAAA,EAAG,EAAA,MAAH,GAAA,IAAG,CAAH,EAAA;QADI,qBAEM,MAAA,GAAS,YAFnB;YACM,KAAI,CAEC,OAAC,EAAO,CAAE;YADf,KAAI,CAEC,eAAC,CAAe,OAAC,CAAO,MAAC,CAAM,CAAC;SADtC,CAEC;QADF,IAAI,CAEC,SAAC,CAAiB,aAAE,CAAa;aADnC,IAEC,CAAI,UAAA,KAAC,EAFb,EAEqB,OAAA,KAAA,KAAU,IAAA,IAAQ,MAAA,EAAO,CAF9C,EAE8C,CAAE;aADzC,KAEC,CAAK,MAAC,CAAM,CAAC;KADlB,CAAH;;;;;;;;;IASA,SAAA,CAAA,SAAA,CAAA,OAEG,GAFH,YAAA;QAAA,IAAA,KAAA,GAAA,IAAA,CASG;QARC,qBAEM,QAAA,GAAW,YAFrB;YACM,KAAI,CAEC,OAAC,EAAO,CAAE;YADf,KAAI,CAEC,eAAC,CAAe,OAAC,CAAO,KAAC,CAAK,YAFzC,GAE+C,CAAG,CAAC;YAD7C,KAAI,CAEC,eAAC,CAAe,MAAC,EAAM,CAAE;SAD/B,CAEC;QADF,IAAI,CAEC,SAAC,CAAiB,eAAE,CAAe;aADrC,IAEC,CAAI,UAAA,KAAC,EAFb,EAEqB,OAAA,KAAA,KAAU,IAAA,IAAQ,QAAA,EAAS,CAFhD,EAEgD,CAAE;aAD3C,KAEC,CAAK,QAAC,CAAQ,CAAC;KADpB,CAAH;;;;;;IAMA,SAAA,CAAA,SAAA,CAAA,OAEG,GAFH,YAAA;QACI,IAAI,IAEC,CAAI,SAAC,KAAa,IAAA,EAAM;YAD3B,IAAI,CAEC,SAAC,GAAW,IAAA,CAAK;YADtB,IAAI,CAEC,UAAC,CAAU,IAAC,CAAI,IAAC,CAAI,CAAC;YAD3B,IAAI,CAEC,UAAC,CAAU,QAAC,EAAQ,CAAE;YAD3B,IAAI,CAEC,eAAC,CAAe,MAAC,CAAM,IAAI,kBAAA,EAAmB,CAAE,CAAC;SADvD;KACF,CAAH;;;;IAIA,SAAA,CAAA,SAAA,CAAA,OAAG,GAAH,YAAA;QAAA,IAAA,KAAA,GAAA,IAAA,CAYG;QAXC,IAAI,IAAC,CAAI,SAAC,KAAa,IAAA,EAAM;YAC3B,IAAI,CAAC,SAAC,GAAW,IAAA,CAAK;YAEtB,IAAI,OAAO,IAAA,CAAK,UAAC,CAAU,QAAC,CAAQ,UAAC,KAAc,UAAA,EAAY;gBAC7D,IAAI,CAAC,UAAC,CAAU,QAAC,CAAQ,UAAC,EAAU;qBACjC,KAAC,CAAM,YAAlB,GAAwB,CAAG;qBAChB,IAAC,CAAM,YAAlB,EAAwB,OAAA,KAAA,CAAK,QAAC,EAAQ,CAAtC,EAAsC,CAAE,CAAE;aACnC;iBAAM;gBACL,IAAI,CAAC,QAAC,EAAQ,CAAE;aACjB;SACF;KACF,CAAH;;;;IAEG,SAAH,CAAA,SAAA,CAAA,QAAG,GAEH,YAFA;QAGI,IAAI,CAFC,UAAC,CAAU,IAAC,CAAI,IAAC,CAAI,CAAC;QAG3B,IAAI,CAFC,UAAC,CAAU,QAAC,EAAQ,CAAE;QAG3B,IAAI,CAFC,UAAC,CAAU,OAAC,EAAO,CAAA;KAGzB,CAAH;;;;;;IAAG,SAAH,CAAA,SAAA,CAAA,SAAG,GAMH,UANG,IAAA,EAAH;QAOI,qBANM,KAAA,GAAQ,IAAA,CAAK,UAAC,mBAOd,EAAE,GANa,KAAA,IAAS,OAAO,KAAA,CAAM,IAAC,CAAI,KAAK,UAAA,IAAc,KAAA,CAAM,IAAC,CAAI,CAAC;QAQ/E,OANO,OAAA,CAAQ,OAAC,CAAO,EAAC,GAAI,EAAA,CAAG,IAAC,CAAI,KAAC,CAAK,GAAG,KAAA,CAAM,CAAC;KAOrD,CAAH;IACA,OAAA,SAAC,CAAD;CA3HA,EA2HA,CAAA,CA3HA;;ADGO,IAAI,YAAY,GAAQ,EAAE,CAAC;AAClC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC;AACvB,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;AACxB,YAAY,CAAC,OAAO,GAAG,CAAC,CAAC;AACzB,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;AAC3C,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;AAC7C,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;;;;AA0D/C,IAAA,eAAA,IAAA,YAAA;IAAA,SAAA,eAAA,GAAA;KAWC;;;;;;;;IAHD,eAAA,CAAA,SAAA,CAAA,MAZmB,GAYnB,UAZmB,SAAA,EAaM,KAAuB,EACvB,QAAmB,EAF5C,GAEgD,CAFhD;IAGA,OAAA,eAAC,CAAD;CAXA,EAWA,CAAA,CAXA;;AD5EA,IAAM,eAAA,GAAyD,EAAA,CAAG;;;;;AAKlE,SAAA,QAAA,CAFC,GAAA,EAED;IACE,OAFO,eAAA,CAAgB,GAAC,CAAG,GAAG,eAAA,CAAgB,GAAC,CAAG,CAAC,KAAC,EAAK,GAAI,EAAA,CAAG;CAGjE;;;;;;AAMD,SAAA,QAAA,CANC,GAAA,EAAA,KAAA,EAMD;IACE,IAAI,CANC,eAAC,CAAe,cAAC,CAAc,GAAC,CAAG,EAAE;QAOxC,eAAe,CANC,GAAC,CAAG,GAAG,EAAA,CAAG;KAO3B;IACD,eAAe,CANC,GAAC,CAAG,CAAC,IAAC,CAAI,KAAC,CAAK,CAAC;CAOlC;;;;;;AAMD,SAAA,QAAA,CAVC,GAAA,EAAA,KAAA,EAUD;IACI,IAAI,CAVC,KAAC,EAAM;QAWV,eAAe,CAVC,GAAC,CAAG,GAAG,EAAA,CAAG;KAW3B;SAVM;QAWL,qBAVM,IAAA,GAAO,eAAA,CAAgB,GAAC,CAAG,IAAI,EAAA,mBAW/B,GAAG,GAVG,IAAA,CAAK,OAAC,CAAO,KAAC,CAAK,CAAC;QAWhC,IAAI,GAVC,GAAK,CAAA,CAAE,EAAE;YAWZ,IAAI,CAVC,MAAC,CAAM,GAAC,EAAI,CAAA,CAAE,CAAC;SAWrB;KACF;CACJ;;;;;;;;;;AAUD,IARC,UAAA,GAAA,EAAA,QAAA,EAQD,QARC,EAAA,QAAA,EAQD,QARC,EAAA,QAAA,EAQD,QARC,EAAA,CAQD;;;;;;;AD9BA,IAAA,qBAAA,IAAA,YAAA;;;;;IAKA,SAAA,qBAAA,CAFG,EAAe,EAAY,SAAyB,EAEvD;QACI,IAAI,SAAS,IAAI,EAAE,CAAC,aAAa,EAAE;YACjC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;SAClE;KACF;IAAI,qBAAP,CAAA,UAAO,GAAoC;QAG3C,EAFE,IAAA,EAAME,uBAAA,EAAW,IAAA,EAAM,CAAA;oBAGvB,QAAQ,EAFE,yBAAA;iBAGX,EAFC,EAAG;KAGJ,CAFC;;;;IAED,qBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;QAKD,EAAC,IAAI,EAAER,wBAAU,GAAG;QACpB,EAAC,IAAI,EAAE,SAAS,GAAG;KAClB,CAAD,EAAC,CAAC;IACF,OAAA,qBAAC,CAAD;CAvBA,EAAA,CAAA,CAuBC;AArBD,IAiCA,aAAA,IAAA,YAAA;;;;IAeA,SAAA,aAAA,CAlBsB,KAAO,EAkB7B;QAlBsB,IAAtB,CAAA,KAAsB,GAAA,KAAA,CAAO;KAAiB;IAQ9C,MAAA,CAAA,cAAA,CAjBI,aAiBJ,CAAA,SAAA,EAAA,WAjBI,EAiBJ;;;;;QAAA,GAAA,EAAA,UAjBI,KAAA,EAiBJ;YACI,IAAI,CAjBC,UAAC,GAAY,KAAA,CAAM;YAkBxB,IAAI,KAjBC,EAAM;gBAkBT,UAAU,CAjBC,QAAC,CAAQ,KAAC,EAAM,IAAA,CAAK,KAAC,CAAK,CAAC;aAkBxC;SACF;;;KAAH,CAAA,CAAG;;;;IASH,aAAA,CAAA,SAAA,CAAA,WApBG,GAoBH,YAAA;QACI,IAAI,IApBC,CAAI,UAAC,EAAW;YAqBnB,UAAU,CApBC,QAAC,CAAQ,IAAC,CAAI,UAAC,EAAW,IAAA,CAAK,KAAC,CAAK,CAAC;SAqBlD;KACF,CAAH;IAnBO,aAAP,CAAA,UAAO,GAAoC;QAqB3C,EApBE,IAAA,EAAMQ,uBAAA,EAAW,IAAA,EAAM,CAAA;oBAqBvB,QAAQ,EApBE,iBAAA;iBAqBX,EApBC,EAAG;KAqBJ,CApBC;;;;IAED,aAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;QAuBD,EAAC,IAAI,EAAET,8BAAgB,GAAG;KACzB,CAAD,EAAC,CAAC;IArBK,aAAP,CAAA,cAAO,GAAyD;QAuBhE,WAAW,EAtBE,CAAA,EAAG,IAAA,EAAMQ,mBAAA,EAAO,IAAA,EAAM,CAAA,eAAE,EAAe,EAAG,EAAE;KAuBxD,CAtBC;IAuBF,OAAA,aAAC,CAAD;CAtCA,EAAA,CAAA,CAAA;;ADtCA,IAAM,cAAA,GAAiB,CAAA,QAAE,EAAS,KAAA,EAAO,IAAA,EAAM,GAAA,EAAK,EAAA,CAAG,CAAC;;;;;;;AAOxD,SAAA,QAAA,CALC,SAAA,EAAA,OAAA,EAAA,EAAA,EAKD;IACE,cAAc,CALC,OAAC,CAAQ,UAAA,CAAA,EAK1B;QACI,OAAO,CALC,gBAAC,CAAgB,CAAC,GAAG,CAAA,GAAI,SAAA,GAAY,SAAA,CAAU,WAAC,EAAW,EAAG,EAAA,EAAI,KAAA,CAAM,CAAC;KAMlF,CALC,CAAC;CAMJ;;;;;;;;;;;;;;;;;;AAkBD,IAAA,oBAAA,IAAA,YAAA;;;;;IAQA,SAAA,oBAAA,CAPwB,EAAI,EACJ,QAAU,EAMlC;QAPwB,IAAxB,CAAA,EAAwB,GAAA,EAAA,CAAI;QACJ,IAAxB,CAAA,QAAwB,GAAA,QAAA,CAAU;KAAS;;;;IAW3C,oBAAA,CAAA,SAAA,CAAA,yBATG,GASH,YAAA;QAAA,IAAA,KAAA,GAAA,IAAA,CAMG;QALC,IAAI,IATC,CAAI,YAAC;YAAa,OAAA;QAUvB,IAAI,CATC,YAAC,GAAc,IAAID,oBAAA,EAAyC,CAAG;QAUpE,IAAI,CATC,aAAC,GAAe,IAAA,CAAK,YAAC,CAAY,YAAC,EAAY,CAAE;QAUtD,QAAQ,CATC,eAAC,EAAgB,IAAA,CAAK,EAAC,CAAE,aAAC,EAAc,UAAA,CAAI,EASzD,EAT6E,OAAA,KAAA,CAAK,KAAC,CAAK,CAAC,CAAC,CAS1F,EAT0F,CAAC,CAAC;QAUxF,QAAQ,CATC,cAAC,EAAe,IAAA,CAAK,EAAC,CAAE,aAAC,EAAc,UAAA,CAAI,EASxD,EAT2E,OAAA,KAAA,CAAK,KAAC,CAAK,CAAC,CAAC,CASxF,EATwF,CAAC,CAAC;KAUvF,CAAH;;;;;;;IAOA,oBAAA,CAAA,SAAA,CAAA,QARG,GAQH,UARG,IAAA,EAAA,KAAA,EAQH;QACI,IAAI,CARC,QAAC,CAAQ,eAAC,CAAe,IAAC,CAAI,EAAC,CAAE,aAAC,EAAc,IAAA,EAAM,KAAA,CAAM,CAAC;QASlE,OARO,IAAA,CAAK;KASb,CAAH;;;;IAIA,oBAAA,CAAA,SAAA,CAAA,WAVG,GAUH,YAAA;QACI,IAAI,CAVC,EAAC,CAAE,aAAC,CAAa,WAAC,CAAW;KAWnC,CAAH;;;;;;IAMA,oBAAA,CAAA,SAAA,CAAA,QAdG,GAcH,UAdG,GAAA,EAAA,WAAA,EAcH;QAAA,IAAA,KAAA,GAAA,IAAA,CAIG;QAlBA,IAAH,WAAA,KAAA,KAAA,CAAA,EAAG,EAAA,WAAH,GAAA,KAAG,CAAH,EAAA;QAeI,GAAG,CAdC,KAAC,CAAK,GAAC,CAAG;aAeX,OAdC,CAAQ,UAAA,CAAA,EAchB,EAdqB,OAAA,KAAA,CAAK,QAAC,CAAQ,eAAC,CAAe,KAAC,CAAI,EAAC,CAAE,aAAC,EAAc,CAAA,EAAG,IAAA,CAAK,CAclF,EAdkF,CAAC,CAAE;QAejF,IAAI,WAdC;YAAY,IAAA,CAAK,WAAC,EAAW,CAAE;KAerC,CAAH;;;;;;IAMA,oBAAA,CAAA,SAAA,CAAA,WAlBG,GAkBH,UAlBG,GAAA,EAAA,WAAA,EAkBH;QAAA,IAAA,KAAA,GAAA,IAAA,CAIG;QAtBA,IAAH,WAAA,KAAA,KAAA,CAAA,EAAG,EAAA,WAAH,GAAA,KAAG,CAAH,EAAA;QAmBI,GAAG,CAlBC,KAAC,CAAK,GAAC,CAAG;aAmBX,OAlBC,CAAQ,UAAA,CAAA,EAkBhB,EAlBqB,OAAA,KAAA,CAAK,QAAC,CAAQ,eAAC,CAAe,KAAC,CAAI,EAAC,CAAE,aAAC,EAAc,CAAA,EAAG,KAAA,CAAM,CAkBnF,EAlBmF,CAAC,CAAE;QAmBlF,IAAI,WAlBC;YAAY,IAAA,CAAK,WAAC,EAAW,CAAE;KAmBrC,CAAH;;;;IAIA,oBAAA,CAAA,SAAA,CAAA,WApBG,GAoBH,YAAA;QACI,IAAI,IApBC,CAAI,YAAC,IAAe,CAAA,IAAE,CAAI,YAAC,CAAY,MAAC,EAAO;YAqBlD,IAAI,CApBC,YAAC,CAAY,QAAC,EAAQ,CAAE;SAqB9B;KACF,CAAH;;;;IAIA,oBAAA,CAAA,SAAA,CAAA,eAtBG,GAsBH,YAAA;QAAA,IAAA,KAAA,GAAA,IAAA,CAEG;QADC,OAtBOD,2BAAA,CAAO,IAAC,CAAI,IAAC,CAAI,aAAC,EAAc,UAAA,CAAA,EAsB3C,EAtBgD,OAAA,CAAA,CAAE,MAAC,KAAU,KAAA,CAAK,EAAC,CAAE,aAAC,CAsBtE,EAtBsE,CAAa,CAAC;KAuBjF,CAAH;;;;;;;;IAZG,oBAAH,CAAA,SAAA,CAAA,aAAG,GAoBH,UApBG,YAAA,EAAH;QAqBI,qBApBM,MAAA,GAAS,eAAA,CAAgB,YAAC,CAAY,CAAC;QAqB7C,MAAM,CApBC,iBAAC,CAAiB,aAAC,EAAa,CAAE;QAsBzC,OApBO,MAAA,CAAO;KAqBf,CAAH;;;;;IAjBG,oBAAH,CAAA,SAAA,CAAA,KAAG,GAsBH,UAtBG,KAAA,EAAH;QAwBI,IAAI,CAtBC,IAAC,CAAI,YAAC,CAAY,MAAC,EAAO;YAuB7B,IAAI,CAtBC,YAAC,CAAY,IAAC,CAAI,KAAC,CAAK,CAAC;SAuB/B;KACF,CAAH;IAEA,OAAA,oBAAC,CAAD;CA9FA,EA8FA,CAAA,CA9FA;;;;;;;;;;;;;;;AD/BA,IAAA,WAAA,IAAA,UAAA,MAAA,EAAA;IAECf,WAAD,CAAA,WAAA,EAAA,MAAA,CAAA,CAAC;;;;;IAKD,SAAA,WAAA,CADG,EAAe,EAAY,QAAU,EACxC;QAAA,IAAA,KAAA,GACI,MADJ,CAAA,IAAA,CAAA,IAAA,EACU,EAAE,EAAE,QAAQ,CAAC,IADvB,IAAA,CAYG;QAVC,KAAI,CAAC,yBAAyB,EAAE,CAAC;QAEjC,IAAM,KAAK,GAAG;YACZ,QAAQ,EAAE,UAAU;YACpB,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,MAAM;SACf,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,UAAA,CAAC,EAAjC,EAAqC,OAAA,KAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAA/D,EAA+D,CAAE,CAAC;;KAC/D;IAAI,WAAP,CAAA,UAAO,GAAoC;QAE3C,EADE,IAAA,EAAMa,uBAAA,EAAW,IAAA,EAAM,CAAA;oBAEvB,QAAQ,EADE,cAAA;oBAEV,IAAI,EADE;wBAEJ,cAAc,EADE,UAAA;wBAEhB,cAAc,EADE,UAAA;qBAEjB;oBACD,aAAa,EADED,+BAAA,CAAkB,IAAC;oBAElC,QAAQ,EADE,EAAA;iBAEX,EADC,EAAG;KAEJ,CADC;;;;IAED,WAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;QAID,EAAC,IARC,EAAAF,wBAAA,GAAA;QASF,EAAC,IAAI,EAAEC,sBAAQ,GAAG;KACjB,CAAD,EAAC,CAAC;IACF,OAAA,WAAC,CAAD;CAtCA,CAEC,oBAAA,CAFD,CAAA,CAAA;;;;;;;;;;;;;;;ADCA,IAAA,kBAAA,IAAA,UAAA,MAAA,EAAA;IAECX,WAAD,CAAA,kBAAA,EAAA,MAAA,CAAA,CAAC;;;;;;IAID,SAAA,kBAAA,CAFqB,MAAsB,EAG7B,EAFI,EAAY,QAAU,EACxC;QAAA,IAAA,KAAA,GAEI,MAFJ,CAAA,IAAA,CAAA,IAAA,EAEU,EAAE,EAAE,QAAQ,CAAC,IAFvB,IAAA,CAIG;QANkB,KAArB,CAAA,MAAqB,GAAA,MAAA,CAAsB;QAKvC,KAAI,CAAC,yBAAyB,EAAE,CAAC;;KAClC;IADI,kBAAP,CAAA,UAAO,GAAoC;QAG3C,EAFE,IAAA,EAAMa,uBAAA,EAAW,IAAA,EAAM,CAAA;oBAGvB,QAAQ,EAFE,sBAAA;oBAGV,IAAI,EAFE;wBAGJ,UAAU,EAFE,IAAA;wBAGZ,MAAM,EAFE,QAAA;qBAGT;oBACD,aAAa,EAFED,+BAAA,CAAkB,IAAC;oBAGlC,QAAQ,EAFE,2BAAA;iBAGX,EAFC,EAAG;KAGJ,CAFC;;;;IAED,kBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;QAKD,EAAC,IATC,EAAA,SAAA,GAAA;QAUF,EAAC,IAAI,EAAEF,wBAAU,GAAG;QACpB,EAAC,IAAI,EAAEC,sBAAQ,GAAG;KACjB,CAAD,EAAC,CAAC;IACF,OAAA,kBAAC,CAAD;CA9BA,CAEC,oBAAA,CAFD,CAAA,CAAA;;;;;;;;;;;;;;;;;ADYA,IAAM,KAAA,GAAiB,EAAE,OAAO,QAAA,KAAa,WAAA,IAAe,CAAA,QAAE,CAAQ,CAAC;;;;AAUvE,IAAA,YAAA,IAAA,UAAA,MAAA,EAAA;IAECX,WAAD,CAAA,YAAA,EAAA,MAAA,CAAA,CAAC;;;;;;;IASD,SAAA,YAAA,CAFsB,SAAyB,EACzB,GAAK,EAGb,EAFI,EAGJ,QAFU,EADxB;QAAA,IAAA,KAAA,GAII,MAJJ,CAAA,IAAA,CAAA,IAAA,EAIU,EAAE,EAAE,QAAQ,CAAC,IAJvB,IAAA,CAMG;QARmB,KAAtB,CAAA,SAAsB,GAAA,SAAA,CAAyB;QACzB,KAAtB,CAAA,GAAsB,GAAA,GAAA,CAAK;QAMvB,KAAI,CAAC,yBAAyB,EAAE,CAAC;;KAClC;;;;;;;;IAQH,YAAA,CAAA,SAAA,CAAA,eALG,GAKH,UACI,OAA8C,EAC9C,QAAuC,EAF3C;QAKI,qBALI,KAAW,CAAE;QAMjB,IAAI,OALO,OAAA,KAAY,QAAA,EAAU;YAM/B,KAAK,GALG,CAAE,CAAA,IAAE,CAAI,QAAC,CAAQ,UAAC,CAAU,IAAC,EAAK,EAKhD,GALgD,OAAW,CAAE,CAAC,CAAC,CAAE;SAM5D;aALM,IAAA,OAAK,YAAkBc,yBAAA,EAAa;YAMzC,KAAK,GALG,CAAE,IAAA,CAAK,GAAC,CAAG,kBAAC,CAAkB,OAAC,EAAQ,EAAE,SAAA,EAAW,IAAA,CAAK,SAAC,EAAS,CAAE,CAAC,SAAC,CAAS,CAAE;SAM3F;aALM;YAML,KAAK,GALG,CAAE,IAAA,CAAK,cAAC,CAAc,EAAE,SAAA,EAAW,OAAA,EAAS,QAAA,EAAU,QAAA,EAAS,CAAE,CAAC,SAAC,CAAS,CAAE;SAMvF;QAED,OALO,KAAA,CAAM;KAMd,CAAH;;;;;IAKA,YAAA,CAAA,SAAA,CAAA,cARG,GAQH,UARG,MAAA,EAQH;QACI,qBARM,GAAA,IAA0D,MAAC,CAAA,CAAM;QAUvE,IAAI,GARC,CAAG,QAAC,EAAS;YAShB,GAAG,CARC,QAAC,GAAUT,gCAAA,CAAmB,qBAAC,CAAqB,GAAC,CAAG,QAAC,EAAS,IAAA,CAAK,GAAC,CAAG,cAAC,CAAc,CAAC;SAShG;QAED,OARO,IAAA,CAAK,GAAC,CAAG,kBAAC,CAAkB,IAAC,CAAI,QAAC,EAAS;YAShD,SAAS,EARE,GAAA;SASZ,CARC,CAAC;KASJ,CAAH;;;;;;;;IAQA,YAAA,CAAA,SAAA,CAAA,YAdG,GAcH,UAdG,IAAA,EAAA,QAAA,EAAA,gBAAA,EAcH;QAdG,IAAH,QAAA,KAAA,KAAA,CAAA,EAAG,EAAA,QAAH,GAAA,EAAG,CAAH,EAAA;QAAG,IAAH,gBAAA,KAAA,KAAA,CAAA,EAAG,EAAA,gBAAH,GAAA,EAAG,CAAH,EAAA;QAeI,OAdO,MAcX,CAAA,SAAA,CAdiB,aAAC,CAclB,IAAA,CAAA,IAAA,EAdiC;YAe3B,SAAS,EAdE,IAAA;YAeX,KAAK,EAdE,IAAA,CAAK,QAAC;YAeb,QAAQ,EAAd,QAAc;YACR,gBAAgB,EAAtB,gBAAsB;SACjB,CAdC,CAAC;KAeJ,CAAH;;;;IAIA,YAAA,CAAA,SAAA,CAAA,UAhBG,GAgBH,YAAA;QAAA,IAAA,KAAA,GAAA,IAAA,CAUG;QATC,qBAhBM,KAAA,GAAQ;YAiBZ,QAAQ,EAhBE,OAAA;YAiBV,GAAG,EAhBE,CAAA;YAiBL,IAAI,EAhBE,CAAA;YAiBN,MAAM,EAhBE,CAAA;YAiBR,KAAK,EAhBE,CAAA;YAiBP,SAAS,EAhBE,IAAA;SAiBZ,CAhBC;QAiBF,MAAM,CAhBC,IAAC,CAAI,KAAC,CAAK,CAAC,OAAC,CAAQ,UAAA,CAAA,EAgBhC,EAhBqC,OAAA,KAAA,CAAK,QAAC,CAAQ,CAAC,EAAE,KAAA,CAAM,CAAC,CAAC,CAAC,CAgB/D,EAhB+D,CAAC,CAAE;KAiB/D,CAAH;;;;IAIA,YAAA,CAAA,SAAA,CAAA,aAlBG,GAkBH,YAAA;QAAA,IAAA,KAAA,GAAA,IAAA,CAYG;QAXC,qBAlBM,KAAA,GAAQ;YAmBZ,QAAQ,EAlBE,UAAA;YAmBV,QAAQ,EAlBE,QAAA;YAmBV,KAAK,EAlBE,MAAA;YAmBP,MAAM,EAlBE,MAAA;YAmBR,GAAG,EAlBE,CAAA;YAmBL,IAAI,EAlBE,CAAA;YAmBN,MAAM,EAlBE,CAAA;YAmBR,KAAK,EAlBE,CAAA;SAmBR,CAlBC;QAmBF,MAAM,CAlBC,IAAC,CAAI,KAAC,CAAK,CAAC,OAAC,CAAQ,UAAA,CAAA,EAkBhC,EAlBqC,OAAA,KAAA,CAAK,QAAC,CAAQ,CAAC,EAAE,KAAA,CAAM,CAAC,CAAC,CAAC,CAkB/D,EAlB+D,CAAC,CAAE;KAmB/D,CAAH;;;;;;;;;;;;;;;;;;;;;IAqBA,YAAA,CAAA,SAAA,CAAA,iBAjBG,GAiBH,UAjBG,IAAA,EAAA,KAAA,EAiBH;QACI,IAAI,CAjBC,QAAC,CAAQ,eAAC,CAAe,IAAC,CAAI,SAAC,CAAS,aAAC,EAAc,IAAA,EAAM,KAAA,CAAM,CAAC;QAkBzE,OAjBO,IAAA,CAAK;KAkBb,CAAH;;;;;;;;;IASA,YAAA,CAAA,SAAA,CAAA,gBAjBG,GAiBH,UAjBG,OAAA,EAiBH;QAAA,IAAA,KAAA,GAAA,IAAA,CAwCG;QAvCC,qBAjBI,MAAQ,CAAQ;QAkBpB,qBAjBM,UAAA,GAAa,UAAA,KAAA,EAiBvB,EAjBgC,OAAA,MAAA,IAAS,KAAA,CAAM,MAAU,CAAA,CAiBzD,EAjByD,CAAI;QAkBzD,qBAjBM,WAAA,GAAc,UAAA,KAAA,EAiBxB;YACM,IAAI,KAjBC,CAAI,SAAC,CAAS,OAAC,CAAO,UAAC,IAAa,CAAA,KAAE,CAAI,SAAC,CAAS,OAAC,CAAO,SAAC,CAAS,KAAC,CAAI,SAAC,CAAU,EAAE;gBAkB3F,OAAO;aACR;YAED,qBAjBI,OAAA,GAAe,KAAA,CAAM,MAAC,CAAM;;YAoBhC,IAAI,OAjBC,KAAW,MAAA;gBAAQ,OAAA;;;;YAsBxB,GAjBG;gBAkBD,IAAI,OAjBC,KAAW,OAAA,EAAS;oBAkBvB,OAAO;iBACR;aACF,QAjBC,OAAQ,CAAO,UAAC,KAAe,OAAA,GAAU,OAAA,CAAQ,UAAC,CAAU,EAAE;YAkBhE,KAAI,CAjBC,SAAC,CAAS,OAAC,EAAO,CAAE;SAkB1B,CAjBC;QAmBF,IAAI,KAjBC,EAAM;YAkBT,IAAI,CAjBC,SAAC,CAAS,SAAC,CAAS,SAAC,CAAS,YAiBzC;gBACQ,OAAO,CAjBC,mBAAC,CAAmB,OAAC,EAAQ,UAAA,EAAY,KAAA,CAAM,CAAC;gBAkBxD,OAAO,CAjBC,mBAAC,CAAmB,YAAC,EAAa,UAAA,EAAY,KAAA,CAAM,CAAC;gBAkB7D,QAAQ,CAjBC,mBAAC,CAAmB,OAAC,EAAQ,WAAA,EAAa,KAAA,CAAM,CAAC;gBAkB1D,QAAQ,CAjBC,mBAAC,CAAmB,UAAC,EAAW,WAAA,EAAa,KAAA,CAAM,CAAC;aAkB9D,CAjBC,CAAC;YAoBH,UAAU,CAjBC,YAiBjB;gBACQ,OAAO,CAjBC,gBAAC,CAAgB,WAAC,EAAY,UAAA,EAAY,KAAA,CAAM,CAAC;gBAkBzD,OAAO,CAjBC,gBAAC,CAAgB,YAAC,EAAa,WAAA,EAAa,KAAA,CAAM,CAAC;gBAkB3D,QAAQ,CAjBC,gBAAC,CAAgB,OAAC,EAAQ,WAAA,EAAa,KAAA,CAAM,CAAC;gBAkBvD,QAAQ,CAjBC,gBAAC,CAAgB,UAAC,EAAW,WAAA,EAAa,KAAA,CAAM,CAAC;aAkB3D,CAjBC,CAAC;SAkBJ;KACF,CAAH;;;;;;;IAOA,YAAA,CAAA,SAAA,CAAA,UAhBG,GAgBH,YAAA;QACI,qBAhBM,SAAA,GAAY,IAAI,gBAAA,EAAsB,CAAG;QAkB/C,IAAI,CAhBC,KAAC,CAAK,OAAC,CAAO,IAAC,CAAI,qBAAC,CAAqB,EAAE;YAiB9C,SAAS,CAhBC,OAAC,EAAO,CAAE;SAiBrB;aAhBM;;YAmBL,qBAhBI,IAAA,GAAK,UAAA,CAAW,YAgB1B;gBACQ,IAAE,GAhBG,IAAA,CAAK;gBAiBV,SAAS,CAhBC,MAAC,EAAM,CAAE;aAiBpB,EAhBE,IAAA,CAAK,CAAC;YAkBT,qBAhBM,OAAA,GAAU,YAgBtB;gBACQ,IAAI,IAhBC,KAAM,IAAA;oBAAM,OAAA;gBAkBjB,YAAY,CAhBC,IAAC,CAAE,CAAC;gBAiBjB,SAAS,CAhBC,OAAC,EAAO,CAAE;aAiBrB,CAhBC;YAkBF,OAAO,CAhBC,GAAC,CAAG,IAAC,CAAI,qBAAC,CAAqB,GAAC,CAAI,UAAA,EAAA,EAgBlD,EAhBwD,OAAA,EAAA,EAAG,CAgB3D,EAhB2D,CAAE,CAAE;iBAiBtD,IAhBC,CAAI,OAAC,CAAO;iBAiBb,KAhBC,CAAK,OAAC,CAAO,CAAC;SAkBnB;QAED,OAhBO,SAAA,CAAU,OAAC,CAAO;KAiB1B,CAAH;;;;;;;;;;IAUA,YAAA,CAAA,SAAA,CAAA,aAhBG,GAgBH,UAhBG,EAAA,EAgBH;QACI,IAAI,CAhBC,IAAC,CAAI,qBAAC,EAAsB;YAiB/B,IAAI,CAhBC,qBAAC,GAAuB,EAAA,CAAG;SAiBjC;QACD,IAAI,CAhBC,qBAAC,CAAqB,IAAC,CAAI,EAAC,CAAE,CAAC;KAiBrC,CAAH;;;;;IAKA,YAAA,CAAA,SAAA,CAAA,gBAnBG,GAmBH,UAnBG,KAAA,EAmBH;;QAEI,IAAI,CAnBC,IAAC,CAAI,SAAC,CAAS,OAAC,CAAO,SAAC,CAAS,IAAC,CAAI,SAAC,CAAS;YAAE,OAAA;QAsBvD,IAAI,WAnBC,CAAW,KAAC,CAAK,OAAC,oBAAa,IAAC,CAAI,SAAC,CAAS,OAAC,CAAO,QAAC,EAAQ,EAAE;YAoBpE,IAAI,CAnBC,SAAC,CAAS,OAAC,EAAO,CAAE;SAoB1B;KACF,CAAH;;;;IAIA,YAAA,CAAA,SAAA,CAAA,WArBG,GAqBH,YAAA;QACI,MAAJ,CAAA,SAAA,CArBU,WAAC,CAqBX,IAAA,CAAA,IAAA,CArBsB,CAAE;QAsBpB,IAAI,IArBC,CAAI,SAAC,CAAS,SAAC,KAAa,IAAA,EAAM;;;;;YA0BrC,IAAI,CArBC,SAAC,CAAS,OAAC,EAAO,CAAE;SAsB1B;KACF,CAAH;IApBO,YAAP,CAAA,UAAO,GAAoC;QAsB3C,EArBE,IAAA,EAAMQ,uBAAA,EAAW,IAAA,EAAM,CAAA;oBAsBvB,QAAQ,EArBE,eAAA;oBAsBV,IAAI,EArBE;wBAsBJ,gBAAgB,EArBE,0BAAA;qBAsBnB;oBACD,aAAa,EArBED,+BAAA,CAAkB,IAAC;oBAsBlC,QAAF,EAAA,yOAAA;iBACC,EArBC,EAAG;KAsBJ,CArBC;;;;IAED,YAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;QAwBD,EAAC,IAAI,EAAE,SAAS,GAAG;QACnB,EAAC,IAAI,EAAEH,8BAAgB,GAAG;QAC1B,EAAC,IAAI,EAAEC,wBAAU,GAAG;QACpB,EAAC,IAAI,EAAEC,sBAAQ,GAAG;KACjB,CAAD,EAAC,CAAC;IAtBK,YAAP,CAAA,cAAO,GAAyD;QAwBhE,WAAW,EAvBE,CAAA,EAAG,IAAA,EAAMH,uBAAA,EAAW,IAAA,EAAM,CAAA,WAAE,EAAY,EAAA,IAAE,EAAKE,wBAAA,EAAW,EAAC,EAAG,EAAE;QAwB7E,UAAU,EAvBE,CAAA,EAAG,IAAA,EAAMF,uBAAA,EAAW,IAAA,EAAM,CAAA,WAAE,EAAY,EAAA,IAAE,EAAKC,8BAAA,EAAiB,EAAC,EAAG,EAAE;QAwBlF,UAAU,EAvBE,CAAA,EAAG,IAAA,EAAMD,uBAAA,EAAW,IAAA,EAAM,CAAA,UAAE,EAAU,EAAG,EAAE;KAwBtD,CAvBC;IAwBF,OAAA,YAAC,CAAD;CAjRA,CAEC,oBAAA,CAFD,CAAA,CAAA;;ADhCA,IAAM,YAAA,GAAe,EAAA,CAAG;;;;AAIxB,IAAA,cAAA,IAAA,YAAA;IASA,SAAA,cAAA,GAAA;QACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAqB,CAAC;KAC/C;IANH,MAAA,CAAA,cAAA,CADG,cACH,CAAA,SAAA,EAAA,QADG,EACH;;;;QAAA,GAAA,EAAA,YAAA;YACI,OADO,IAAA,CAAK,MAAC,CAAM,MAAC,CAAM;SAE3B;;;KAAH,CAAA,CAAG;;;;;IASH,cAAA,CAAA,SAAA,CAAA,QAHG,GAGH,UAHG,MAAA,EAGH;QAHG,IAAH,MAAA,KAAA,KAAA,CAAA,EAAG,EAAA,MAAH,GAAA,IAAG,CAAH,EAAA;QAII,KAAK,qBAHI,CAAA,GAAE,CAAC,mBAAE,GAAA,GAAI,IAAC,CAAI,MAAC,CAAM,MAAC,EAAO,CAAA,GAAE,GAAC,EAAI,CAAA,EAAE,EAAG;YAIhD,IAAI,CAHC,MAAC,CAAM,GAAC,EAAG,CAAE,KAAC,CAAK,MAAC,CAAM,CAAC;SAIjC;KACF,CAAH;;;;;;IAMA,cAAA,CAAA,SAAA,CAAA,IAPG,GAOH,UAPG,SAAA,EAAA,KAAA,EAOH;QACI,IAAI,IAPC,CAAI,MAAC,CAAM,OAAC,CAAO,SAAC,CAAS,KAAK,CAAA,CAAE,EAAE;YAQzC,IAAI,CAPC,MAAC,CAAM,IAAC,CAAI,SAAC,CAAS,CAAC;YAQ5B,IAAI,CAPC,SAAC,CAAS,GAAC,CAAG,SAAC,EAAU,KAAA,IAAS,YAAA,CAAa,CAAC;SAQtD;KACF,CAAH;;;;;;;;IAQA,cAAA,CAAA,SAAA,CAAA,WARG,GAQH,UARG,SAAA,EAAA,KAAA,EAQH;QAAA,IAAA,KAAA,GAAA,IAAA,CAGG;QAFC,IAAI,CARC,IAAC,CAAI,SAAC,EAAU,KAAA,CAAM,CAAC;QAS5B,SAAS,CARC,SAAC,CAAS,SAAC,CAAS,YAQlC,EARwC,OAAA,KAAA,CAAK,MAAC,CAAM,SAAC,CAAS,CAQ9D,EAR8D,CAAC,CAAC;KAS7D,CAAH;;;;IAIA,cAAA,CAAA,SAAA,CAAA,GAVG,GAUH,YAAA;QACI,qBAVM,SAAA,GAAY,IAAA,CAAK,MAAC,CAAM,GAAC,EAAG,CAAE;QAWpC,IAAI,CAVC,SAAC,CAAS,MAAC,CAAM,SAAC,CAAS,CAAC;QAWjC,OAVO,SAAA,CAAU;KAWlB,CAAH;;;;;;IAMA,cAAA,CAAA,SAAA,CAAA,MAVG,GAUH,UAVG,SAAA,EAUH;QACI,qBAVI,GAAA,GAAM,IAAA,CAAK,OAAC,CAAO,SAAC,CAAS,CAAC;QAWlC,IAAI,GAVC,GAAK,CAAA,CAAE,EAAE;YAWZ,IAAI,CAVC,MAAC,CAAM,MAAC,CAAM,GAAC,EAAI,CAAA,CAAE,CAAC;YAW3B,IAAI,CAVC,SAAC,CAAS,MAAC,CAAM,SAAC,CAAS,CAAC;SAWlC;KACF,CAAH;;;;;IAKA,cAAA,CAAA,SAAA,CAAA,KAbG,GAaH,UAbG,KAAA,EAaH;QACI,OAbO,IAAA,CAAK,MAAC,CAAM,KAAC,CAAK,CAAC;KAc3B,CAAH;;;;;IAKA,cAAA,CAAA,SAAA,CAAA,OAhBG,GAgBH,UAhBG,SAAA,EAgBH;QACK,OAhBO,IAAA,CAAK,MAAC,CAAM,OAAC,CAAO,SAAC,CAAS,CAAC;KAiBxC,CAAH;;;;;IAKA,cAAA,CAAA,SAAA,CAAA,OAnBG,GAmBH,UAnBG,SAAA,EAmBH;QACI,OAnBO,IAAA,CAAK,SAAC,CAAS,GAAC,CAAG,SAAC,CAAS,CAAC;KAoBtC,CAAH;;;;;IAKA,cAAA,CAAA,SAAA,CAAA,OAtBG,GAsBH,UAtBG,KAAA,EAsBH;QACI,qBAtBI,GAAA,GAAM,EAAA,CAAG;QAuBb,IAAI,KAtBC,EAAM;YAuBT,IAAI,CAtBC,SAAC,CAAS,OAAC,CAAQ,UAAA,KAAE,EAAM,GAAA,EAsBtC;gBACQ,IAAI,KAtBC,KAAS,KAAA,EAAO;oBAuBnB,GAAG,CAtBC,IAAC,CAAI,GAAC,CAAG,CAAC;iBAuBf;aACF,CAtBC,CAAC;SAuBJ;QACD,OAtBO,GAAA,CAAI;KAuBZ,CAAH;;;;;IAKA,cAAA,CAAA,SAAA,CAAA,WAzBG,GAyBH,UAzBG,KAAA,EAyBH;QACI,qBAzBI,KAAA,GAAQ,CAAA,CAAE;QA0Bd,IAAI,KAzBC,EAAM;YA0BT,IAAI,CAzBC,SAAC,CAAS,OAAC,CAAQ,UAAA,KAAE,EAAM,GAAA,EAyBtC;gBACQ,IAAI,KAzBC,KAAS,KAAA,EAAO;oBA0BnB,KAAK,EAzBC,CAAE;iBA0BT;aACF,CAzBC,CAAC;SA0BJ;QACD,OAzBO,KAAA,CAAM;KA0Bd,CAAH;IACA,OAAA,cAAC,CAAD;CAnHA,EAmHA,CAAA,CAnHA;;ADEA,IAAM,MAAA,GAAS,IAAI,cAAA,EAAmB,CAAG;AACzC,IAAA,OAAA,IAAA,YAAA;;;;;IAWA,SAAA,OAAA,CAJsB,cAAgB,EAA2B,QAAU,EAI3E;QAJsB,IAAtB,CAAA,cAAsB,GAAA,cAAA,CAAgB;QAA2B,IAAjE,CAAA,QAAiE,GAAA,QAAA,CAAU;KAKxE;IARH,MAAA,CAAA,cAAA,CADG,OACH,CAAA,SAAA,EAAA,aADG,EACH;;;;QAAA,GAAA,EAAA,YAAA;YACI,OADO,MAAA,CAAO,MAAC,CAAM;SAEtB;;;KAAH,CAAA,CAAG;;;;;;;IAaH,OAAA,CAAA,SAAA,CAAA,SAHG,GAGH,UAHG,SAAA,EAGH;QACI,OAHO,MAAA,CAAO,OAAC,CAAO,SAAC,CAAS,KAAK,MAAA,CAAO,MAAC,GAAQ,CAAA,CAAE;KAIxD,CAAH;;;;;IAKA,OAAA,CAAA,SAAA,CAAA,aANG,GAMH,UANG,SAAA,EAMH;QACI,OANO,MAAA,CAAO,OAAC,CAAO,SAAC,CAAS,CAAC;KAOlC,CAAH;;;;;IAKA,OAAA,CAAA,SAAA,CAAA,gBATG,GASH,UATG,SAAA,EASH;QACI,OATO,MAAA,CAAO,WAAC,CAAW,MAAC,CAAM,OAAC,CAAO,SAAC,CAAS,CAAC,CAAC;KAUtD,CAAH;;;;;IAKA,OAAA,CAAA,SAAA,CAAA,QAZG,GAYH,UAZG,MAAA,EAYH;QAZG,IAAH,MAAA,KAAA,KAAA,CAAA,EAAG,EAAA,MAAH,GAAA,IAAG,CAAH,EAAA;QAaM,MAAM,CAZC,QAAC,CAAQ,MAAC,CAAM,CAAC;KAa3B,CAAH;;;;;;;;IAQA,OAAA,CAAA,SAAA,CAAA,IAZG,GAYH,UAZG,MAAA,EAAA,KAAA,EAYH;QAAA,IAAA,KAAA,GAAA,IAAA,CAgBG;QAfC,qBAZI,aAAA,GAAgB,MAAA,CAAO,aAAC,mBAaxB,UAAU,GAZ4B,EAAA,CAAG;QAc7C,IAAI,OAZO,aAAA,KAAkB,QAAA,EAAU;YAarC,UAAU,GAZG,UAAA,CAAW,QAAC,mBAAQ,aAAiB,EAAO,CAAC;SAa3D;aAZM,IAAA,KAAK,CAAK,OAAC,CAAO,aAAC,CAAa,EAAE;YAavC,UAAU,IAZG,aAAiB,CAAA,CAAI;SAanC;aAZM,IAAA,aAAK,EAAc;YAaxB,UAAU,IAZG,CAAA,aAAE,CAAiB,CAAA,CAAI;SAarC;aAZM;YAaL,UAAU,GAZG,CAAA,IAAE,CAAI,CAAC;SAarB;QAED,OAZO,UAAA;aAaJ,GAZC,CAAI,UAAA,EAAA,EAYZ,EAZkB,OAAA,KAAA,CAAK,aAAC,CAAa,MAAC,CAAM,QAAC,IAAW,KAAA,CAAK,cAAC,EAAe,EAAA,EAAI,MAAA,EAAQ,KAAA,CAAM,CAY/F,EAZ+F,CAAC,CAAC;KAa9F,CAAH;;;;;;;;IAVG,OAAH,CAAA,SAAA,CAAA,aAAG,GAkBH,UAlBG,QAAA,EAmBqB,KAAuB,EACvB,MAAqB,EACrB,KAAU,EArBlC;QAuBI,IAAI,MAlBC,CAAM,OAAC,EAAQ;YAmBlB,MAAM,CAlBC,OAAC,CAAO,SAAC,EAAS,CAAE;SAmB5B;QAED,IAAI,CAlBC,MAAC,CAAM,QAAC,EAAS;YAmBpB,MAAM,CAlBC,QAAC,GAAU,IAAA,CAAK,QAAC,CAAQ;SAmBjC;QANH,qBAVM,MAAA,GAAS,IAAI,SAAA,CAAc,IAAE,EAAK,MAAA,CAAO,OAAC,IAAU,EAAA,CAAG,CAAC;QAmB5D,MAAM,CAlBC,SAAC,GAAW,MAAA,CAAO,OAAC,IAAU,CAAA,CAAE,MAAC,CAAM,OAAC,CAAO,SAAC,CAAS;QAoBhE,qBAlBI,MAAA,GAAS,QAAA,CAAS,MAAC,CAAM,MAAC,EAAO,KAAA,EAAO,MAAA,CAAO,QAAC,CAAQ,CAAC;QAoB7D,MAAM,CAlBC,cAAC,CAAc,MAAC,EAAO,YAAA,EAAc,EAAA,KAAE,EAAM,MAAA,EAAO,CAAC,CAAC;QAmB7D,MAAM,CAlBC,WAAC,CAAW,MAAC,EAAO,KAAA,CAAM,CAAC;QAoBlC,OAlBO,MAAA,CAAO;KAmBf,CAAH;IAjBO,OAAP,CAAA,UAAO,GAAoC;QAmB3C,EAlBE,IAAA,EAAML,wBAAA,EAAW;KAmBlB,CAlBC;;;;IAED,OAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;QAqBD,EAAC,IAAI,EAAE,eAAe,GAAG;QACzB,EAAC,IAAI,EAAEG,sBAAQ,GAAG;KACjB,CAAD,EAAC,CAAC;IACF,OAAA,OAAC,CAAD;CA3GA,EAAA,CAAA,CAAA;;ADIA,IAAA,kBAAA,IAAA,YAAA;;;;;IAMA,SAAA,kBAAA,CAAsB,MAAQ,EAAwB,QAAU,EAAhE;QAAsB,IAAtB,CAAA,MAAsB,GAAA,MAAA,CAAQ;QAAwB,IAAtD,CAAA,QAAsD,GAAA,QAAA,CAAU;QAFtD,IAAV,CAAA,KAAU,GAAiB,EAAE,OAAO,QAAA,KAAa,WAAA,IAAe,CAAA,QAAE,CAAQ,CAAC;KAEF;;;;;;;IAQzE,kBAAA,CAAA,SAAA,CAAA,MANG,GAMH,UANG,MAAA,EAAA,KAAA,EAAA,QAAA,EAMH;QAAA,IAAA,KAAA,GAAA,IAAA,CA8BG;QA7BC,IAAI,CANC,QAAC,EAAS;YAOb,QAAQ,GANG,IAAA,CAAK,QAAC,CAAQ;SAO1B;QAED,qBANM,QAAA,GAAWD,gCAAA,CAAmB,OAAC,CAAO;YAO1C,EANE,OAAA,EAAS,SAAA,EAAW,QAAA,EAAU,MAAA,EAAO;SAOxC,CANC,CAAC;QAQH,qBANM,MAAA,GAAS,eAAA,CAAgB;YAO7B,SAAS,EANE,YAAA;YAOX,KAAK,EAAX,KAAW;YACL,QAAQ,EAAd,QAAc;YACR,QAAQ,EAAd,QAAc;SACT,CANC,CAAC;QAQH,IAAI,CANC,KAAC,EAAM;YAOV,IAAI,CANC,MAAC,CAAM,UAAC,CAAU,MAAC,CAAM,QAAC,CAAQ,CAAC;;YASxC,MAAM,CANC,SAAC,CAAS,SAAC,CAAU,YAMlC,EANwC,OAAA,KAAA,CAAK,MAAC,CAAM,UAAC,CAAU,MAAC,CAAM,QAAC,CAAQ,CAM/E,EAN+E,CAAC,CAAE;SAO7E;QAED,IAAI,KANC,IAAQ,MAAA,CAAO,SAAC,EAAU;YAO7B,KAAK,CANC,OAAC,CAAO,aAAC,CAAa,WAAC,CAAW,MAAC,CAAM,QAAC,CAAQ,aAAC,CAAa,CAAC;SAOxE;aANM,IAAA,IAAK,CAAI,KAAC,EAAM;YAOrB,QAAQ,CANC,IAAC,CAAI,WAAC,CAAW,MAAC,CAAM,QAAC,CAAQ,aAAC,CAAa,CAAC;SAO1D;QAED,OANO,MAAA,CAAO;KAOf,CAAH;IALO,kBAAP,CAAA,UAAO,GAAoC;QAO3C,EANE,IAAA,EAAMF,wBAAA,EAAW;KAOlB,CANC;;;;IAED,kBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;QASD,EAAC,IAAI,EAAEI,4BAAc,GAAG;QACxB,EAAC,IAAI,EAAED,sBAAQ,GAAG;KACjB,CAAD,EAAC,CAAC;IACF,OAAA,kBAAC,CAAD;CAvDA,EAAA,CAAA,CAAA;;;;;;;;;;;;ADbA,IAYA,sBAAA,IAAA,UAAA,MAAA,EAAA;IACCN,WAAD,CAAA,sBAAA,EAAA,MAAA,CAAA,CAAC;;;;IAGD,SAAA,sBAAA,CAFG,UAAuB,EAE1B;QAAA,IAAA,KAAA,GACI,MADJ,CAAA,IAAA,CAAA,IAAA,CACW,IADX,IAAA,CAGG;QADC,KAAI,CAAC,OAAO,GAAG,sBAAnB,GAA0C,UAAY,CAAC;;KACpD;IACH,OAAA,sBAAC,CAAD;CARA,CACC,KAAA,CAOD,CAAA,CAAC;;;;AAID,IAAA,KAAA,IAAA,YAAA;;;;IAIA,SAAA,KAAA,CAPqB,OAAS,EAO9B;QAPqB,IAArB,CAAA,OAAqB,GAAA,OAAA,CAAS;KAAQ;;;;IAWtC,KAAA,CAAA,SAAA,CAAA,KARG,GAQH,YAAA;QACI,MARM,IAAI,sBAAA,CAAuB,OAAC,CAAO,CAAC;KAS3C,CAAH;;;;IAIA,KAAA,CAAA,SAAA,CAAA,MAVG,GAUH,YAAA;QACI,MAVM,IAAI,sBAAA,CAAuB,QAAC,CAAQ,CAAC;KAW5C,CAAH;;;;IAIA,KAAA,CAAA,SAAA,CAAA,OAZG,GAYH,YAAA;QACI,MAZM,IAAI,sBAAA,CAAuB,SAAC,CAAS,CAAC;KAa7C,CAAH;;;;;;;IAOA,KAAA,CAAA,SAAA,CAAA,IAXG,GAWH,UAXG,OAAA,EAAA,MAAA,EAWH;QACI,MAAM,GAXG,MAAA,KAAU,EAAM,CAAA,CAAI;QAY7B,IAXI;YAYF,qBAXI,OAAA,GAAU,IAAA,CAAK,OAAC,CAAO,IAAC,CAAI,MAAC,EAAO,IAAA,CAAK,WAAC,CAAW,CAAC;YAa1D,IAAI,OAXC,CAAO,MAAC,GAAQ,CAAA,EAAG;gBAYtB,OAAO,CAXC,IAAC,CAAI,oKAa8B,CAXC,CAAC;aAY9C;;;YAGD,OAXO,OAAA,CAAQ,OAAC,CAYd,IAAI,CAXC,MAAC,CAAM,OAAC,CAAO,CAAC,CAAC,EAAE,OAAA,EAAS,MAAA,CAAO,QAAC,CAAQ,CAYlD,CAXC;SAaH;QAXC,OAAA,CAAQ,EAAE;YAYV,OAXO,OAAA,CAAQ,MAAC,CAAqB,CAAE,CAAC,CAAC;SAY1C;KAEF,CAAH;;;;;;;;;IASA,KAAA,CAAA,SAAA,CAAA,MAXsB,GAWtB,UAXsB,SAAA,EAYM,IAAsB,EACtB,QAAuC,EAFnE,GAEuE,CAFvE;;;;;;;IANG,KAAH,CAAA,SAAA,CAAA,cAAG,GAeH,UAfG,SAAA,EAAA,iBAAA,EAAH;QAgBI,qBAfM,CAAA,GAAIK,gCAAA,CAAmB,OAAC,CAAO,CAAC,EAAC,OAAC,EAAQ,SAAA,EAAW,QAAA,EAAU,SAAA,EAAU,CAAC,CAAC,CAAC;QAgBlF,OAfO,SAAA,CAAU,UAAC,CAAU,QAAC,CAAQ,YAAC,CAAc,iBAAE,EAAkB,CAAA,CAAE,CAAC;KAgB5E,CAAH;;;;;;;;;IAbG,KAAH,CAAA,SAAA,CAAA,eAAG,GAsBH,UACI,SAAyB,EACzB,kBAA4B,EAC5B,OAA8C,EAC9C,QAAuC,EA1B3C;QA4BI,qBAtBM,CAAA,GAAIA,gCAAA,CAAmB,OAAC,CAAO,CAAC,EAAC,OAAC,EAAQ,SAAA,EAAW,QAAA,EAAU,SAAA,EAAU,CAAC,CAAC;aAuB9E,MAtBC,CAAM,QAAC,IAAW,EAAA,CAAG,CAAC;QAwB1B,qBAtBI,KAAA,GAAe,SAAA,CAAU,UAAC,CAAU,QAAC,CAAQ,eAAC,CAAe,OAAC,EAAQ,CAAA,CAAE,CAAC;QAuB7E,OAtBO,SAAA,CAAU,UAAC,CAAU,QAAC,CAAQ,YAAC,CAAc,kBAAE,EAAmB,CAAA,EAAG,KAAA,CAAM,CAAC;KAuBpF,CAAH;;;;;;;;;;;IAVG,KAAH,CAAA,SAAA,CAAA,WAAG,GAqBH,UArBG,SAAA,EAAA,QAAA,EAAA,SAAA,EAAH;QAuBI,qBArBM,CAAA,GAAIA,gCAAA,CAAmB,OAAC,CAAO,CAAC,EAAC,OAAC,EAAQ,SAAA,EAAW,QAAA,EAAU,SAAA,EAAU,CAAC,CAAC,CAAC;QAuBlF,OArBO;YAsBL,WAAW,EArBE,SAAA,CAAU,UAAC,CAAU,QAAC,CAAQ,YAAC,CAAc,QAAE,EAAS,CAAA,CAAE;YAsBvE,YAAY,EArBE,SAAA,CAAU,UAAC,CAAU,QAAC,CAAQ,YAAC,CAAc,SAAE,EAAU,CAAA,CAAE;SAsB1E,CArBC;KAsBH,CAAH;IAEA,OAAA,KAAC,CAAD;CA/GA,EA+GA,CAAA,CA/GA;;;;;;ADdA,IADMD,OAAA,GAAiB,EAAE,OAAO,QAAA,KAAa,WAAA,IAAe,CAAA,QAAE,CAAQ,CAAC;AAGvE,IADM,QAAA,GAAW;IAEb,YAAY,EADE,OAAA;IAEd,gBAAgB,EADE,WAAA;IAElB,cAAc,EADE,SAAA;IAEjB,gBAAA,EADmB,WAAA;CAErB,CADC;;;;;;;;AASF,SAAA,+BAAA,CAAC,OAAA,EAAA,OAAA,EAAD;IACI,OAAO,UAAA,KAAE,EAAb;QACQ,qBAAI,OAAA,GAAU,KAAA,CAAM,MAAC,CAAM;QAC3B,GAAG;YACC,IAAI,OAAC,KAAW,OAAA,EAAS;gBACrB,OAAO;aACV;SACJ,QAAC,OAAQ,CAAO,UAAC,KAAe,OAAA,GAAU,OAAA,CAAQ,UAAC,CAAU,EAAE;QAEhE,OAAO,CAAC,KAAC,CAAK,CAAC;KAClB,CAAC;CACL;AACD,IAAA,qBAAA,IAAA,YAAA;IAEA,SAAA,qBAAA,GAAA;QACI,IAAI,CAACA,OAAK,IAAI,OAAO,QAAQ,CAAC,gBAAgB,KAAK,UAAU,EAAE;YAC3D,IAAI,CAAC,gBAAgB,GAAG,IAAW,CAAC;SACvC;KACA;;;;;IAKL,qBAAA,CAAA,SAAA,CAAA,QAAK,GAAL,UAAK,SAAA,EAAL;QACQ,OAAO,QAAA,CAAS,cAAC,CAAc,SAAC,CAAS,CAAC;KAC7C,CAAL;;;;;;;IAOA,qBAAA,CAAA,SAAA,CAAA,gBALK,GAKL,UALK,OAAA,EAAA,SAAA,EAAA,OAAA,EAKL;QACQ,qBALM,IAAA,GAAO,IAAA,CAAK,OAAC,CAAO,OAAC,EAAO,CAAE;;;;;;QAYpC,qBALM,aAAA,GAAgB,YAK9B;YACY,qBALM,QAAA,GAMJ,+BAA+B,CALC,OAAC,EAAQ,UAAA,GAAA,EAIvD,EAJ8D,OAAA,IAAA,CAAK,UAAC,CAAU,YAI9E,EAJoF,OAAA,OAAA,CAAQ,GAAC,CAAG,CAIhG,EAJgG,CAAC,CAIjG,EAJiG,CAAC,CAAC;;YAQvF,QAAQ,CALC,gBAAC,CAAgB,QAAC,CAAQ,SAAC,CAAS,EAAE,QAAA,EAAU,KAAA,CAAM,CAAC;YAMhE,OALO,YAKnB,EALyB,OAAA,QAAA,CAAS,mBAAC,CAAmB,QAAC,CAAQ,SAAC,CAAS,EAAE,QAAA,EAAU,KAAA,CAAM,CAK3F,EAL2F,CAAC;SAMnF,CALC;;;;;;;;;;;;QAkBF,OALO,IAAA,CAAK,iBAAC,CAAiB,YAKtC;YACY,qBALI,EAAI,CAAS;YAMjB,UAAU,CALC,YAKvB,EAL6B,OAAA,EAAA,GAAK,aAAA,EAAc,CAKhD,EALgD,EAAG,CAAA,CAAE,CAAC;YAM1C,OALO,YAKnB;gBACgB,IAAI,EALC;oBAAG,EAAA,EAAG,CAAE;aAMhB,CALC;SAML,CALC,CAAC;KAMN,CAAL;;;;;;;IAOA,qBAAA,CAAA,SAAA,CAAA,sBAVK,GAUL,UAVK,MAAA,EAAA,SAAA,EAAA,OAAA,EAUL;QACQ,MAVM,eAAA,CAAgB;KAWzB,CAAL;IATO,qBAAP,CAAA,UAAO,GAAoC;QAW3C,EAVE,IAAA,EAAMD,wBAAA,EAAW;KAWlB,CAVC;;;;IAED,qBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EAaA,CAbD,EAaC,CAAC;IACF,OAAA,qBAAC,CAAD;CAzEA,EAAA,CAAA,CAAA;;;;;;;;;;;;ADrCA,IAKa,cAAA,GAAiB;IAC5B,SAAS,EAAE,KAAA;IACX,UAAU,EAAE,IAAA;IACZ,QAAQ,EAAE,CAAA,EAAE,CAAE;IACd,WAAW,EAAE,SAAfD,cAAA,CAAoC,OAAS,EAA7C;QACI,OAAO,EAAgB,IAAC,CAAI,QAAC,GAAS,OAAC,CAAO,OAAC,CAAO,GAAG,CAAA,CAAE,CAAC;KAC7D;CACF,CAAC;AAEF,IAAM,eAAA,GAAkB;IACtB,WAAW;IACX,YAAY;IACZ,UAAU;CACX,CAAC;AACF,IAAA,cAAA,IAAA,YAAA;IAAA,SAAA,cAAA,GAAA;KAmCC;;;;IAZD,cAAA,CAAA,SAAA,CAAA,SACG,GADH,YAAA;QACI,IAAI,IACC,CAAI,UAAC,KAAc,KAAA;YAAtB,IAAI,CACC,UAAC,GAAY,IAAA,CAAK;QACzB,IAAI,IACC,CAAI,QAAC,KAAY,IAAA,EAAM;YAA1B,IAAI,CACC,QAAC,GAAU,EAAA,CAAG;SAApB;aACM,IAAA,OAAW,IAAA,CAAK,QAAC,KAAY,QAAA,EAAU;YAA5C,IAAI,CACC,QAAC,GAAU,mBAAS,IAAC,CAAI,QAAC,EAAQ,CAAC;SAAzC;aACM,IAAA,CAAK,KAAC,CAAK,OAAC,mBAAsB,IAAC,CAAI,QAAC,EAAQ,EAAE;YAAvD,IAAI,CACC,QAAC,GAAU,cAAA,CAAe,QAAC,CAAQ;SAAzC;KACF,CAAH;IACA,OAAA,cAAC,CAAD;CAnCA,EAmCA,CAAA,CAAC;;;;;AA+BD,IAAA,qBAAA,IAAA,UAAA,MAAA,EAAA;IAxBCF,WAAD,CAAA,qBAAA,EAAA,MAAA,CAAA,CAAC;;;;;;IAiDD,SAAA,qBAAA,CAzBG,aAAoC,EA0BzB,cAzB2B,EA0B3B,QAzBwB,EAuBtC;QAzBG,IAAH,aAAA,KAAA,KAAA,CAAA,EAAG,EAAA,aAAH,GAAA,SAAuC,CAAvC,EAAA;QA0Bc,IAAd,cAAA,KAAA,KAAA,CAAA,EAAc,EAAA,cAAd,GAAA,SAzByC,CAyBzC,EAAA;QACc,IAAd,QAAA,KAAA,KAAA,CAAA,EAAc,EAAA,QAAd,GAAA,SAzBsC,CAyBtC,EAAA;QACA,OAAI,MAAJ,CAAA,IAAA,CAAA,IAAA,EACM,MAAM,CAAM,cAAc,EAAE,aAAa,IAAI,EAAE,CAAC,EAChD,UAAU,CAAS,eAAe,EAAE,cAAc,IAAI,EAAE,CAAC,EACzD,QAAQ,IAAS,cAAc;SAChC,IAAL,IAAA,CAAA;KACG;;;;;;IAMH,qBAAA,CAAA,SAAA,CAAA,eAxBG,GAwBH,UAxBG,IAAA,EAwBH;QACI,OAxBO,MAAA,CAAO,IAAC,IAAO,EAAA,EAAI;YAyBxB,OAAO,EAxBE,IAAA,CAAK,MAAC,EAAM;SAyBtB,CAxBC,CAAC;KAyBJ,CAAH;IACA,OAAA,qBAAC,CAAD;CA5CA,CAxBC,YAAA,CAoED,CAAA,CAAC;;;;;;;;;;;;;;;AA6CD,SAAA,oBAAA,CAlDC,OAAA,EAAA,eAAA,EAAA,UAAA,EAkDD;IACE,OAlDO,IAAI,qBAAA,mBAA+C,OAAC,GAAQ,SAAA,EAAW,eAAA,CAAgB,CAAC,eAAC,CAAe,UAAC,CAAU,CAAC;CAmD5H;;;;;;;;;;;;AD/KD,IAGaC,gBAAA,GAAiB,EAAA,CAAG;AAEjC,IAAMF,iBAAA,GAAkB;IACpB,SAAS;CACZ,CAAC;AACF,IAAA,YAAA,IAAA,UAAA,MAAA,EAAA;IACCC,WAAD,CAAA,YAAA,EAAA,MAAA,CAAA,CAAC;IADD,SAAA,YAAA,GAAA;;KAOC;IAAD,OAAA,YAAC,CAAD;CAPA,CACC,cAAA,CAMD,CAAA,CAAC;;;;;AAgBD,IAAA,mBAAA,IAAA,UAAA,MAAA,EAAA;IATCA,WAAD,CAAA,mBAAA,EAAA,MAAA,CAAA,CAAC;;;;;;IAqBD,SAAA,mBAAA,CACQ,aAbyB,EAczB,cAb2B,EAc3B,QAbwB,EAUhC;QACQ,IAAR,aAAA,KAAA,KAAA,CAAA,EAAQ,EAAA,aAAR,GAAA,SAbiC,CAajC,EAAA;QACQ,IAAR,cAAA,KAAA,KAAA,CAAA,EAAQ,EAAA,cAAR,GAAA,SAbmC,CAanC,EAAA;QACQ,IAAR,QAAA,KAAA,KAAA,CAAA,EAAQ,EAAA,QAAR,GAAA,SAbgC,CAahC,EAAA;QAEA,OAAQ,MAAR,CAAA,IAAA,CAAA,IAAA,EACY,MAAM,CAAMC,gBAAc,EAAE,aAAa,IAAI,EAAE,CAAC,EAChD,UAAU,CAASF,iBAAe,EAAE,cAAc,IAAI,EAAE,CAAC,EACzD,QAAQ,CACX,IAJT,IAAA,CAAA;KAKK;IACL,OAAA,mBAAC,CAAD;CAvBA,CATC,qBAAA,CAgCD,CAAA,CAvBA;;;;;;;;;;;;AD5BA,IAOMA,iBAAA,GAAkB;IACtB,WAAW;CACZ,CAAC;AACF,IAAA,gBAAA,IAAA,UAAA,MAAA,EAAA;IACCC,WAAD,CAAA,gBAAA,EAAA,MAAA,CAAA,CAAC;IADD,SAAA,gBAAA,GAAA;;KAGC;IAAD,OAAA,gBAAC,CAAD;CAHA,CACC,YAAA,CAED,CAAA,CAAC;;;;;;;AAeD,IAAA,uBAAA,IAAA,UAAA,MAAA,EAAA;IAC0BA,WAA1B,CAAA,uBAAA,EAAA,MAAA,CAAA,CAAgD;;;;;;IAWhD,SAAA,uBAAA,CAVG,aAA8B,EAWnB,cAV2B,EAW3B,QAVwB,EAQtC;QAVG,IAAH,aAAA,KAAA,KAAA,CAAA,EAAG,EAAA,aAAH,GAAA,SAAiC,CAAjC,EAAA;QAWc,IAAd,cAAA,KAAA,KAAA,CAAA,EAAc,EAAA,cAAd,GAAA,SAVyC,CAUzC,EAAA;QACc,IAAd,QAAA,KAAA,KAAA,CAAA,EAAc,EAAA,QAAd,GAAA,SAVsC,CAUtC,EAAA;QACA,OAAI,MAAJ,CAAA,IAAA,CAAA,IAAA,EACM,aAAa,IAAS,EAAE,EACxB,UAAU,CAASD,iBAAe,EAAE,cAAc,IAAI,EAAE,CAAC,EACzD,QAAQ,CACT,IAJL,IAAA,CAAA;KAKG;;;;;;IAJA,uBAAH,CAAA,SAAA,CAAA,YAAG,GAUH,UAVG,MAAA,EAAH;QAWI,OAVO,EAAA,CAAG;KAWX,CAAH;;;;;;IAMA,uBAAA,CAAA,SAAA,CAAA,IATG,GASH,UATG,aAAA,EASH;QACI,qBATI,OAAA,GAAa,IAAA,CAAK,MAAC,EAAM,CAAE;QAW/B,IAAI,EATE,OAAC,CAAO,KAAC,YAAgB,KAAA,CAAM,EAAE;YAUrC,QATY,OAAC,CAAO,MAAC,CAAM,IAAI,KAAA,CAAM,6CAAC,CAA6C,CAAC,EAAC;SAUtF;QAED,qBATI,aAAA,GAA+B;YAUjC,OAAO,EATE,OAAA;YAUT,aAAa,EATE,aAAA;YAUf,QAAQ,EATE,OAAO,IAAA,CAAK,YAAC,KAAgB,UAAA,IAAc,IAAA,CAAK,YAAC,CAAY,OAAC,CAAO;SAUhF,CATC;QAWF,OATO,OAAA,CAAQ,KAAC,CAAK,IAAC,CAAI,OAAC,CAAO,SAAC,EAAU,aAAA,CAAc,CAAC;KAU7D,CAAH;IACA,OAAA,uBAAC,CAAD;CAjDA,CAC0B,mBAAmB,CAgD7C,CAAA,CAjDA;;ADnBA,IAAA,WAAA,IAAA,YAAA;IAAA,SAAA,WAAA,GAAA;KA8DC;;;;;;;;IAnDE,WAAH,CAAA,cAAG,GAHH,UAGG,eAAA,EAAH;QAFI,OAGO;YAFL,QAAQ,EAGE,WAAA;YAFV,SAAS,EAGE;gBAFT,EAAC,OAGC,EAAQF,0CAAA,EAA8B,QAAA,EAAU,eAAA,EAAiB,KAAA,EAAO,IAAA,EAAK;aAFhF;SACF,CAAA;KACF,CAAH;;;;;;IAUG,WAAH,CAAA,OAAG,GAJH,UAIG,eAAA,EAAH;QAHI,OAIO;YAHL,QAAQ,EAIE,WAAA;YAHV,SAAS,EAIE;gBAHT,EAAC,OAIC,EAAQ,eAAA,EAAiB,QAAA,EAAU,kBAAA,EAAmB;gBAHxD,EAAC,OAIC,EAAQC,8CAAA,EAAuB,QAAA,EAAU,qBAAA,EAAuB,KAAA,EAAO,IAAA,EAAK;gBAH9E,EAAC,OAIC,EAAQD,0CAAA,EAA8B,QAAA,EAAU,eAAA,IAAmB,EAAA,EAAI,KAAA,EAAO,IAAA,EAAK;aAHtF;SACF,CAIC;KAHH,CAAH;IAKO,WAAP,CAAA,UAAO,GAAoC;QAH3C,EAIE,IAAA,EAAMD,sBAAA,EAAU,IAAA,EAAM,CAAA;oBAHtB,YAAY,EAIE;wBAHZ,YAAY;wBACZ,WAAW;wBACX,kBAAkB;wBAClB,qBAAqB;wBACrB,aAAa;qBACd;oBACD,OAAO,EAIE,CAAED,4BAAA,CAAa;oBAHxB,OAAO,EAIE;wBAHP,WAAW;wBACX,kBAAkB;wBAClB,qBAAqB;wBACrB,aAAa;qBACd;oBACD,SAAS,EAIE;wBAHT,OAAO;qBACR;oBACD,eAAe,EAIE;wBAHf,YAAY;wBACZ,WAAW;wBACX,kBAAkB;qBACnB;iBACF,EAIC,EAAG;KAHJ,CAIC;;;;IAED,WAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EADA,CACD,EADC,CAAC;IACF,OAAA,WAAC,CAAD;CA9DA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}