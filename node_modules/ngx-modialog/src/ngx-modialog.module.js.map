{"version":3,"sources":["../../../src/ngx-modialog/src/ngx-modialog.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,4BAAA,EAA8B,QAAA,EAAoC,MAAA,eAAA,CAAA;AAC3E,OAAO,EAAE,YAAA,EAAa,MAAA,iBAAA,CAAA;AACtB,OAAO,EAAE,qBAAA,EAAsB,MAAA,2BAAA,CAAA;AAE/B,OAAO,EAAE,qBAAA,EAAuB,kBAAA,EAAmB,MAAA,mBAAA,CAAA;AACnD,OAAO,EAAE,eAAA,EAAgB,MAAA,iBAAA,CAAA;AACzB,OAAO,EAAE,WAAA,EAAa,kBAAA,EAAmB,MAAA,oBAAA,CAAA;AACzC,OAAO,EACL,OAAO,EACP,YAAY,EACZ,qBAAqB,EACrB,aAAa,EACd,MAAM,iBAAA,CAAkB;AACzB;IAAA;IA8DA,CAAC;IA7DD;;;;;;OAMG;IAIA,0BAAA,GAHH,UAGG,eAAA;QAFC,MAAM,CAGC;YAFL,QAAQ,EAGE,WAAA;YAFV,SAAS,EAGE;gBAFT,EAAC,OAGC,EAAQ,4BAAA,EAA8B,QAAA,EAAU,eAAA,EAAiB,KAAA,EAAO,IAAA,EAAK;aAFhF;SACF,CAAA;IACH,CAAC;IACH;;;;OAIG;IAKA,mBAAA,GAJH,UAIG,eAAA;QAHC,MAAM,CAIC;YAHL,QAAQ,EAIE,WAAA;YAHV,SAAS,EAIE;gBAHT,EAAC,OAIC,EAAQ,eAAA,EAAiB,QAAA,EAAU,kBAAA,EAAmB;gBAHxD,EAAC,OAIC,EAAQ,qBAAA,EAAuB,QAAA,EAAU,qBAAA,EAAuB,KAAA,EAAO,IAAA,EAAK;gBAH9E,EAAC,OAIC,EAAQ,4BAAA,EAA8B,QAAA,EAAU,eAAA,IAAmB,EAAA,EAAI,KAAA,EAAO,IAAA,EAAK;aAHtF;SACF,CAIC;IAHJ,CAAC;IAKI,sBAAA,GAAoC;QAH3C,EAIE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;oBAHtB,YAAY,EAIE;wBAHZ,YAAY;wBACZ,WAAW;wBACX,kBAAkB;wBAClB,qBAAqB;wBACrB,aAAa;qBACd;oBACD,OAAO,EAIE,CAAE,YAAA,CAAa;oBAHxB,OAAO,EAIE;wBAHP,WAAW;wBACX,kBAAkB;wBAClB,qBAAqB;wBACrB,aAAa;qBACd;oBACD,SAAS,EAIE;wBAHT,OAAO;qBACR;oBACD,eAAe,EAIE;wBAHf,YAAY;wBACZ,WAAW;wBACX,kBAAkB;qBACnB;iBACF,EAIC,EAAG;KAHJ,CAIC;IAHF;;OAEG;IAGF,0BAAA,GAAA,cAAA,OAAA,EADA,EACA,CADA,CAAC;IACF,kBAAC;CA9DD,AA8DC,IAAA;SA5DA,WAAA;AA8DD;IACA,gBAAgB;IAChB,WAAW,CAAC,UAAU,CAAC;IACvB;;;OAGG;IACH,WAAW,CAAC,cAAc,CAAC;AAC3B,CAAC","file":"ngx-modialog.module.js","sourceRoot":"","sourcesContent":["import { ANALYZE_FOR_ENTRY_COMPONENTS, NgModule, ModuleWithProviders, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';\n\nimport { DOMOutsideEventPlugin, DOMOverlayRenderer } from './providers/index';\nimport { OverlayRenderer } from './models/tokens';\nimport { CSSBackdrop, CSSDialogContainer } from './components/index';\nimport {\n  Overlay,\n  ModalOverlay,\n  OverlayDialogBoundary,\n  OverlayTarget\n} from './overlay/index';\nexport class ModalModule {\n/**\n * Returns a ModalModule pre-loaded with a list of dynamically inserted components.\n * Since dynamic components are not analysed by the angular compiler they must register manually\n * using entryComponents, this is an easy way to do it.\n * @param {?} entryComponents A list of dynamically inserted components (dialog's).\n * @return {?}\n */\nstatic withComponents(entryComponents: Array<Type<any> | any[]>): ModuleWithProviders {\n    return {\n      ngModule: ModalModule,\n      providers: [\n        {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: entryComponents, multi: true}\n      ]\n    }\n  }\n/**\n * Returns a NgModule for use in the root Module.\n * @param {?=} entryComponents A list of dynamically inserted components (dialog's).\n * @return {?} ModuleWithProviders\n */\nstatic forRoot(entryComponents?: Array<Type<any> | any[]>): ModuleWithProviders {\n    return {\n      ngModule: ModalModule,\n      providers: [\n        {provide: OverlayRenderer, useClass: DOMOverlayRenderer},\n        {provide: EVENT_MANAGER_PLUGINS, useClass: DOMOutsideEventPlugin, multi: true},\n        {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: entryComponents || [], multi: true}\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    ModalOverlay,\n    CSSBackdrop,\n    CSSDialogContainer,\n    OverlayDialogBoundary,\n    OverlayTarget\n  ],\n  imports: [ CommonModule ],\n  exports: [\n    CSSBackdrop,\n    CSSDialogContainer,\n    OverlayDialogBoundary,\n    OverlayTarget\n  ],\n  providers: [\n    Overlay\n  ],\n  entryComponents: [\n    ModalOverlay,\n    CSSBackdrop,\n    CSSDialogContainer\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ModalModule_tsickle_Closure_declarations() {\n/** @type {?} */\nModalModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nModalModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}