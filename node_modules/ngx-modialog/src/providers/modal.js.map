{"version":3,"sources":["../../../../src/ngx-modialog/src/providers/modal.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAGL,kBAAkB,EAEnB,MAAM,eAAe,CAAC;AAKvB,OAAO,EAAE,SAAA,EAAU,MAAA,sBAAA,CAAA;AAEnB;IACC,0CAAA;IAAD;;OAEG;IACH,gCAFG,UAAuB;QAE1B,YACI,iBAAO,SAER;QADC,KAAI,CAAC,OAAO,GAAG,yBAAuB,UAAY,CAAC;;IACrD,CAAC;IACH,6BAAC;AAAD,CARA,AAQC,CAPA,KAAA,GAOA;;AACD;;GAEG;AACH;IACA;;OAEG;IACH,eAPqB,OAAS;QAAT,YAAA,GAAA,OAAA,CAAS;IAAQ,CAAA;IAQtC;;OAEG;IACH,qBARG,GAQH;QACI,MARM,IAAI,sBAAA,CAAuB,OAAC,CAAO,CAAC;IAS5C,CAAC;IACH;;OAEG;IACH,sBAVG,GAUH;QACI,MAVM,IAAI,sBAAA,CAAuB,QAAC,CAAQ,CAAC;IAW7C,CAAC;IACH;;OAEG;IACH,uBAZG,GAYH;QACI,MAZM,IAAI,sBAAA,CAAuB,SAAC,CAAS,CAAC;IAa9C,CAAC;IACH;;;;;OAKG;IACH,oBAXG,GAWH,UAXG,OAAA,EAAA,MAAA;QAYC,MAAM,GAXG,MAAA,IAAO,CAAG,EAAM,CAAA,CAAI;QAY7B,IAXI,CAAA;YAYF,IAAI,gBAAgB,CAXhB,OAAA,GAAU,IAAA,CAAK,OAAC,CAAO,IAAC,CAAI,MAAC,EAAO,IAAA,CAAK,WAAC,CAAW,CAAC;YAa1D,EAAE,CAAC,CAAC,OAXC,CAAO,MAAC,GAAQ,CAAA,CAAE,CAAC,CAAA;gBAYtB,OAAO,CAXC,IAAC,CAAI,oKAa8B,CAXC,CAAC;YAY/C,CAAC;YACD,6EAA6E;YAC7E,yCAAyC;YACzC,MAAM,CAXC,OAAA,CAAQ,OAAC,CAYd,IAAI,CAXC,MAAC,CAAM,OAAC,CAAO,CAAC,CAAC,EAAE,OAAA,EAAS,MAAA,CAAO,QAAC,CAAQ,CAYlD,CAXC;QAaJ,CAAC;QAXC,KAAA,CAAA,CAAA,CAAQ,CAAC,CAAC,CAAA;YAYV,MAAM,CAXC,OAAA,CAAQ,MAAC,CAAqB,CAAE,CAAC,CAAC;QAY3C,CAAC;IAEH,CAAC;IACH;;;;;;;OAOG;IACH,sBAXsB,GAWtB,UAXsB,SAAA,EAYM,IAAsB,EACtB,QAAuC,IAAG,CAAC;IACvE;;;;;OAKG;IAdA,8BAAA,GAeH,UAfG,SAAA,EAAA,iBAAA;QAgBC,IAAM,gBAAgB,CAfhB,CAAA,GAAI,kBAAA,CAAmB,OAAC,CAAO,CAAC,EAAC,OAAC,EAAQ,SAAA,EAAW,QAAA,EAAU,SAAA,EAAU,CAAC,CAAC,CAAC;QAgBlF,MAAM,CAfC,SAAA,CAAU,UAAC,CAAU,QAAC,CAAQ,YAAC,CAAc,iBAAE,EAAkB,CAAA,CAAE,CAAC;IAgB7E,CAAC;IACH;;;;;;;OAOG;IArBA,+BAAA,GAsBH,UACI,SAAyB,EACzB,kBAA4B,EAC5B,OAA8C,EAC9C,QAAuC;QAEvC,IAAM,gBAAgB,CAtBhB,CAAA,GAAI,kBAAA,CAAmB,OAAC,CAAO,CAAC,EAAC,OAAC,EAAQ,SAAA,EAAW,QAAA,EAAU,SAAA,EAAU,CAAC,CAAC;aAuB9E,MAtBC,CAAM,QAAC,IAAW,EAAA,CAAG,CAAC;QAwB1B,IAAI,gBAAgB,CAtBhB,KAAA,GAAe,SAAA,CAAU,UAAC,CAAU,QAAC,CAAQ,eAAC,CAAe,OAAC,EAAQ,CAAA,CAAE,CAAC;QAuB7E,MAAM,CAtBC,SAAA,CAAU,UAAC,CAAU,QAAC,CAAQ,YAAC,CAAc,kBAAE,EAAmB,CAAA,EAAG,KAAA,CAAM,CAAC;IAuBrF,CAAC;IACH;;;;;;;;;OASG;IApBA,2BAAA,GAqBH,UArBG,SAAA,EAAA,QAAA,EAAA,SAAA;QAuBC,IAAM,gBAAgB,CArBhB,CAAA,GAAI,kBAAA,CAAmB,OAAC,CAAO,CAAC,EAAC,OAAC,EAAQ,SAAA,EAAW,QAAA,EAAU,SAAA,EAAU,CAAC,CAAC,CAAC;QAuBlF,MAAM,CArBC;YAsBL,WAAW,EArBE,SAAA,CAAU,UAAC,CAAU,QAAC,CAAQ,YAAC,CAAc,QAAE,EAAS,CAAA,CAAE;YAsBvE,YAAY,EArBE,SAAA,CAAU,UAAC,CAAU,QAAC,CAAQ,YAAC,CAAc,SAAE,EAAU,CAAA,CAAE;SAsB1E,CArBC;IAsBJ,CAAC;IAEH,YAAC;AAAD,CA/GA,AA+GC,IAAA;;AAED;IACA,gBAAgB;IAChB,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;AACxB,CAAC","file":"modal.js","sourceRoot":"","sourcesContent":["import {\n  ComponentRef,\n  TemplateRef,\n  ReflectiveInjector,\n  ResolvedReflectiveProvider, Type\n} from '@angular/core';\n\nimport { Overlay } from '../overlay/index';\nimport { Class, Maybe } from '../framework/utils';\nimport { OverlayConfig, ContainerContent } from '../models/tokens';\nimport { DialogRef } from '../models/dialog-ref';\nimport { ModalControllingContextBuilder } from '../models/overlay-context';\nexport class UnsupportedDropInError extends Error {\n/**\n * @param {?} dropInName\n */\nconstructor(dropInName: string) {\n    super();\n    this.message = `Unsupported Drop-In ${dropInName}`;\n  }\n}\n/**\n * @abstract\n */\nexport abstract class Modal {\n/**\n * @param {?} overlay\n */\nconstructor(public overlay: Overlay) { }\n/**\n * @return {?}\n */\nalert(): ModalControllingContextBuilder<any> {\n    throw new UnsupportedDropInError('alert');\n  }\n/**\n * @return {?}\n */\nprompt(): ModalControllingContextBuilder<any> {\n    throw new UnsupportedDropInError('prompt');\n  }\n/**\n * @return {?}\n */\nconfirm(): ModalControllingContextBuilder<any> {\n    throw new UnsupportedDropInError('confirm');\n  }\n/**\n * Opens a modal window inside an existing component.\n * @param {?} content The content to display, either string, template ref or a component.\n * @param {?=} config Additional settings.\n * @return {?}\n */\nopen(content: ContainerContent, config?: OverlayConfig): Promise<DialogRef<any>> {\n    config = config || /** @type {?} */(( {} as any));\n    try {\n      let /** @type {?} */ dialogs = this.overlay.open(config, this.constructor);\n\n      if (dialogs.length > 1) {\n        console.warn(`Attempt to open more then 1 overlay detected.\n        Multiple modal copies are not supported at the moment, \n        only the first viewContainer will display.`);\n      }\n      // TODO:  Currently supporting 1 view container, hence working on dialogs[0].\n      //        upgrade to multiple containers.\n      return Promise.resolve(\n        this.create(dialogs[0], content, config.bindings)\n      );\n\n    } catch ( /** @type {?} */e) {\n      return Promise.reject<DialogRef<any>>(e);\n    }\n\n  }\n/**\n * A Hook that enables derived classes to add content to the overlay.\n * @abstract\n * @param {?} dialogRef\n * @param {?} type\n * @param {?=} bindings\n * @return {?}\n */\ncreate(dialogRef: DialogRef<any>,\n                            type: ContainerContent,\n                            bindings?: ResolvedReflectiveProvider[]) {}\n/**\n * @template T\n * @param {?} dialogRef\n * @param {?} BackdropComponent\n * @return {?}\n */\nprotected createBackdrop<T>(dialogRef: DialogRef<any>, BackdropComponent: Class<T>): ComponentRef<T> {\n    const /** @type {?} */ b = ReflectiveInjector.resolve([{provide: DialogRef, useValue: dialogRef}]);\n    return dialogRef.overlayRef.instance.addComponent<T>(BackdropComponent, b);\n  }\n/**\n * @template T\n * @param {?} dialogRef\n * @param {?} ContainerComponent\n * @param {?} content\n * @param {?=} bindings\n * @return {?}\n */\nprotected createContainer<T>(\n    dialogRef: DialogRef<any>,\n    ContainerComponent: Class<T>,\n    content: string | TemplateRef<any> | Type<any>,\n    bindings?: ResolvedReflectiveProvider[]): ComponentRef<T> {\n\n    const /** @type {?} */ b = ReflectiveInjector.resolve([{provide: DialogRef, useValue: dialogRef}])\n      .concat(bindings || []);\n\n    let /** @type {?} */ nodes: any[] = dialogRef.overlayRef.instance.getProjectables(content, b);\n    return dialogRef.overlayRef.instance.addComponent<T>(ContainerComponent, b, nodes);\n  }\n/**\n * A helper function for derived classes to create backdrop & container\n * @deprecated use createBackdrop and createContainer instead\n * @template B, C\n * @param {?} dialogRef\n * @param {?} backdrop\n * @param {?} container \n * \n * @return {?}\n */\nprotected createModal<B, C>(dialogRef: DialogRef<any>, backdrop: Class<B>, container: Class<C>)\n                                : { backdropRef: ComponentRef<B>, containerRef: ComponentRef<C> } {\n    const /** @type {?} */ b = ReflectiveInjector.resolve([{provide: DialogRef, useValue: dialogRef}]);\n\n    return {\n      backdropRef: dialogRef.overlayRef.instance.addComponent<B>(backdrop, b),\n      containerRef: dialogRef.overlayRef.instance.addComponent<C>(container, b)\n    };\n  }\n\n}\n\nfunction Modal_tsickle_Closure_declarations() {\n/** @type {?} */\nModal.prototype.overlay;\n}\n\n"]}