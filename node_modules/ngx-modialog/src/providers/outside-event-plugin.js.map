{"version":3,"sources":["../../../../src/ngx-modialog/src/providers/outside-event-plugin.ts"],"names":[],"mappings":"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","file":"outside-event-plugin.js","sourceRoot":"","sourcesContent":["// heavily inspired by:\n// http://www.bennadel.com/blog/3025-creating-custom-dom-and-host-event-bindings-in-angular-2-beta-6.htm\n\n\nimport { Injectable } from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\nimport { noop } from '../framework/utils';\n\n// TODO: use DI factory for this.\n// TODO: consolidate dup code\nconst /** @type {?} */ isDoc: boolean = !(typeof document === 'undefined' || !document);\n\nconst /** @type {?} */ eventMap = {\n    clickOutside: 'click',\n    mousedownOutside: 'mousedown',\n    mouseupOutside: 'mouseup',\n    mousemoveOutside: 'mousemove'\n};\n/**\n * An event handler factory for event handlers that bubble the event to a given handler\n * if the event target is not an ancestor of the given element.\n * @param {?} element\n * @param {?} handler\n * @return {?}\n */\nfunction bubbleNonAncestorHandlerFactory(element: HTMLElement, handler: (event) => void) {\n    return (event) => {\n        let /** @type {?} */ current = event.target;\n        do {\n            if (current === element) {\n                return;\n            }\n        } while (current.parentNode && ( current = current.parentNode ));\n\n        handler(event);\n    };\n}\nexport class DOMOutsideEventPlugin { // extends EventManagerPlugin\n    manager: EventManager;\nconstructor() {\n    if (!isDoc || typeof document.addEventListener !== 'function') {\n        this.addEventListener = noop as any;\n    }\n    }\n/**\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string): boolean {\n        return eventMap.hasOwnProperty(eventName);\n    }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n        const /** @type {?} */ zone = this.manager.getZone();\n\n        // A Factory that registers the event on the document, instead of the element.\n        // the handler is created at runtime, and it acts as a propagation/bubble predicate, it will\n        // bubble up the event (i.e: execute our original event handler) only if the event targer\n        // is an ancestor of our element.\n        // The event is fired inside the angular zone so change detection can kick into action.\n        const /** @type {?} */ onceOnOutside = () => {\n            const /** @type {?} */ listener =\n              bubbleNonAncestorHandlerFactory(element, evt => zone.runGuarded(() => handler(evt)));\n\n            // mimic BrowserDomAdapter.onAndCancel\n            document.addEventListener(eventMap[eventName], listener, false);\n            return () => document.removeEventListener(eventMap[eventName], listener, false);\n        };\n\n        // we run the event registration for the document in a different zone, this will make sure\n        // change detection is off.\n        // It turns out that if a component that use DOMOutsideEventPlugin is built from a click\n        // event, we might get here before the event reached the document, causing a quick false\n        // positive handling (when stopPropagation() was'nt invoked). To workaround this we wait\n        // for the next vm turn and register.\n        // Event registration returns a dispose function for that event, angular use it to clean\n        // up after component get's destroyed. Since we need to return a dispose function\n        // synchronously we have to put a wrapper for it since we will get it asynchronously,\n        // i.e: after we need to return it.\n        //\n        return zone.runOutsideAngular(() => {\n            let /** @type {?} */ fn: Function;\n            setTimeout(() => fn = onceOnOutside(), 0);\n            return () => {\n                if (fn) fn();\n            };\n        });\n    }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddGlobalEventListener(target: string, eventName: string, handler: Function): Function {\n        throw 'not supported';\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DOMOutsideEventPlugin_tsickle_Closure_declarations() {\n/** @type {?} */\nDOMOutsideEventPlugin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDOMOutsideEventPlugin.ctorParameters;\n/** @type {?} */\nDOMOutsideEventPlugin.prototype.manager;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}