{"version":3,"sources":["../../../../src/ngx-modialog/src/overlay/overlay.component.ts"],"names":[],"mappings":"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","file":"overlay.component.js","sourceRoot":"","sourcesContent":["declare const clearTimeout: any;\n\nimport {\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  Injector,\n  ReflectiveInjector,\n  ResolvedReflectiveProvider,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  Renderer,\n  TemplateRef,\n  Type\n} from '@angular/core';\n\nimport { PromiseCompleter, supportsKey } from '../framework/utils';\nimport { DialogRef } from '../models/dialog-ref';\nimport { BaseDynamicComponent } from '../components/index';\n\n// TODO: use DI factory for this.\n// TODO: consolidate dup code\nconst /** @type {?} */ isDoc: boolean = !(typeof document === 'undefined' || !document);\n\nexport interface EmbedComponentConfig {\n  component: any;\n  bindings?: ResolvedReflectiveProvider[];\n  projectableNodes?: any[][];\n}\n/**\n * Represents the modal overlay.\n */\nexport class ModalOverlay extends BaseDynamicComponent {\nprivate beforeDestroyHandlers: Array<() => Promise<void>>;\npublic container: ElementRef;\npublic innerVcr: ViewContainerRef;\npublic template: TemplateRef<any>;\n/**\n * @param {?} dialogRef\n * @param {?} vcr\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(private dialogRef: DialogRef<any>,\nprivate vcr: ViewContainerRef,\n              el: ElementRef,\n              renderer: Renderer) {\n    super(el, renderer);\n    this.activateAnimationListener();\n  }\n/**\n * \\@internal\n * @template T\n * @param {?} content\n * @param {?=} bindings\n * @return {?}\n */\ngetProjectables<T> (\n    content: string | TemplateRef<any> | Type<any>,\n    bindings?: ResolvedReflectiveProvider[]): any[][] {\n\n\n    let /** @type {?} */ nodes: any[];\n    if (typeof content === 'string') {\n      nodes = [ [this.renderer.createText(null, `${content}`)] ];\n    } else if (content instanceof TemplateRef) {\n      nodes = [ this.vcr.createEmbeddedView(content, { dialogRef: this.dialogRef }).rootNodes ];\n    } else {\n      nodes = [ this.embedComponent({ component: content, bindings: bindings }).rootNodes ];\n    }\n\n    return nodes;\n  }\n/**\n * @param {?} config\n * @return {?}\n */\nembedComponent(config: EmbedComponentConfig): EmbeddedViewRef<EmbedComponentConfig> {\n    const /** @type {?} */ ctx: EmbedComponentConfig & { injector: Injector } = /** @type {?} */(( <any>config));\n\n    if (ctx.bindings) {\n      ctx.injector = ReflectiveInjector.fromResolvedProviders(ctx.bindings, this.vcr.parentInjector);\n    }\n\n    return this.vcr.createEmbeddedView(this.template, {\n      $implicit: ctx\n    });\n  }\n/**\n * @template T\n * @param {?} type\n * @param {?=} bindings\n * @param {?=} projectableNodes\n * @return {?}\n */\naddComponent<T>(type: any, bindings: ResolvedReflectiveProvider[] = [], projectableNodes: any[][] = []): ComponentRef<T> {\n    return super._addComponent<T>({\n      component: type,\n      vcRef: this.innerVcr,\n      bindings,\n      projectableNodes\n    });\n  }\n/**\n * @return {?}\n */\nfullscreen(): void {\n    const /** @type {?} */ style = {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      'z-index': 1500\n    };\n    Object.keys(style).forEach( k => this.setStyle(k, style[k]) );\n  }\n/**\n * @return {?}\n */\ninsideElement(): void {\n    const /** @type {?} */ style = {\n      position: 'absolute',\n      overflow: 'hidden',\n      width: '100%',\n      height: '100%',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    };\n    Object.keys(style).forEach( k => this.setStyle(k, style[k]) );\n  }\n/**\n * Set a specific inline style for the container of the whole dialog component\n * The dialog component root element is the host of this component, it contains only 1 direct\n * child which is the container.\n * \n * Structure:\n * \n * ```html\n * <modal-overlay>\n *   <div>\n *     <!-- BACKDROP ELEMENT -->\n *     <!-- DIALOG CONTAINER ELEMENT -->\n *   </div>\n * </modal-overlay>\n * ```\n * \n * @param {?} prop The style key\n * @param {?} value The value, undefined to remove\n * @return {?}\n */\nsetContainerStyle(prop: string, value: string): this {\n    this.renderer.setElementStyle(this.container.nativeElement, prop, value);\n    return this;\n  }\n/**\n * Define an element that click inside it will not trigger modal close.\n * Since events bubble, clicking on a dialog will bubble up to the overlay, a plugin\n * must define an element that represent the dialog, the overlay will make sure no to close when\n * it was clicked.\n * @param {?} element\n * @return {?}\n */\nsetClickBoundary(element: Element): void {\n    let /** @type {?} */ target: Element;\n    const /** @type {?} */ elListener = event => target = /** @type {?} */(( event.target as any));\n    const /** @type {?} */ docListener = event => {\n      if (this.dialogRef.context.isBlocking || !this.dialogRef.overlay.isTopMost(this.dialogRef) ) {\n        return;\n      }\n\n      let /** @type {?} */ current: any = event.target;\n\n      // on click, this will hit.\n      if (current === target) return;\n\n      // on mouse down -> drag -> release the current might not be 'target', it might be\n      // a sibling or a child (i.e: not part of the tree-up direction). It might also be a release\n      // outside the dialog... so we compare to the boundary element\n      do {\n        if (current === element) {\n          return;\n        }\n      } while (current.parentNode && ( current = current.parentNode ));\n      this.dialogRef.dismiss();\n    };\n\n    if (isDoc) {\n      this.dialogRef.onDestroy.subscribe(() => {\n        element.removeEventListener('click', elListener, false);\n        element.removeEventListener('touchstart', elListener, false);\n        document.removeEventListener('click', docListener, false);\n        document.removeEventListener('touchend', docListener, false);\n      });\n\n\n      setTimeout(() => {\n        element.addEventListener('mousedown', elListener, false);\n        element.addEventListener('touchstart', docListener, false);\n        document.addEventListener('click', docListener, false);\n        document.addEventListener('touchend', docListener, false);\n      });\n    }\n  }\n/**\n * Temp workaround for animation where destruction of the top level component does not\n * trigger child animations. Solution should be found either in animation module or in design\n * of the modal component tree.\n * @return {?}\n */\ncanDestroy(): Promise<void> {\n    const /** @type {?} */ completer = new PromiseCompleter<void>();\n\n    if (!Array.isArray(this.beforeDestroyHandlers)) {\n      completer.resolve();\n    } else {\n\n      // run destroy notification but protect against halt.\n      let /** @type {?} */ id = setTimeout(() => {\n        id = null;\n        completer.reject();\n      }, 1000);\n\n      const /** @type {?} */ resolve = () => {\n        if (id === null) return;\n\n        clearTimeout(id);\n        completer.resolve();\n      };\n\n      Promise.all(this.beforeDestroyHandlers.map( fn => fn() ))\n        .then(resolve)\n        .catch(resolve);\n\n    }\n\n    return completer.promise;\n  }\n/**\n * A handler running before destruction of the overlay\n * use to delay destruction due to animation.\n * This is part of the workaround for animation, see canDestroy.\n * \n * NOTE: There is no guarantee that the listeners will fire, use dialog.onDestory for that.\n * @param {?} fn\n * @return {?}\n */\nbeforeDestroy(fn: () => Promise<void>) {\n    if (!this.beforeDestroyHandlers) {\n      this.beforeDestroyHandlers = [];\n    }\n    this.beforeDestroyHandlers.push(fn);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\ndocumentKeypress(event: KeyboardEvent) {\n    // check that this modal is the last in the stack.\n    if (!this.dialogRef.overlay.isTopMost(this.dialogRef)) return;\n\n\n    if (supportsKey(event.keyCode, /** @type {?} */(( <any>this.dialogRef.context.keyboard)))) {\n      this.dialogRef.dismiss();\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    super.ngOnDestroy();\n    if (this.dialogRef.destroyed !== true) {\n      // if we're here the overlay is destroyed by an external event that is not user invoked.\n      // i.e: The user did no call dismiss or close and dialogRef.destroy() did not invoke.\n      // this will happen when routing or killing an element containing a blocked overlay (ngIf)\n      // we bail out, i.e gracefully shutting down.\n      this.dialogRef.bailOut();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'modal-overlay',\n  host: {\n    '(body:keydown)': 'documentKeypress($event)'\n  },\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './overlay.component.html'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DialogRef, },\n{type: ViewContainerRef, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'container': [{ type: ViewChild, args: ['container', {read: ElementRef}, ] },],\n'innerVcr': [{ type: ViewChild, args: ['innerView', {read: ViewContainerRef}, ] },],\n'template': [{ type: ViewChild, args: ['template', ] },],\n};\n}\n\nfunction ModalOverlay_tsickle_Closure_declarations() {\n/** @type {?} */\nModalOverlay.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nModalOverlay.ctorParameters;\n/** @type {?} */\nModalOverlay.propDecorators;\n/** @type {?} */\nModalOverlay.prototype.beforeDestroyHandlers;\n/** @type {?} */\nModalOverlay.prototype.container;\n/** @type {?} */\nModalOverlay.prototype.innerVcr;\n/** @type {?} */\nModalOverlay.prototype.template;\n/** @type {?} */\nModalOverlay.prototype.dialogRef;\n/** @type {?} */\nModalOverlay.prototype.vcr;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}