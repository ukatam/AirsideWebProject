{"version":3,"sources":["../../../../src/ngx-modialog/src/components/base-dynamic-component.ts"],"names":[],"mappings":"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","file":"base-dynamic-component.js","sourceRoot":"","sourcesContent":["import {\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Renderer\n} from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { filter } from 'rxjs/operator/filter';\n\nimport { createComponent, CreateComponentArgs } from '../framework/createComponent';\n\nconst /** @type {?} */ BROWSER_PREFIX = ['webkit', 'moz', 'MS', 'o', ''];\n/**\n * @param {?} eventName\n * @param {?} element\n * @param {?} cb\n * @return {?}\n */\nfunction register(eventName, element, cb) {\n  BROWSER_PREFIX.forEach( p => {\n    element.addEventListener(p ? p + eventName : eventName.toLowerCase(), cb, false);\n  });\n}\n/**\n * A base class for supporting dynamic components.\n * There are 3 main support areas:\n * 1 - Easy wrapper for dynamic styling via CSS classes and inline styles.\n * 2 - Easy wrapper for interception of transition/animation end events.\n * 3 - Easy wrapper for component creation and injection.\n * \n * Dynamic css is done via direct element manipulation (via renderer), it does not use change detection\n * or binding. This is to allow better control over animation.\n * \n * Animation support is limited, only transition/keyframes END even are notified.\n * The animation support is needed since currently the angular animation module is limited as well and\n * does not support CSS animation that are not pre-parsed and are not in the styles metadata of a component.\n * \n * Capabilities: Add/Remove styls, Add/Remove classes, listen to animation/transition end event,\n * add components\n */\nexport class BaseDynamicComponent implements OnDestroy {\n  animationEnd$: Observable<TransitionEvent | AnimationEvent>;\n\n  protected animationEnd: Subject<TransitionEvent | AnimationEvent>;\n/**\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected el: ElementRef,\n              protected renderer: Renderer) {}\n/**\n * @return {?}\n */\nactivateAnimationListener() {\n    if (this.animationEnd) return;\n    this.animationEnd = new Subject<TransitionEvent | AnimationEvent>();\n    this.animationEnd$ = this.animationEnd.asObservable();\n    register('TransitionEnd', this.el.nativeElement, (e: TransitionEvent) => this.onEnd(e));\n    register('AnimationEnd', this.el.nativeElement, (e: AnimationEvent) => this.onEnd(e));\n  }\n/**\n * Set a specific inline style on the overlay host element.\n * @param {?} prop The style key\n * @param {?} value The value, undefined to remove\n * @return {?}\n */\nsetStyle(prop: string, value: string): this {\n    this.renderer.setElementStyle(this.el.nativeElement, prop, value);\n    return this;\n  }\n/**\n * @return {?}\n */\nforceReflow() {\n    this.el.nativeElement.offsetWidth;\n  }\n/**\n * @param {?} css\n * @param {?=} forceReflow\n * @return {?}\n */\naddClass(css: string, forceReflow: boolean = false): void {\n    css.split(' ')\n      .forEach( c => this.renderer.setElementClass(this.el.nativeElement, c, true) );\n    if (forceReflow) this.forceReflow();\n  }\n/**\n * @param {?} css\n * @param {?=} forceReflow\n * @return {?}\n */\nremoveClass(css: string, forceReflow: boolean = false): void {\n    css.split(' ')\n      .forEach( c => this.renderer.setElementClass(this.el.nativeElement, c, false) );\n    if (forceReflow) this.forceReflow();\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this.animationEnd && !this.animationEnd.closed) {\n      this.animationEnd.complete();\n    }\n  }\n/**\n * @return {?}\n */\nmyAnimationEnd$(): Observable<AnimationEvent | TransitionEvent> {\n    return filter.call(this.animationEnd$, e => e.target === this.el.nativeElement);\n  }\n/**\n * Add a component, supply a view container ref.\n * Note: The components vcRef will result in a sibling.\n * @template T\n * @param {?} instructions\n * @return {?}\n */\nprotected _addComponent<T>(instructions: CreateComponentArgs): ComponentRef<T> {\n    const /** @type {?} */ cmpRef = createComponent(instructions);\n    cmpRef.changeDetectorRef.detectChanges();\n\n    return cmpRef;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onEnd(event: TransitionEvent | AnimationEvent): void {\n\n    if (!this.animationEnd.closed) {\n      this.animationEnd.next(event);\n    }\n  }\n\n}\n\nfunction BaseDynamicComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseDynamicComponent.prototype.animationEnd$;\n/** @type {?} */\nBaseDynamicComponent.prototype.animationEnd;\n/** @type {?} */\nBaseDynamicComponent.prototype.el;\n/** @type {?} */\nBaseDynamicComponent.prototype.renderer;\n}\n\n"]}