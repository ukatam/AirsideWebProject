{"version":3,"sources":["../../../../src/ngx-modialog/src/models/modal-context.ts"],"names":[],"mappings":";;;;;;;;;;AACA,OAAO,EAAE,MAAA,EAAQ,UAAA,EAAW,MAAA,sBAAA,CAAA;AAC5B,OAAO,EAAE,cAAA,EAAgB,qBAAA,EAAsB,MAAA,mBAAA,CAAA;AAE/C,MAAM,CAAC,IAAA,gBAAA,CAAM,cAAA,GAAiB,EAAA,CAAG;AAEjC,IAAM,gBAAgB,CAAhB,eAAA,GAAkB;IACpB,SAAS;CACZ,CAAC;AACF;IACC,gCAAA;IADD;;IAOA,CAAC;IAAD,mBAAC;AAAD,CAPA,AAOC,CANA,cAAA,GAMA;;AAED;IACA;;;;;OAKG;IACH,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC;AAC/B,CAAC;AAED;;;GAGG;AACH;IATC,uCAAA;IAgBD;;;;OAIG;IACH,6BACQ,aAbyB,EAczB,cAb2B,EAc3B,QAbwB;QAWxB,8BAAA,EAAA,yBAbyB;QAczB,+BAAA,EAAA,0BAb2B;QAc3B,yBAAA,EAAA,oBAbwB;eAexB,kBACI,MAAM,CAAM,cAAc,EAAE,aAAa,IAAI,EAAE,CAAC,EAChD,UAAU,CAAS,eAAe,EAAE,cAAc,IAAI,EAAE,CAAC,EACzD,QAAQ,CACX;IACL,CAAC;IACL,0BAAC;AAAD,CAvBA,AAuBC,CAhCA,qBAAA,GAgCA;;AAED;IACA;;;;;OAKG;IACH,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC;AACtC,CAAC","file":"modal-context.js","sourceRoot":"","sourcesContent":["import { FluentAssignMethod } from './../framework/fluent-assign';\nimport { extend, arrayUnion } from './../framework/utils';\nimport { OverlayContext, OverlayContextBuilder } from './overlay-context';\n\nexport const /** @type {?} */ DEFAULT_VALUES = {};\n\nconst /** @type {?} */ DEFAULT_SETTERS = [\n    'message'\n];\nexport class ModalContext extends OverlayContext {\n/**\n * The core message to display.\n * A modal might have an extended message (e.g: HTML message) or other fields (e.g: title) but\n * all models, at core, convey a message thus message is common to all modals.\n */\nmessage: string;\n}\n\nfunction ModalContext_tsickle_Closure_declarations() {\n/**\n * The core message to display.\n * A modal might have an extended message (e.g: HTML message) or other fields (e.g: title) but\n * all models, at core, convey a message thus message is common to all modals.\n * @type {?}\n */\nModalContext.prototype.message;\n}\n\n/**\n * A core context builder for a modal window instance, used to define the context upon\n * a modal choose it's behaviour.\n */\nexport class ModalContextBuilder<T extends ModalContext> extends OverlayContextBuilder<T> {\n/**\n * The core message to display.\n * A modal might have an extended message (e.g: HTML message) or other fields (e.g: title) but\n * all models, at core, convey a message thus message is common to all modals.\n */\nmessage: FluentAssignMethod<string, this>;\n/**\n * @param {?=} defaultValues\n * @param {?=} initialSetters\n * @param {?=} baseType\n */\nconstructor(\n        defaultValues: T | T[] = undefined,\n        initialSetters: string[] = undefined,\n        baseType: new () => T = undefined\n    ) {\n        super(\n            extend<any>(DEFAULT_VALUES, defaultValues || {}),\n            arrayUnion<string>(DEFAULT_SETTERS, initialSetters || []),\n            baseType\n        );\n    }\n}\n\nfunction ModalContextBuilder_tsickle_Closure_declarations() {\n/**\n * The core message to display.\n * A modal might have an extended message (e.g: HTML message) or other fields (e.g: title) but\n * all models, at core, convey a message thus message is common to all modals.\n * @type {?}\n */\nModalContextBuilder.prototype.message;\n}\n\n"]}