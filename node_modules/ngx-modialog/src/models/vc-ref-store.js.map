{"version":3,"sources":["../../../../src/ngx-modialog/src/models/vc-ref-store.ts"],"names":[],"mappings":"AAEA,IAAM,gBAAgB,CAAhB,eAAA,GAAyD,EAAA,CAAG;AAClE;;;GAGG;AACH,kBAFC,GAAA;IAGC,MAAM,CAFC,eAAA,CAAgB,GAAC,CAAG,GAAG,eAAA,CAAgB,GAAC,CAAG,CAAC,KAAC,EAAK,GAAI,EAAA,CAAG;AAGlE,CAAC;AACD;;;;GAIG;AACH,kBANC,GAAA,EAAA,KAAA;IAOC,EAAE,CAAC,CAAC,CANC,eAAC,CAAe,cAAC,CAAc,GAAC,CAAG,CAAC,CAAC,CAAA;QAOxC,eAAe,CANC,GAAC,CAAG,GAAG,EAAA,CAAG;IAO5B,CAAC;IACD,eAAe,CANC,GAAC,CAAG,CAAC,IAAC,CAAI,KAAC,CAAK,CAAC;AAOnC,CAAC;AACD;;;;GAIG;AACH,kBAVC,GAAA,EAAA,KAAA;IAWG,EAAE,CAAC,CAAC,CAVC,KAAC,CAAK,CAAC,CAAA;QAWV,eAAe,CAVC,GAAC,CAAG,GAAG,EAAA,CAAG;IAW5B,CAAC;IAVC,IAAA,CAAK,CAAA;QAWL,IAAM,gBAAgB,CAVhB,IAAA,GAAO,eAAA,CAAgB,GAAC,CAAG,IAAI,EAAA,EAAG,gBAAA,CAWlC,GAAG,GAVG,IAAA,CAAK,OAAC,CAAO,KAAC,CAAK,CAAC;QAWhC,EAAE,CAAC,CAAC,GAVC,GAAK,CAAA,CAAE,CAAC,CAAC,CAAA;YAWZ,IAAI,CAVC,MAAC,CAAM,GAAC,EAAI,CAAA,CAAE,CAAC;QAWtB,CAAC;IACH,CAAC;AACL,CAAC;AACD;;;;;;;;GAQG;AACH,MARC,CAAA,IAAA,UAAA,GAAA,EAAA,QAAA,UAAA,EAAA,QAAA,UAAA,EAAA,QAAA,UAAA,EAAA,CAAA","file":"vc-ref-store.js","sourceRoot":"","sourcesContent":["import { ViewContainerRef } from '@angular/core';\n\nconst /** @type {?} */ vcRefCollection: { [key: string]: ViewContainerRef[] } = {};\n/**\n * @param {?} key\n * @return {?}\n */\nfunction getVCRef(key: string): ViewContainerRef[] {\n  return vcRefCollection[key] ? vcRefCollection[key].slice() : [];\n}\n/**\n * @param {?} key\n * @param {?} vcRef\n * @return {?}\n */\nfunction setVCRef(key: string, vcRef: ViewContainerRef): void {\n  if (!vcRefCollection.hasOwnProperty(key)) {\n    vcRefCollection[key] = [];\n  }\n  vcRefCollection[key].push(vcRef);\n}\n/**\n * @param {?} key\n * @param {?=} vcRef\n * @return {?}\n */\nfunction delVCRef(key: string, vcRef?: ViewContainerRef): void {\n    if (!vcRef) {\n      vcRefCollection[key] = [];\n    } else {\n      const /** @type {?} */ coll = vcRefCollection[key] || [], /** @type {?} */\n            idx = coll.indexOf(vcRef);\n      if (idx > -1) {\n        coll.splice(idx, 1);\n      }\n    }\n}\n/**\n * A Simple store that holds a reference to ViewContainerRef instances by a user defined key.\n * This, with the OverlayTarget directive makes it easy to block the overlay inside an element\n * without having to use the angular query boilerplate.\n *  getVCRef: (function(string): ViewContainerRef), \n *  setVCRef: (function(string, ViewContainerRef): void), \n *  delVCRef: (function(string): void)\n *  }}\n */\nexport const vcRefStore = { getVCRef, setVCRef, delVCRef };\n"]}