{"version":3,"file":"index.js","sourceRoot":"","sources":["btoth/Repositories/proj/angular2-cool-loading-indicator/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CoolHttpModule, CoolHttp, IRequestInterceptor, IResponseInterceptor } from 'angular2-cool-http';\n\nconst DEFAULT_INDICATOR_DELAY = 500;\n\n@Component({\n  selector: 'cool-loading-indicator',\n  template: `\n        <div *ngIf=\"showIndicator\" class=\"cool-loading-indicator\">\n            <ng-content></ng-content>\n        </div>\n    `\n})\nexport class CoolLoadingIndicator implements OnInit, OnDestroy, IRequestInterceptor, IResponseInterceptor {\n  private _attachedTo: CoolHttp[] = [];\n\n  coolHttp: CoolHttp;\n\n  showIndicatorCounter: number = 0;\n  showIndicator: boolean = false;\n\n  @Input()\n  indicatorDelay: number;\n\n  constructor(coolHttp: CoolHttp) {\n    this.coolHttp = coolHttp;\n  }\n\n  ngOnInit() {\n    this.attachTo(this.coolHttp);\n  }\n\n  beforeRequestAsync() {\n    let that = this;\n\n    this.showIndicatorCounter++;\n\n    if(this.indicatorDelay) {\n      setTimeout(() => {\n        if(that.shouldShowIndicator) {\n          this.showIndicator = true;\n        }\n      }, this.indicatorDelay || DEFAULT_INDICATOR_DELAY);\n    }\n    else if(this.shouldShowIndicator) {\n      this.showIndicator = true;\n    }\n\n    return Promise.resolve(false);\n  }\n\n  afterResponseAsync() {\n    this.showIndicatorCounter--;\n\n    if(this.shouldHideIndicator) {\n      this.showIndicator = false;\n    }\n\n    return Promise.resolve(false);\n  }\n\n  get shouldShowIndicator() {\n    return this.showIndicatorCounter > 0;\n  }\n\n  get shouldHideIndicator() {\n    return this.showIndicatorCounter < 1;\n  }\n\n  attachTo(http: CoolHttp) {\n    this._attachedTo.push(http);\n\n    http.registerRequestInterceptor(this);\n\n    http.registerResponseInterceptor(this);\n  }\n\n  ngOnDestroy() {\n    for (const http of this._attachedTo) {\n      http.deregisterRequestInterceptor(this);\n\n      http.deregisterResponseInterceptor(this);\n    }\n\n    this._attachedTo.length = 0;\n  }\n}\n\n@NgModule({\n  exports: [CoolLoadingIndicator],\n  imports: [CommonModule, CoolHttpModule],\n  declarations: [CoolLoadingIndicator]\n})\nexport class CoolLoadingIndicatorModule {}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}